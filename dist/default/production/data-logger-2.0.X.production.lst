

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 16:39:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000DBA                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _BLUETOOTH_PIN_COMM
    77  000DBA  41                 	db	65
    78  000DBB  54                 	db	84
    79  000DBC  2B                 	db	43
    80  000DBD  50                 	db	80
    81  000DBE  49                 	db	73
    82  000DBF  4E                 	db	78
    83  000DC0  58                 	db	88
    84  000DC1  59                 	db	89
    85  000DC2  5A                 	db	90
    86  000DC3  57                 	db	87
    87  000DC4  00                 	db	0
    88                           
    89                           ;initializer for _BLUETOOTH_NAME_COMM
    90  000DC5  41                 	db	65
    91  000DC6  54                 	db	84
    92  000DC7  2B                 	db	43
    93  000DC8  4E                 	db	78
    94  000DC9  41                 	db	65
    95  000DCA  4D                 	db	77
    96  000DCB  45                 	db	69
    97  000DCC  00                 	db	0
    98                           
    99                           ;initializer for _BLUETOOTH_BAUD_COMM
   100  000DCD  41                 	db	65
   101  000DCE  54                 	db	84
   102  000DCF  2B                 	db	43
   103  000DD0  42                 	db	66
   104  000DD1  41                 	db	65
   105  000DD2  55                 	db	85
   106  000DD3  44                 	db	68
   107  000DD4  00                 	db	0
   108                           
   109                           ;initializer for _serialConfig
   110  000DD5  00                 	db	0
   111  000DD6  00                 	db	0
   112  000DD7  00                 	db	0
   113  000DD8  2580               	dw	9600
   114  000DDA  0000               	dw	0
   115                           
   116                           ;initializer for _global_timer_value
   117  000DDC  0001               	dw	1
   118  000DDE  0000               	dw	0
   119  0000                     _TMR0	set	4054
   120  0000                     _INTCON2bits	set	4081
   121  0000                     _T0CONbits	set	4053
   122  0000                     _TXREG	set	4013
   123  0000                     _PIE1bits	set	3997
   124  0000                     _RCSTAbits	set	4011
   125  0000                     _SPBRG	set	4015
   126  0000                     _TXSTAbits	set	4012
   127  0000                     _BAUDCONbits	set	4024
   128  0000                     _RCONbits	set	4048
   129  0000                     _TRISC	set	3988
   130  0000                     _PORTB	set	3969
   131  0000                     _LATB	set	3978
   132  0000                     _TRISB	set	3987
   133  0000                     _PORTD	set	3971
   134  0000                     _LATD	set	3980
   135  0000                     _TRISD	set	3989
   136  0000                     _RCREG	set	4014
   137  0000                     _PIR1bits	set	3998
   138  0000                     _INTCONbits	set	4082
   139  0000                     _TRMT	set	32097
   140                           
   141                           	psect	smallconst
   142  000600                     __psmallconst:
   143                           	callstack 0
   144  000600  00                 	db	0
   145  000601                     STR_12:
   146  000601  41                 	db	65	;'A'
   147  000602  43                 	db	67	;'C'
   148  000603  41                 	db	65	;'A'
   149  000604  42                 	db	66	;'B'
   150  000605  4F                 	db	79	;'O'
   151  000606  55                 	db	85	;'U'
   152  000607  20                 	db	32
   153  000608  45                 	db	69	;'E'
   154  000609  53                 	db	83	;'S'
   155  00060A  53                 	db	83	;'S'
   156  00060B  41                 	db	65	;'A'
   157  00060C  20                 	db	32
   158  00060D  50                 	db	80	;'P'
   159  00060E  4F                 	db	79	;'O'
   160  00060F  48                 	db	72	;'H'
   161  000610  41                 	db	65	;'A'
   162  000611  00                 	db	0
   163  000612                     STR_11:
   164  000612  53                 	db	83	;'S'
   165  000613  54                 	db	84	;'T'
   166  000614  41                 	db	65	;'A'
   167  000615  52                 	db	82	;'R'
   168  000616  54                 	db	84	;'T'
   169  000617  5F                 	db	95	;'_'
   170  000618  42                 	db	66	;'B'
   171  000619  4C                 	db	76	;'L'
   172  00061A  55                 	db	85	;'U'
   173  00061B  45                 	db	69	;'E'
   174  00061C  54                 	db	84	;'T'
   175  00061D  4F                 	db	79	;'O'
   176  00061E  4F                 	db	79	;'O'
   177  00061F  54                 	db	84	;'T'
   178  000620  48                 	db	72	;'H'
   179  000621  00                 	db	0
   180  000622                     STR_1:
   181  000622  41                 	db	65	;'A'
   182  000623  54                 	db	84	;'T'
   183  000624  0D                 	db	13
   184  000625  00                 	db	0
   185  000626  31                 	db	49	;'1'
   186  000627  00                 	db	0
   187  000628  32                 	db	50	;'2'
   188  000629  00                 	db	0
   189  00062A  33                 	db	51	;'3'
   190  00062B  00                 	db	0
   191  00062C                     STR_5:
   192  00062C  34                 	db	52	;'4'
   193  00062D  00                 	db	0
   194  00062E  35                 	db	53	;'5'
   195  00062F  00                 	db	0
   196  000630  36                 	db	54	;'6'
   197  000631  00                 	db	0
   198  000632  37                 	db	55	;'7'
   199  000633  00                 	db	0
   200  000634  38                 	db	56	;'8'
   201  000635  00                 	db	0
   202  000636  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207  000D16                     __pcinit:
   208                           	callstack 0
   209  000D16                     start_initialization:
   210                           	callstack 0
   211  000D16                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Initialize objects allocated to COMRAM (38 bytes)
   215                           ; load TBLPTR registers with __pidataCOMRAM
   216  000D16  0EBA               	movlw	low __pidataCOMRAM
   217  000D18  6EF6               	movwf	tblptrl,c
   218  000D1A  0E0D               	movlw	high __pidataCOMRAM
   219  000D1C  6EF7               	movwf	tblptrh,c
   220  000D1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   221  000D20  6EF8               	movwf	tblptru,c
   222  000D22  EE00  F001         	lfsr	0,__pdataCOMRAM
   223  000D26  EE10 F026          	lfsr	1,38
   224  000D2A                     copy_data0:
   225  000D2A  0009               	tblrd		*+
   226  000D2C  CFF5 FFEE          	movff	tablat,postinc0
   227  000D30  50E5               	movf	postdec1,w,c
   228  000D32  50E1               	movf	fsr1l,w,c
   229  000D34  E1FA               	bnz	copy_data0
   230                           
   231                           ; Clear objects allocated to COMRAM (16 bytes)
   232  000D36  EE00  F045         	lfsr	0,__pbssCOMRAM
   233  000D3A  0E10               	movlw	16
   234  000D3C                     clear_0:
   235  000D3C  6AEE               	clrf	postinc0,c
   236  000D3E  06E8               	decf	wreg,f,c
   237  000D40  E1FD               	bnz	clear_0
   238  000D42                     end_of_initialization:
   239                           	callstack 0
   240  000D42                     __end_of__initialization:
   241                           	callstack 0
   242  000D42  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  000D44  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  000D46  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  000D48  6EF8               	movwf	tblptru,c
   246  000D4A  0100               	movlb	0
   247  000D4C  EF4B  F005         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  000045                     __pbssCOMRAM:
   251                           	callstack 0
   252  000045                     _timerConfig:
   253                           	callstack 0
   254  000045                     	ds	5
   255  00004A                     Timer0_WaitMS@timeStart:
   256                           	callstack 0
   257  00004A                     	ds	4
   258  00004E                     _tickHook_func_prt:
   259                           	callstack 0
   260  00004E                     	ds	2
   261  000050                     _humidity:
   262                           	callstack 0
   263  000050                     	ds	2
   264  000052                     _temperature:
   265                           	callstack 0
   266  000052                     	ds	2
   267  000054                     _count:
   268                           	callstack 0
   269  000054                     	ds	1
   270                           
   271                           	psect	dataCOMRAM
   272  000001                     __pdataCOMRAM:
   273                           	callstack 0
   274  000001                     _BLUETOOTH_PIN_COMM:
   275                           	callstack 0
   276  000001                     	ds	11
   277  00000C                     _BLUETOOTH_NAME_COMM:
   278                           	callstack 0
   279  00000C                     	ds	8
   280  000014                     _BLUETOOTH_BAUD_COMM:
   281                           	callstack 0
   282  000014                     	ds	8
   283  00001C                     _serialConfig:
   284                           	callstack 0
   285  00001C                     	ds	7
   286  000023                     _global_timer_value:
   287                           	callstack 0
   288  000023                     	ds	4
   289                           
   290                           	psect	cstackCOMRAM
   291  000027                     __pcstackCOMRAM:
   292                           	callstack 0
   293  000027                     Serial_Transmit@data:
   294                           	callstack 0
   295  000027                     tickHook_Execute@global_timer_value:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x0
   299  000027                     	ds	2
   300  000029                     ??_sendNibble:
   301  000029                     ??_Display_WriteByte:
   302  000029                     ?_strlen:
   303                           	callstack 0
   304  000029                     ?___lldiv:
   305                           	callstack 0
   306  000029                     Display_SendByte@comm:
   307                           	callstack 0
   308  000029                     Peripheral_Controller@args:
   309                           	callstack 0
   310  000029                     Serial_TransmitBuffer@buffer:
   311                           	callstack 0
   312  000029                     Timer0_WaitMS@timerWait:
   313                           	callstack 0
   314  000029                     strlen@s:
   315                           	callstack 0
   316  000029                     ___lldiv@dividend:
   317                           	callstack 0
   318                           
   319                           ; 4 bytes @ 0x2
   320  000029                     	ds	1
   321  00002A                     ??_Display_SendByte:
   322  00002A                     sendNibble@nibble:
   323                           	callstack 0
   324  00002A                     Display_WriteByte@byte:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x3
   328  00002A                     	ds	1
   329  00002B                     ??_Timer0_WaitMS:
   330  00002B                     Display_SendByte@byte:
   331                           	callstack 0
   332  00002B                     Display_WriteByte@auxByte:
   333                           	callstack 0
   334  00002B                     Serial_TransmitBuffer@length:
   335                           	callstack 0
   336  00002B                     strlen@a:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x4
   340  00002B                     	ds	1
   341  00002C                     ??_Serial_TransmitBuffer:
   342  00002C                     Display_SendByte@auxByte:
   343                           	callstack 0
   344  00002C                     Display_WriteString@string:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x5
   348  00002C                     	ds	1
   349  00002D                     ??_DisplayLCD_Init:
   350  00002D                     strcpy@dest:
   351                           	callstack 0
   352  00002D                     ___lldiv@divisor:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0x6
   356  00002D                     	ds	1
   357  00002E                     Display_WriteString@length:
   358                           	callstack 0
   359  00002E                     Serial_TransmitBuffer@auxLength:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x7
   363  00002E                     	ds	1
   364  00002F                     Display_WriteString@address:
   365                           	callstack 0
   366  00002F                     strcpy@src:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x8
   370  00002F                     	ds	1
   371  000030                     ??_Display_WriteString:
   372                           
   373                           ; 1 bytes @ 0x9
   374  000030                     	ds	1
   375  000031                     strcpy@s:
   376                           	callstack 0
   377  000031                     ___lldiv@quotient:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0xA
   381  000031                     	ds	2
   382  000033                     strcpy@d:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xC
   386  000033                     	ds	2
   387  000035                     ___lldiv@counter:
   388                           	callstack 0
   389  000035                     strcat@dest:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xE
   393  000035                     	ds	1
   394  000036                     Serial_1_Config@serialConfig:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xF
   398  000036                     	ds	1
   399  000037                     Display_WriteString@auxLength:
   400                           	callstack 0
   401  000037                     strcat@src:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x10
   405  000037                     	ds	1
   406  000038                     ??_Serial_1_Config:
   407                           
   408                           ; 1 bytes @ 0x11
   409  000038                     	ds	1
   410  000039                     StartSystem@args:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x12
   414  000039                     	ds	2
   415  00003B                     
   416                           ; 1 bytes @ 0x14
   417  00003B                     	ds	1
   418  00003C                     Serial_1_Config@error_8LOW:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x15
   422  00003C                     	ds	1
   423  00003D                     Serial_1_Config@error_16HIGH:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x16
   427  00003D                     	ds	1
   428  00003E                     Serial_1_Config@brg8LOW:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x17
   432  00003E                     	ds	1
   433  00003F                     Serial_1_Config@brg8HIGH:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x18
   437  00003F                     	ds	1
   438  000040                     Serial_1_Config@brg16HIGH:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x19
   442  000040                     	ds	1
   443  000041                     Serial_1_Config@error_8HIGH:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x1A
   447  000041                     	ds	1
   448  000042                     Serial_1_Config@error_min:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x1B
   452  000042                     	ds	1
   453  000043                     ??_main:
   454                           
   455                           ; 1 bytes @ 0x1C
   456  000043                     	ds	2
   457                           
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 61 in file "src/main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  i               2    0        int 
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:          2       0       0       0       0       0       0
   480 ;;      Totals:         2       0       0       0       0       0       0
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels required when called: 6
   483 ;; This function calls:
   484 ;;		_Serial_1_Config
   485 ;;		_Serial_TransmitBuffer
   486 ;;		_StartSystem
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text0
   493  000A96                     __ptext0:
   494                           	callstack 0
   495  000A96                     _main:
   496                           	callstack 25
   497  000A96                     
   498                           ;src/main.c: 66:     Serial_1_Config(&serialConfig);
   499  000A96  0E1C               	movlw	low _serialConfig
   500  000A98  6E36               	movwf	Serial_1_Config@serialConfig^0,c
   501  000A9A  0E00               	movlw	high _serialConfig
   502  000A9C  6E37               	movwf	(Serial_1_Config@serialConfig+1)^0,c
   503  000A9E  EC1C  F003         	call	_Serial_1_Config	;wreg free
   504  000AA2                     
   505                           ;src/main.c: 68:     StartSystem(((void*)0));
   506  000AA2  0E00               	movlw	0
   507  000AA4  6E39               	movwf	StartSystem@args^0,c
   508  000AA6  0E00               	movlw	0
   509  000AA8  6E3A               	movwf	(StartSystem@args+1)^0,c
   510  000AAA  EC02  F006         	call	_StartSystem	;wreg free
   511  000AAE                     l1670:
   512                           
   513                           ;src/main.c: 72:     {;src/main.c: 73:         Serial_TransmitBuffer("AT\r", sizeof("AT\
      +                          r"));
   514  000AAE  0E22               	movlw	low STR_1
   515  000AB0  6E29               	movwf	Serial_TransmitBuffer@buffer^0,c
   516  000AB2  0E06               	movlw	high STR_1
   517  000AB4  6E2A               	movwf	(Serial_TransmitBuffer@buffer+1)^0,c
   518  000AB6  0E04               	movlw	4
   519  000AB8  6E2B               	movwf	Serial_TransmitBuffer@length^0,c
   520  000ABA  ECAB  F005         	call	_Serial_TransmitBuffer	;wreg free
   521  000ABE                     
   522                           ;src/main.c: 75:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   523  000ABE  0E0D               	movlw	13
   524  000AC0  6E44               	movwf	(??_main+1)^0,c
   525  000AC2  0EAF               	movlw	175
   526  000AC4  6E43               	movwf	??_main^0,c
   527  000AC6  0EB6               	movlw	182
   528  000AC8                     u537:
   529  000AC8  2EE8               	decfsz	wreg,f,c
   530  000ACA  D7FE               	bra	u537
   531  000ACC  2E43               	decfsz	??_main^0,f,c
   532  000ACE  D7FC               	bra	u537
   533  000AD0  2E44               	decfsz	(??_main+1)^0,f,c
   534  000AD2  D7FA               	bra	u537
   535  000AD4  D000               	nop2	
   536  000AD6                     
   537                           ;src/main.c: 76:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   538  000AD6  0E0D               	movlw	13
   539  000AD8  6E44               	movwf	(??_main+1)^0,c
   540  000ADA  0EAF               	movlw	175
   541  000ADC  6E43               	movwf	??_main^0,c
   542  000ADE  0EB6               	movlw	182
   543  000AE0                     u547:
   544  000AE0  2EE8               	decfsz	wreg,f,c
   545  000AE2  D7FE               	bra	u547
   546  000AE4  2E43               	decfsz	??_main^0,f,c
   547  000AE6  D7FC               	bra	u547
   548  000AE8  2E44               	decfsz	(??_main+1)^0,f,c
   549  000AEA  D7FA               	bra	u547
   550  000AEC  D000               	nop2	
   551  000AEE  EF57  F005         	goto	l1670
   552  000AF2  EF07  F000         	goto	start
   553  000AF6                     __end_of_main:
   554                           	callstack 0
   555                           
   556 ;; *************** function _StartSystem *****************
   557 ;; Defined at:
   558 ;;		line 25 in file "src/app/main-app/main-app.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  args            2   18[COMRAM] PTR void 
   561 ;;		 -> NULL(0), 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   573 ;;      Params:         2       0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0
   576 ;;      Totals:         2       0       0       0       0       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 5
   580 ;; This function calls:
   581 ;;		_Bluetooth_HC_06_Configure
   582 ;;		_DisplayLCD_Init
   583 ;;		_Display_WriteString
   584 ;;		_Peripheral_Controller
   585 ;;		_Timer0_WaitMS
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text1
   592  000C04                     __ptext1:
   593                           	callstack 0
   594  000C04                     _StartSystem:
   595                           	callstack 25
   596  000C04                     
   597                           ;src/app/main-app/main-app.c: 25: void StartSystem( void* args );src/app/main-app/main-a
      +                          pp.c: 26: {;src/app/main-app/main-app.c: 29:     Peripheral_Controller(((void*)0));
   598  000C04  0E00               	movlw	0
   599  000C06  6E29               	movwf	Peripheral_Controller@args^0,c
   600  000C08  0E00               	movlw	0
   601  000C0A  6E2A               	movwf	(Peripheral_Controller@args+1)^0,c
   602  000C0C  EC27  F006         	call	_Peripheral_Controller	;wreg free
   603                           
   604                           ;src/app/main-app/main-app.c: 33:     DisplayLCD_Init();
   605  000C10  EC7B  F005         	call	_DisplayLCD_Init	;wreg free
   606  000C14                     
   607                           ;src/app/main-app/main-app.c: 36:     Display_WriteString("START_BLUETOOTH", sizeof("STA
      +                          RT_BLUETOOTH"), 0);
   608  000C14  0E12               	movlw	low STR_11
   609  000C16  6E2C               	movwf	Display_WriteString@string^0,c
   610  000C18  0E06               	movlw	high STR_11
   611  000C1A  6E2D               	movwf	(Display_WriteString@string+1)^0,c
   612  000C1C  0E10               	movlw	16
   613  000C1E  6E2E               	movwf	Display_WriteString@length^0,c
   614  000C20  0E00               	movlw	0
   615  000C22  6E2F               	movwf	Display_WriteString@address^0,c
   616  000C24  EC18  F005         	call	_Display_WriteString	;wreg free
   617  000C28                     
   618                           ;src/app/main-app/main-app.c: 38:     Bluetooth_HC_06_Configure();
   619  000C28  EC0E  F007         	call	_Bluetooth_HC_06_Configure	;wreg free
   620  000C2C                     
   621                           ;src/app/main-app/main-app.c: 39:     Timer0_WaitMS(3000);
   622  000C2C  0E0B               	movlw	11
   623  000C2E  6E2A               	movwf	(Timer0_WaitMS@timerWait+1)^0,c
   624  000C30  0EB8               	movlw	184
   625  000C32  6E29               	movwf	Timer0_WaitMS@timerWait^0,c
   626  000C34  ECD8  F005         	call	_Timer0_WaitMS	;wreg free
   627  000C38                     
   628                           ;src/app/main-app/main-app.c: 40:     Display_WriteString("ACABOU ESSA POHA", sizeof("AC
      +                          ABOU ESSA POHA"), 0);
   629  000C38  0E01               	movlw	low STR_12
   630  000C3A  6E2C               	movwf	Display_WriteString@string^0,c
   631  000C3C  0E06               	movlw	high STR_12
   632  000C3E  6E2D               	movwf	(Display_WriteString@string+1)^0,c
   633  000C40  0E11               	movlw	17
   634  000C42  6E2E               	movwf	Display_WriteString@length^0,c
   635  000C44  0E00               	movlw	0
   636  000C46  6E2F               	movwf	Display_WriteString@address^0,c
   637  000C48  EC18  F005         	call	_Display_WriteString	;wreg free
   638  000C4C  0012               	return		;funcret
   639  000C4E                     __end_of_StartSystem:
   640                           	callstack 0
   641                           
   642 ;; *************** function _Timer0_WaitMS *****************
   643 ;; Defined at:
   644 ;;		line 97 in file "src/pic18f4520/timer/timer.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  timerWait       2    2[COMRAM] unsigned short 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   658 ;;      Params:         2       0       0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0
   660 ;;      Temps:          8       0       0       0       0       0       0
   661 ;;      Totals:        10       0       0       0       0       0       0
   662 ;;Total ram usage:       10 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; Hardware stack levels required when called: 2
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		_StartSystem
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text2
   673  000BB0                     __ptext2:
   674                           	callstack 0
   675  000BB0                     _Timer0_WaitMS:
   676                           	callstack 27
   677  000BB0                     
   678                           ;src/pic18f4520/timer/timer.c: 97: void Timer0_WaitMS(uint16_t timerWait);src/pic18f4520
      +                          /timer/timer.c: 98: {;src/pic18f4520/timer/timer.c: 99:     static uint32_t timeStart;;s
      +                          rc/pic18f4520/timer/timer.c: 100:     timeStart = global_timer_value;
   679  000BB0  C023  F04A         	movff	_global_timer_value,Timer0_WaitMS@timeStart
   680  000BB4  C024  F04B         	movff	_global_timer_value+1,Timer0_WaitMS@timeStart+1
   681  000BB8  C025  F04C         	movff	_global_timer_value+2,Timer0_WaitMS@timeStart+2
   682  000BBC  C026  F04D         	movff	_global_timer_value+3,Timer0_WaitMS@timeStart+3
   683  000BC0                     l1576:
   684                           
   685                           ;src/pic18f4520/timer/timer.c: 102:     while((global_timer_value - timeStart) <= timerW
      +                          ait){
   686  000BC0  504A               	movf	Timer0_WaitMS@timeStart^0,w,c
   687  000BC2  5C23               	subwf	_global_timer_value^0,w,c
   688  000BC4  6E2B               	movwf	??_Timer0_WaitMS^0,c
   689  000BC6  504B               	movf	(Timer0_WaitMS@timeStart+1)^0,w,c
   690  000BC8  5824               	subwfb	(_global_timer_value+1)^0,w,c
   691  000BCA  6E2C               	movwf	(??_Timer0_WaitMS+1)^0,c
   692  000BCC  504C               	movf	(Timer0_WaitMS@timeStart+2)^0,w,c
   693  000BCE  5825               	subwfb	(_global_timer_value+2)^0,w,c
   694  000BD0  6E2D               	movwf	(??_Timer0_WaitMS+2)^0,c
   695  000BD2  504D               	movf	(Timer0_WaitMS@timeStart+3)^0,w,c
   696  000BD4  5826               	subwfb	(_global_timer_value+3)^0,w,c
   697  000BD6  6E2E               	movwf	(??_Timer0_WaitMS+3)^0,c
   698  000BD8  5029               	movf	Timer0_WaitMS@timerWait^0,w,c
   699  000BDA  6E2F               	movwf	(??_Timer0_WaitMS+4)^0,c
   700  000BDC  502A               	movf	(Timer0_WaitMS@timerWait+1)^0,w,c
   701  000BDE  6E30               	movwf	(??_Timer0_WaitMS+5)^0,c
   702  000BE0  6A31               	clrf	(??_Timer0_WaitMS+6)^0,c
   703  000BE2  6A32               	clrf	(??_Timer0_WaitMS+7)^0,c
   704  000BE4  502B               	movf	??_Timer0_WaitMS^0,w,c
   705  000BE6  5C2F               	subwf	(??_Timer0_WaitMS+4)^0,w,c
   706  000BE8  502C               	movf	(??_Timer0_WaitMS+1)^0,w,c
   707  000BEA  5830               	subwfb	(??_Timer0_WaitMS+5)^0,w,c
   708  000BEC  502D               	movf	(??_Timer0_WaitMS+2)^0,w,c
   709  000BEE  5831               	subwfb	(??_Timer0_WaitMS+6)^0,w,c
   710  000BF0  502E               	movf	(??_Timer0_WaitMS+3)^0,w,c
   711  000BF2  5832               	subwfb	(??_Timer0_WaitMS+7)^0,w,c
   712  000BF4  B0D8               	btfsc	status,0,c
   713  000BF6  EFFF  F005         	goto	u401
   714  000BFA  EF01  F006         	goto	u400
   715  000BFE                     u401:
   716  000BFE  EFE0  F005         	goto	l1576
   717  000C02                     u400:
   718  000C02  0012               	return		;funcret
   719  000C04                     __end_of_Timer0_WaitMS:
   720                           	callstack 0
   721                           
   722 ;; *************** function _Peripheral_Controller *****************
   723 ;; Defined at:
   724 ;;		line 6 in file "src/board/peripheral-controller/peripheral_controller.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  args            2    2[COMRAM] PTR void 
   727 ;;		 -> NULL(0), 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   739 ;;      Params:         2       0       0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0
   742 ;;      Totals:         2       0       0       0       0       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 2
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_StartSystem
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text3
   754  000C4E                     __ptext3:
   755                           	callstack 0
   756  000C4E                     _Peripheral_Controller:
   757                           	callstack 27
   758  000C4E  5093               	movf	147,w,c	;volatile
   759  000C50  0BFE               	andlw	254
   760  000C52  6E93               	movwf	147,c	;volatile
   761  000C54  5093               	movf	147,w,c	;volatile
   762  000C56  0BFD               	andlw	253
   763  000C58  6E93               	movwf	147,c	;volatile
   764  000C5A  5093               	movf	147,w,c	;volatile
   765  000C5C  0BEF               	andlw	239
   766  000C5E  6E93               	movwf	147,c	;volatile
   767  000C60  5093               	movf	147,w,c	;volatile
   768  000C62  0BDF               	andlw	223
   769  000C64  6E93               	movwf	147,c	;volatile
   770  000C66  5093               	movf	147,w,c	;volatile
   771  000C68  0BBF               	andlw	191
   772  000C6A  6E93               	movwf	147,c	;volatile
   773  000C6C  5093               	movf	147,w,c	;volatile
   774  000C6E  0B7F               	andlw	127
   775  000C70  6E93               	movwf	147,c	;volatile
   776  000C72  5093               	movf	147,w,c	;volatile
   777  000C74  0BF7               	andlw	247
   778  000C76  6E93               	movwf	147,c	;volatile
   779  000C78  5093               	movf	147,w,c	;volatile
   780  000C7A  0BFB               	andlw	251
   781  000C7C  6E93               	movwf	147,c	;volatile
   782  000C7E  5094               	movf	148,w,c	;volatile
   783  000C80  0BBF               	andlw	191
   784  000C82  6E94               	movwf	148,c	;volatile
   785  000C84  5094               	movf	148,w,c	;volatile
   786  000C86  0B7F               	andlw	127
   787  000C88  6E94               	movwf	148,c	;volatile
   788  000C8A  5095               	movf	149,w,c	;volatile
   789  000C8C  0BFE               	andlw	254
   790  000C8E  6E95               	movwf	149,c	;volatile
   791  000C90  0012               	return		;funcret
   792  000C92                     __end_of_Peripheral_Controller:
   793                           	callstack 0
   794                           
   795 ;; *************** function _Display_WriteString *****************
   796 ;; Defined at:
   797 ;;		line 109 in file "src/app/display_lcd/display_lcd.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  string          2    5[COMRAM] PTR unsigned char 
   800 ;;		 -> STR_12(17), STR_11(16), 
   801 ;;  length          1    7[COMRAM] unsigned char 
   802 ;;  address         1    8[COMRAM] unsigned char 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  auxLength       1   16[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   814 ;;      Params:         4       0       0       0       0       0       0
   815 ;;      Locals:         1       0       0       0       0       0       0
   816 ;;      Temps:          7       0       0       0       0       0       0
   817 ;;      Totals:        12       0       0       0       0       0       0
   818 ;;Total ram usage:       12 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 3
   821 ;; This function calls:
   822 ;;		_Display_WriteByte
   823 ;; This function is called by:
   824 ;;		_StartSystem
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text4
   829  000A30                     __ptext4:
   830                           	callstack 0
   831  000A30                     _Display_WriteString:
   832                           	callstack 26
   833  000A30                     
   834                           ;src/app/display_lcd/display_lcd.c: 109: void Display_WriteString(char* string, uint8_t 
      +                          length, uint8_t address);src/app/display_lcd/display_lcd.c: 110: {;src/app/display_lcd/d
      +                          isplay_lcd.c: 111:     uint8_t auxLength = 0x00;
   835  000A30  0E00               	movlw	0
   836  000A32  6E37               	movwf	Display_WriteString@auxLength^0,c
   837                           
   838                           ;src/app/display_lcd/display_lcd.c: 114:     for(auxLength = 0; auxLength < length - 1; 
      +                          auxLength++)
   839  000A34  0E00               	movlw	0
   840  000A36  6E37               	movwf	Display_WriteString@auxLength^0,c
   841  000A38  EF2D  F005         	goto	l1548
   842  000A3C                     l1544:
   843                           
   844                           ;src/app/display_lcd/display_lcd.c: 115:     {;src/app/display_lcd/display_lcd.c: 116:  
      +                                 Display_WriteByte((uint8_t)string[auxLength]);
   845  000A3C  5037               	movf	Display_WriteString@auxLength^0,w,c
   846  000A3E  242C               	addwf	Display_WriteString@string^0,w,c
   847  000A40  6E30               	movwf	??_Display_WriteString^0,c
   848  000A42  0E00               	movlw	0
   849  000A44  202D               	addwfc	(Display_WriteString@string+1)^0,w,c
   850  000A46  6E31               	movwf	(??_Display_WriteString+1)^0,c
   851  000A48  C030  FFF6         	movff	??_Display_WriteString,tblptrl
   852  000A4C  C031  FFF7         	movff	??_Display_WriteString+1,tblptrh
   853  000A50                     	if	0	;tblptru may be non-zero
   854  000A50                     	endif
   855  000A50                     	if	0	;tblptru may be non-zero
   856  000A50                     	endif
   857  000A50  0008               	tblrd		*
   858  000A52  50F5               	movf	tablat,w,c
   859  000A54  ECE3  F004         	call	_Display_WriteByte
   860  000A58                     
   861                           ;src/app/display_lcd/display_lcd.c: 117:     }
   862  000A58  2A37               	incf	Display_WriteString@auxLength^0,f,c
   863  000A5A                     l1548:
   864  000A5A  0EFF               	movlw	255
   865  000A5C  6E30               	movwf	??_Display_WriteString^0,c
   866  000A5E  0EFF               	movlw	255
   867  000A60  6E31               	movwf	(??_Display_WriteString+1)^0,c
   868  000A62  502E               	movf	Display_WriteString@length^0,w,c
   869  000A64  6E32               	movwf	(??_Display_WriteString+2)^0,c
   870  000A66  6A33               	clrf	(??_Display_WriteString+3)^0,c
   871  000A68  5030               	movf	??_Display_WriteString^0,w,c
   872  000A6A  2632               	addwf	(??_Display_WriteString+2)^0,f,c
   873  000A6C  5031               	movf	(??_Display_WriteString+1)^0,w,c
   874  000A6E  2233               	addwfc	(??_Display_WriteString+3)^0,f,c
   875  000A70  5037               	movf	Display_WriteString@auxLength^0,w,c
   876  000A72  6E34               	movwf	(??_Display_WriteString+4)^0,c
   877  000A74  6A35               	clrf	(??_Display_WriteString+5)^0,c
   878  000A76  5032               	movf	(??_Display_WriteString+2)^0,w,c
   879  000A78  5C34               	subwf	(??_Display_WriteString+4)^0,w,c
   880  000A7A  5035               	movf	(??_Display_WriteString+5)^0,w,c
   881  000A7C  0A80               	xorlw	128
   882  000A7E  6E36               	movwf	(??_Display_WriteString+6)^0,c
   883  000A80  5033               	movf	(??_Display_WriteString+3)^0,w,c
   884  000A82  0A80               	xorlw	128
   885  000A84  5836               	subwfb	(??_Display_WriteString+6)^0,w,c
   886  000A86  A0D8               	btfss	status,0,c
   887  000A88  EF48  F005         	goto	u391
   888  000A8C  EF4A  F005         	goto	u390
   889  000A90                     u391:
   890  000A90  EF1E  F005         	goto	l1544
   891  000A94                     u390:
   892  000A94  0012               	return		;funcret
   893  000A96                     __end_of_Display_WriteString:
   894                           	callstack 0
   895                           
   896 ;; *************** function _Display_WriteByte *****************
   897 ;; Defined at:
   898 ;;		line 84 in file "src/app/display_lcd/display_lcd.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  byte            1    wreg     unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  byte            1    3[COMRAM] unsigned char 
   903 ;;  auxByte         1    4[COMRAM] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   913 ;;      Params:         0       0       0       0       0       0       0
   914 ;;      Locals:         2       0       0       0       0       0       0
   915 ;;      Temps:          1       0       0       0       0       0       0
   916 ;;      Totals:         3       0       0       0       0       0       0
   917 ;;Total ram usage:        3 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 2
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_Display_WriteString
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text5
   928  0009C6                     __ptext5:
   929                           	callstack 0
   930  0009C6                     _Display_WriteByte:
   931                           	callstack 26
   932                           
   933                           ;incstack = 0
   934                           ;Display_WriteByte@byte stored from wreg
   935  0009C6  6E2A               	movwf	Display_WriteByte@byte^0,c
   936  0009C8  5081               	movf	129,w,c	;volatile
   937  0009CA  0908               	iorlw	8
   938  0009CC  6E8A               	movwf	138,c	;volatile
   939  0009CE                     
   940                           ;src/app/display_lcd/display_lcd.c: 89:     auxByte = (byte & 0xF0);
   941  0009CE  502A               	movf	Display_WriteByte@byte^0,w,c
   942  0009D0  0BF0               	andlw	240
   943  0009D2  6E2B               	movwf	Display_WriteByte@auxByte^0,c
   944                           
   945                           ;src/app/display_lcd/display_lcd.c: 90:     LATB = ((PORTB & 0x0F) | auxByte);;
   946  0009D4  5081               	movf	129,w,c	;volatile
   947  0009D6  0B0F               	andlw	15
   948  0009D8  102B               	iorwf	Display_WriteByte@auxByte^0,w,c
   949  0009DA  6E8A               	movwf	138,c	;volatile
   950  0009DC  5081               	movf	129,w,c	;volatile
   951  0009DE  0BFB               	andlw	251
   952  0009E0  6E8A               	movwf	138,c	;volatile
   953  0009E2  5081               	movf	129,w,c	;volatile
   954  0009E4  0904               	iorlw	4
   955  0009E6  6E8A               	movwf	138,c	;volatile
   956  0009E8                     
   957                           ;src/app/display_lcd/display_lcd.c: 94:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
   958  0009E8  0E53               	movlw	83
   959  0009EA                     u557:
   960  0009EA  2EE8               	decfsz	wreg,f,c
   961  0009EC  D7FE               	bra	u557
   962  0009EE  F000               	nop	
   963  0009F0  5081               	movf	129,w,c	;volatile
   964  0009F2  0BFB               	andlw	251
   965  0009F4  6E8A               	movwf	138,c	;volatile
   966  0009F6                     
   967                           ;src/app/display_lcd/display_lcd.c: 98:     auxByte = (byte << 0x04);
   968  0009F6  382A               	swapf	Display_WriteByte@byte^0,w,c
   969  0009F8  0BF0               	andlw	240
   970  0009FA  6E2B               	movwf	Display_WriteByte@auxByte^0,c
   971                           
   972                           ;src/app/display_lcd/display_lcd.c: 99:     LATB = ((PORTB & 0x0F) | auxByte);;
   973  0009FC  5081               	movf	129,w,c	;volatile
   974  0009FE  0B0F               	andlw	15
   975  000A00  102B               	iorwf	Display_WriteByte@auxByte^0,w,c
   976  000A02  6E8A               	movwf	138,c	;volatile
   977  000A04  5081               	movf	129,w,c	;volatile
   978  000A06  0BFB               	andlw	251
   979  000A08  6E8A               	movwf	138,c	;volatile
   980  000A0A  5081               	movf	129,w,c	;volatile
   981  000A0C  0904               	iorlw	4
   982  000A0E  6E8A               	movwf	138,c	;volatile
   983  000A10                     
   984                           ;src/app/display_lcd/display_lcd.c: 103:     _delay((unsigned long)((100)*(10000000UL/40
      +                          00000.0)));
   985  000A10  0E53               	movlw	83
   986  000A12                     u567:
   987  000A12  2EE8               	decfsz	wreg,f,c
   988  000A14  D7FE               	bra	u567
   989  000A16  F000               	nop	
   990  000A18  5081               	movf	129,w,c	;volatile
   991  000A1A  0BFB               	andlw	251
   992  000A1C  6E8A               	movwf	138,c	;volatile
   993  000A1E                     
   994                           ;src/app/display_lcd/display_lcd.c: 106:     _delay((unsigned long)((2)*(10000000UL/4000
      +                          .0)));
   995  000A1E  0E07               	movlw	7
   996  000A20  6E29               	movwf	??_Display_WriteByte^0,c
   997  000A22  0E7D               	movlw	125
   998  000A24                     u577:
   999  000A24  2EE8               	decfsz	wreg,f,c
  1000  000A26  D7FE               	bra	u577
  1001  000A28  2E29               	decfsz	??_Display_WriteByte^0,f,c
  1002  000A2A  D7FC               	bra	u577
  1003  000A2C  F000               	nop	
  1004  000A2E  0012               	return		;funcret
  1005  000A30                     __end_of_Display_WriteByte:
  1006                           	callstack 0
  1007                           
  1008 ;; *************** function _DisplayLCD_Init *****************
  1009 ;; Defined at:
  1010 ;;		line 10 in file "src/app/display_lcd/display_lcd.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1024 ;;      Params:         0       0       0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0
  1026 ;;      Temps:          1       0       0       0       0       0       0
  1027 ;;      Totals:         1       0       0       0       0       0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 3
  1031 ;; This function calls:
  1032 ;;		_Display_SendByte
  1033 ;;		_sendNibble
  1034 ;; This function is called by:
  1035 ;;		_StartSystem
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text6
  1040  000AF6                     __ptext6:
  1041                           	callstack 0
  1042  000AF6                     _DisplayLCD_Init:
  1043                           	callstack 26
  1044  000AF6                     
  1045                           ;src/app/display_lcd/display_lcd.c: 13:     _delay((unsigned long)((20)*(10000000UL/4000
      +                          .0)));
  1046  000AF6  0E41               	movlw	65
  1047  000AF8  6E2D               	movwf	??_DisplayLCD_Init^0,c
  1048  000AFA  0EEE               	movlw	238
  1049  000AFC                     u587:
  1050  000AFC  2EE8               	decfsz	wreg,f,c
  1051  000AFE  D7FE               	bra	u587
  1052  000B00  2E2D               	decfsz	??_DisplayLCD_Init^0,f,c
  1053  000B02  D7FC               	bra	u587
  1054  000B04  D000               	nop2	
  1055  000B06                     
  1056                           ;src/app/display_lcd/display_lcd.c: 16:     TRISB = 0x00;;
  1057  000B06  0E00               	movlw	0
  1058  000B08  6E93               	movwf	147,c	;volatile
  1059  000B0A                     
  1060                           ;src/app/display_lcd/display_lcd.c: 19:     sendNibble(0x20);
  1061  000B0A  0E20               	movlw	32
  1062  000B0C  ECC3  F006         	call	_sendNibble
  1063  000B10                     
  1064                           ;src/app/display_lcd/display_lcd.c: 20:     sendNibble(0x20);
  1065  000B10  0E20               	movlw	32
  1066  000B12  ECC3  F006         	call	_sendNibble
  1067  000B16                     
  1068                           ;src/app/display_lcd/display_lcd.c: 21:     sendNibble(0x30);
  1069  000B16  0E30               	movlw	48
  1070  000B18  ECC3  F006         	call	_sendNibble
  1071  000B1C                     
  1072                           ;src/app/display_lcd/display_lcd.c: 24:     Display_SendByte((0b00100000 | 0b00000000 | 
      +                          0b00001000 | 0b00000100), 0);
  1073  000B1C  0E00               	movlw	0
  1074  000B1E  6E29               	movwf	Display_SendByte@comm^0,c
  1075  000B20  0E2C               	movlw	44
  1076  000B22  ECA4  F004         	call	_Display_SendByte
  1077  000B26                     
  1078                           ;src/app/display_lcd/display_lcd.c: 27:     Display_SendByte((0b00000100 | 0b00000010 | 
      +                          0b00000000), 0);
  1079  000B26  0E00               	movlw	0
  1080  000B28  6E29               	movwf	Display_SendByte@comm^0,c
  1081  000B2A  0E06               	movlw	6
  1082  000B2C  ECA4  F004         	call	_Display_SendByte
  1083  000B30                     
  1084                           ;src/app/display_lcd/display_lcd.c: 31:     Display_SendByte((0b00001000 | 0b00000100 | 
      +                          0b00000010 | 0b00000001 ), 0);
  1085  000B30  0E00               	movlw	0
  1086  000B32  6E29               	movwf	Display_SendByte@comm^0,c
  1087  000B34  0E0F               	movlw	15
  1088  000B36  ECA4  F004         	call	_Display_SendByte
  1089  000B3A                     
  1090                           ;src/app/display_lcd/display_lcd.c: 34:     Display_SendByte(0b00000001, 0);
  1091  000B3A  0E00               	movlw	0
  1092  000B3C  6E29               	movwf	Display_SendByte@comm^0,c
  1093  000B3E  0E01               	movlw	1
  1094  000B40  ECA4  F004         	call	_Display_SendByte
  1095  000B44                     
  1096                           ;src/app/display_lcd/display_lcd.c: 35:    _delay((unsigned long)((2)*(10000000UL/4000.0
      +                          )));
  1097  000B44  0E07               	movlw	7
  1098  000B46  6E2D               	movwf	??_DisplayLCD_Init^0,c
  1099  000B48  0E7D               	movlw	125
  1100  000B4A                     u597:
  1101  000B4A  2EE8               	decfsz	wreg,f,c
  1102  000B4C  D7FE               	bra	u597
  1103  000B4E  2E2D               	decfsz	??_DisplayLCD_Init^0,f,c
  1104  000B50  D7FC               	bra	u597
  1105  000B52  F000               	nop	
  1106  000B54  0012               	return		;funcret
  1107  000B56                     __end_of_DisplayLCD_Init:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _sendNibble *****************
  1111 ;; Defined at:
  1112 ;;		line 43 in file "src/app/display_lcd/display_lcd.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  nibble          1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  nibble          1    3[COMRAM] unsigned char 
  1117 ;;  auxNibble       1    0        unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1127 ;;      Params:         0       0       0       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0       0       0
  1130 ;;      Totals:         2       0       0       0       0       0       0
  1131 ;;Total ram usage:        2 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 2
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_DisplayLCD_Init
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text7
  1142  000D86                     __ptext7:
  1143                           	callstack 0
  1144  000D86                     _sendNibble:
  1145                           	callstack 26
  1146                           
  1147                           ;incstack = 0
  1148                           ;sendNibble@nibble stored from wreg
  1149  000D86  6E2A               	movwf	sendNibble@nibble^0,c
  1150  000D88  5081               	movf	129,w,c	;volatile
  1151  000D8A  0BF7               	andlw	247
  1152  000D8C  6E8A               	movwf	138,c	;volatile
  1153  000D8E                     
  1154                           ;src/app/display_lcd/display_lcd.c: 50:     if(0x01 == 0x01) LATB = (PORTB | (1 << 2)); 
      +                          else LATB = (PORTB & ~((1 << 2)));;
  1155  000D8E  5081               	movf	129,w,c	;volatile
  1156  000D90  0B0F               	andlw	15
  1157  000D92  102A               	iorwf	sendNibble@nibble^0,w,c
  1158  000D94  6E8A               	movwf	138,c	;volatile
  1159  000D96  5081               	movf	129,w,c	;volatile
  1160  000D98  0904               	iorlw	4
  1161  000D9A  6E8A               	movwf	138,c	;volatile
  1162  000D9C                     
  1163                           ;src/app/display_lcd/display_lcd.c: 51:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1164  000D9C  0E53               	movlw	83
  1165  000D9E                     u607:
  1166  000D9E  2EE8               	decfsz	wreg,f,c
  1167  000DA0  D7FE               	bra	u607
  1168  000DA2  F000               	nop	
  1169  000DA4  5081               	movf	129,w,c	;volatile
  1170  000DA6  0BFB               	andlw	251
  1171  000DA8  6E8A               	movwf	138,c	;volatile
  1172  000DAA                     
  1173                           ;src/app/display_lcd/display_lcd.c: 54:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  1174  000DAA  0E04               	movlw	4
  1175  000DAC  6E29               	movwf	??_sendNibble^0,c
  1176  000DAE  0E3E               	movlw	62
  1177  000DB0                     u617:
  1178  000DB0  2EE8               	decfsz	wreg,f,c
  1179  000DB2  D7FE               	bra	u617
  1180  000DB4  2E29               	decfsz	??_sendNibble^0,f,c
  1181  000DB6  D7FC               	bra	u617
  1182  000DB8  0012               	return		;funcret
  1183  000DBA                     __end_of_sendNibble:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _Display_SendByte *****************
  1187 ;; Defined at:
  1188 ;;		line 57 in file "src/app/display_lcd/display_lcd.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  byte            1    wreg     unsigned char 
  1191 ;;  comm            1    2[COMRAM] unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  byte            1    4[COMRAM] unsigned char 
  1194 ;;  auxByte         1    5[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1204 ;;      Params:         1       0       0       0       0       0       0
  1205 ;;      Locals:         2       0       0       0       0       0       0
  1206 ;;      Temps:          1       0       0       0       0       0       0
  1207 ;;      Totals:         4       0       0       0       0       0       0
  1208 ;;Total ram usage:        4 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 2
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_DisplayLCD_Init
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text8
  1219  000948                     __ptext8:
  1220                           	callstack 0
  1221  000948                     _Display_SendByte:
  1222                           	callstack 26
  1223                           
  1224                           ;incstack = 0
  1225                           ;Display_SendByte@byte stored from wreg
  1226  000948  6E2B               	movwf	Display_SendByte@byte^0,c
  1227  00094A                     
  1228                           ;src/app/display_lcd/display_lcd.c: 61:     if(comm == 0x01) LATB = (PORTB | (1 << 3)); 
      +                          else LATB = (PORTB & ~((1 << 3)));;
  1229  00094A  0429               	decf	Display_SendByte@comm^0,w,c
  1230  00094C  A4D8               	btfss	status,2,c
  1231  00094E  EFAB  F004         	goto	u381
  1232  000952  EFAD  F004         	goto	u380
  1233  000956                     u381:
  1234  000956  EFB2  F004         	goto	l1464
  1235  00095A                     u380:
  1236  00095A  5081               	movf	129,w,c	;volatile
  1237  00095C  0908               	iorlw	8
  1238  00095E  6E8A               	movwf	138,c	;volatile
  1239  000960  EFB5  F004         	goto	l163
  1240  000964                     l1464:
  1241  000964  5081               	movf	129,w,c	;volatile
  1242  000966  0BF7               	andlw	247
  1243  000968  6E8A               	movwf	138,c	;volatile
  1244  00096A                     l163:
  1245                           
  1246                           ;src/app/display_lcd/display_lcd.c: 63:     auxByte = (byte & 0xF0);
  1247  00096A  502B               	movf	Display_SendByte@byte^0,w,c
  1248  00096C  0BF0               	andlw	240
  1249  00096E  6E2C               	movwf	Display_SendByte@auxByte^0,c
  1250                           
  1251                           ;src/app/display_lcd/display_lcd.c: 65:     LATB = ((PORTB & 0x0F) | auxByte);;
  1252  000970  5081               	movf	129,w,c	;volatile
  1253  000972  0B0F               	andlw	15
  1254  000974  102C               	iorwf	Display_SendByte@auxByte^0,w,c
  1255  000976  6E8A               	movwf	138,c	;volatile
  1256  000978  5081               	movf	129,w,c	;volatile
  1257  00097A  0BFB               	andlw	251
  1258  00097C  6E8A               	movwf	138,c	;volatile
  1259  00097E  5081               	movf	129,w,c	;volatile
  1260  000980  0904               	iorlw	4
  1261  000982  6E8A               	movwf	138,c	;volatile
  1262  000984                     
  1263                           ;src/app/display_lcd/display_lcd.c: 69:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1264  000984  0E53               	movlw	83
  1265  000986                     u627:
  1266  000986  2EE8               	decfsz	wreg,f,c
  1267  000988  D7FE               	bra	u627
  1268  00098A  F000               	nop	
  1269  00098C  5081               	movf	129,w,c	;volatile
  1270  00098E  0BFB               	andlw	251
  1271  000990  6E8A               	movwf	138,c	;volatile
  1272  000992                     
  1273                           ;src/app/display_lcd/display_lcd.c: 72:     auxByte = (byte << 0x04);
  1274  000992  382B               	swapf	Display_SendByte@byte^0,w,c
  1275  000994  0BF0               	andlw	240
  1276  000996  6E2C               	movwf	Display_SendByte@auxByte^0,c
  1277  000998                     
  1278                           ;src/app/display_lcd/display_lcd.c: 74:     LATB = auxByte;;
  1279  000998  C02C  FF8A         	movff	Display_SendByte@auxByte,3978	;volatile
  1280  00099C  5081               	movf	129,w,c	;volatile
  1281  00099E  0BFB               	andlw	251
  1282  0009A0  6E8A               	movwf	138,c	;volatile
  1283  0009A2  5081               	movf	129,w,c	;volatile
  1284  0009A4  0904               	iorlw	4
  1285  0009A6  6E8A               	movwf	138,c	;volatile
  1286  0009A8                     
  1287                           ;src/app/display_lcd/display_lcd.c: 78:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1288  0009A8  0E53               	movlw	83
  1289  0009AA                     u637:
  1290  0009AA  2EE8               	decfsz	wreg,f,c
  1291  0009AC  D7FE               	bra	u637
  1292  0009AE  F000               	nop	
  1293  0009B0  5081               	movf	129,w,c	;volatile
  1294  0009B2  0BFB               	andlw	251
  1295  0009B4  6E8A               	movwf	138,c	;volatile
  1296  0009B6                     
  1297                           ;src/app/display_lcd/display_lcd.c: 81:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  1298  0009B6  0E04               	movlw	4
  1299  0009B8  6E2A               	movwf	??_Display_SendByte^0,c
  1300  0009BA  0E3E               	movlw	62
  1301  0009BC                     u647:
  1302  0009BC  2EE8               	decfsz	wreg,f,c
  1303  0009BE  D7FE               	bra	u647
  1304  0009C0  2E2A               	decfsz	??_Display_SendByte^0,f,c
  1305  0009C2  D7FC               	bra	u647
  1306  0009C4  0012               	return		;funcret
  1307  0009C6                     __end_of_Display_SendByte:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _Bluetooth_HC_06_Configure *****************
  1311 ;; Defined at:
  1312 ;;		line 8 in file "src/app/bluetooth-hc-06/bluetooth_hc_06.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  response_blu   10    0        unsigned char [10]
  1317 ;;  timeOut         2    0        unsigned short 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1327 ;;      Params:         0       0       0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 4
  1334 ;; This function calls:
  1335 ;;		_Serial_TransmitBuffer
  1336 ;;		_strcat
  1337 ;; This function is called by:
  1338 ;;		_StartSystem
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text9
  1343  000E1C                     __ptext9:
  1344                           	callstack 0
  1345  000E1C                     _Bluetooth_HC_06_Configure:
  1346                           	callstack 25
  1347  000E1C  0012               	return		;funcret
  1348  000E1E                     __end_of_Bluetooth_HC_06_Configure:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _strcat *****************
  1352 ;; Defined at:
  1353 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcat.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  dest            2   14[COMRAM] PTR unsigned char 
  1356 ;;		 -> BLUETOOTH_BAUD_COMM(8), 
  1357 ;;  src             2   16[COMRAM] PTR const unsigned char 
  1358 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1359 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1360 ;;		 -> STR_2(2), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2   14[COMRAM] PTR unsigned char 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1372 ;;      Params:         4       0       0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0
  1375 ;;      Totals:         4       0       0       0       0       0       0
  1376 ;;Total ram usage:        4 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 3
  1379 ;; This function calls:
  1380 ;;		_strcpy
  1381 ;;		_strlen
  1382 ;; This function is called by:
  1383 ;;		_Bluetooth_HC_06_Configure
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text10
  1388  000DE0                     __ptext10:
  1389                           	callstack 0
  1390  000DE0                     _strcat:
  1391                           	callstack 25
  1392  000DE0  C035  F029         	movff	strcat@dest,strlen@s
  1393  000DE4  C036  F02A         	movff	strcat@dest+1,strlen@s+1
  1394  000DE8  ECA8  F006         	call	_strlen	;wreg free
  1395  000DEC  5029               	movf	?_strlen^0,w,c
  1396  000DEE  2435               	addwf	strcat@dest^0,w,c
  1397  000DF0  6E2D               	movwf	strcpy@dest^0,c
  1398  000DF2  502A               	movf	(?_strlen+1)^0,w,c
  1399  000DF4  2036               	addwfc	(strcat@dest+1)^0,w,c
  1400  000DF6  6E2E               	movwf	(strcpy@dest+1)^0,c
  1401  000DF8  C037  F02F         	movff	strcat@src,strcpy@src
  1402  000DFC  C038  F030         	movff	strcat@src+1,strcpy@src+1
  1403  000E00  EC6B  F006         	call	_strcpy	;wreg free
  1404  000E04  0012               	return		;funcret
  1405  000E06                     __end_of_strcat:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _strlen *****************
  1409 ;; Defined at:
  1410 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  s               2    2[COMRAM] PTR const unsigned char 
  1413 ;;		 -> BLUETOOTH_BAUD_COMM(8), 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  a               2    4[COMRAM] PTR const unsigned char 
  1416 ;;		 -> BLUETOOTH_BAUD_COMM(8), 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2    2[COMRAM] unsigned int 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         2       0       0       0       0       0       0
  1427 ;;      Locals:         2       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         4       0       0       0       0       0       0
  1430 ;;Total ram usage:        4 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 2
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_strcat
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text11
  1441  000D50                     __ptext11:
  1442                           	callstack 0
  1443  000D50                     _strlen:
  1444                           	callstack 25
  1445  000D50  C029  F02B         	movff	strlen@s,strlen@a
  1446  000D54  C02A  F02C         	movff	strlen@s+1,strlen@a+1
  1447  000D58  EFB0  F006         	goto	l1436
  1448  000D5C                     l1434:
  1449  000D5C  4A29               	infsnz	strlen@s^0,f,c
  1450  000D5E  2A2A               	incf	(strlen@s+1)^0,f,c
  1451  000D60                     l1436:
  1452  000D60  C029  FFD9         	movff	strlen@s,fsr2l
  1453  000D64  C02A  FFDA         	movff	strlen@s+1,fsr2h
  1454  000D68  50DF               	movf	indf2,w,c
  1455  000D6A  A4D8               	btfss	status,2,c
  1456  000D6C  EFBA  F006         	goto	u331
  1457  000D70  EFBC  F006         	goto	u330
  1458  000D74                     u331:
  1459  000D74  EFAE  F006         	goto	l1434
  1460  000D78                     u330:
  1461  000D78  502B               	movf	strlen@a^0,w,c
  1462  000D7A  5C29               	subwf	strlen@s^0,w,c
  1463  000D7C  6E29               	movwf	?_strlen^0,c
  1464  000D7E  502C               	movf	(strlen@a+1)^0,w,c
  1465  000D80  582A               	subwfb	(strlen@s+1)^0,w,c
  1466  000D82  6E2A               	movwf	(?_strlen+1)^0,c
  1467  000D84  0012               	return		;funcret
  1468  000D86                     __end_of_strlen:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _strcpy *****************
  1472 ;; Defined at:
  1473 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1476 ;;		 -> BLUETOOTH_BAUD_COMM(8), 
  1477 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1478 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1479 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1480 ;;		 -> STR_2(2), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  d               2   12[COMRAM] PTR unsigned char 
  1483 ;;		 -> BLUETOOTH_BAUD_COMM(8), 
  1484 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1485 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1486 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1487 ;;		 -> STR_2(2), 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2    6[COMRAM] PTR unsigned char 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         4       0       0       0       0       0       0
  1498 ;;      Locals:         4       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0
  1500 ;;      Totals:         8       0       0       0       0       0       0
  1501 ;;Total ram usage:        8 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 2
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_strcat
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text12
  1512  000CD6                     __ptext12:
  1513                           	callstack 0
  1514  000CD6                     _strcpy:
  1515                           	callstack 25
  1516  000CD6  C02F  F031         	movff	strcpy@src,strcpy@s
  1517  000CDA  C030  F032         	movff	strcpy@src+1,strcpy@s+1
  1518  000CDE  C02D  F033         	movff	strcpy@dest,strcpy@d
  1519  000CE2  C02E  F034         	movff	strcpy@dest+1,strcpy@d+1
  1520  000CE6                     l1444:
  1521  000CE6  C031  FFF6         	movff	strcpy@s,tblptrl
  1522  000CEA  C032  FFF7         	movff	strcpy@s+1,tblptrh
  1523  000CEE  4A31               	infsnz	strcpy@s^0,f,c
  1524  000CF0  2A32               	incf	(strcpy@s+1)^0,f,c
  1525  000CF2                     	if	0	;tblptru may be non-zero
  1526  000CF2                     	endif
  1527  000CF2                     	if	0	;tblptru may be non-zero
  1528  000CF2                     	endif
  1529  000CF2  C033  FFD9         	movff	strcpy@d,fsr2l
  1530  000CF6  C034  FFDA         	movff	strcpy@d+1,fsr2h
  1531  000CFA  4A33               	infsnz	strcpy@d^0,f,c
  1532  000CFC  2A34               	incf	(strcpy@d+1)^0,f,c
  1533  000CFE  0008               	tblrd		*
  1534  000D00  CFF5 FFDF          	movff	tablat,indf2
  1535  000D04  50DF               	movf	indf2,w,c
  1536  000D06  A4D8               	btfss	status,2,c
  1537  000D08  EF88  F006         	goto	u341
  1538  000D0C  EF8A  F006         	goto	u340
  1539  000D10                     u341:
  1540  000D10  EF73  F006         	goto	l1444
  1541  000D14                     u340:
  1542  000D14  0012               	return		;funcret
  1543  000D16                     __end_of_strcpy:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _Serial_TransmitBuffer *****************
  1547 ;; Defined at:
  1548 ;;		line 137 in file "src/pic18f4520/serial/serial.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  1551 ;;		 -> BLUETOOTH_BAUD_COMM(8), STR_1(4), 
  1552 ;;  length          1    4[COMRAM] unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  auxLength       1    7[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1564 ;;      Params:         3       0       0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0
  1566 ;;      Temps:          2       0       0       0       0       0       0
  1567 ;;      Totals:         6       0       0       0       0       0       0
  1568 ;;Total ram usage:        6 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 2
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;;		_Bluetooth_HC_06_Configure
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text13
  1580  000B56                     __ptext13:
  1581                           	callstack 0
  1582  000B56                     _Serial_TransmitBuffer:
  1583                           	callstack 26
  1584  000B56                     
  1585                           ;src/pic18f4520/serial/serial.c: 137: void Serial_TransmitBuffer(uint8_t* buffer, uint8_
      +                          t length);src/pic18f4520/serial/serial.c: 138: {;src/pic18f4520/serial/serial.c: 139:   
      +                            uint8_t auxLength = 0x00;
  1586  000B56  0E00               	movlw	0
  1587  000B58  6E2E               	movwf	Serial_TransmitBuffer@auxLength^0,c
  1588                           
  1589                           ;src/pic18f4520/serial/serial.c: 140:     while(auxLength < length)
  1590  000B5A  EFCE  F005         	goto	l1452
  1591  000B5E                     l1448:
  1592                           
  1593                           ;src/pic18f4520/serial/serial.c: 141:     {;src/pic18f4520/serial/serial.c: 142:        
      +                           TXREG = buffer[auxLength];
  1594  000B5E  502E               	movf	Serial_TransmitBuffer@auxLength^0,w,c
  1595  000B60  2429               	addwf	Serial_TransmitBuffer@buffer^0,w,c
  1596  000B62  6E2C               	movwf	??_Serial_TransmitBuffer^0,c
  1597  000B64  0E00               	movlw	0
  1598  000B66  202A               	addwfc	(Serial_TransmitBuffer@buffer+1)^0,w,c
  1599  000B68  6E2D               	movwf	(??_Serial_TransmitBuffer+1)^0,c
  1600  000B6A  C02C  FFF6         	movff	??_Serial_TransmitBuffer,tblptrl
  1601  000B6E  C02D  FFF7         	movff	??_Serial_TransmitBuffer+1,tblptrh
  1602  000B72  6AF8               	clrf	tblptru,c
  1603  000B74  0E05               	movlw	(high __ramtop+-1)
  1604  000B76  64F7               	cpfsgt	tblptrh,c
  1605  000B78  D003               	bra	u357
  1606  000B7A  0008               	tblrd		*
  1607  000B7C  50F5               	movf	tablat,w,c
  1608  000B7E  D005               	bra	u350
  1609  000B80                     u357:
  1610  000B80  CFF6 FFE9          	movff	tblptrl,fsr0l
  1611  000B84  CFF7 FFEA          	movff	tblptrh,fsr0h
  1612  000B88  50EF               	movf	indf0,w,c
  1613  000B8A                     u350:
  1614  000B8A  6EAD               	movwf	173,c	;volatile
  1615  000B8C                     l298:
  1616  000B8C  A2AC               	btfss	4012,1,c	;volatile
  1617  000B8E  EFCB  F005         	goto	u361
  1618  000B92  EFCD  F005         	goto	u360
  1619  000B96                     u361:
  1620  000B96  EFC6  F005         	goto	l298
  1621  000B9A                     u360:
  1622  000B9A                     
  1623                           ;src/pic18f4520/serial/serial.c: 145:         auxLength++;
  1624  000B9A  2A2E               	incf	Serial_TransmitBuffer@auxLength^0,f,c
  1625  000B9C                     l1452:
  1626                           
  1627                           ;src/pic18f4520/serial/serial.c: 140:     while(auxLength < length)
  1628  000B9C  502B               	movf	Serial_TransmitBuffer@length^0,w,c
  1629  000B9E  5C2E               	subwf	Serial_TransmitBuffer@auxLength^0,w,c
  1630  000BA0  A0D8               	btfss	status,0,c
  1631  000BA2  EFD5  F005         	goto	u371
  1632  000BA6  EFD7  F005         	goto	u370
  1633  000BAA                     u371:
  1634  000BAA  EFAF  F005         	goto	l1448
  1635  000BAE                     u370:
  1636  000BAE  0012               	return		;funcret
  1637  000BB0                     __end_of_Serial_TransmitBuffer:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _Serial_1_Config *****************
  1641 ;; Defined at:
  1642 ;;		line 6 in file "src/pic18f4520/serial/serial.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  serialConfig    2   15[COMRAM] PTR struct .
  1645 ;;		 -> serialConfig(7), 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  error_min       1   27[COMRAM] unsigned char 
  1648 ;;  error_8HIGH     1   26[COMRAM] unsigned char 
  1649 ;;  brg16HIGH       1   25[COMRAM] unsigned char 
  1650 ;;  brg8HIGH        1   24[COMRAM] unsigned char 
  1651 ;;  brg8LOW         1   23[COMRAM] unsigned char 
  1652 ;;  error_16HIGH    1   22[COMRAM] unsigned char 
  1653 ;;  error_8LOW      1   21[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1663 ;;      Params:         2       0       0       0       0       0       0
  1664 ;;      Locals:         7       0       0       0       0       0       0
  1665 ;;      Temps:          4       0       0       0       0       0       0
  1666 ;;      Totals:        13       0       0       0       0       0       0
  1667 ;;Total ram usage:       13 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 3
  1670 ;; This function calls:
  1671 ;;		___lldiv
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text14
  1678  000638                     __ptext14:
  1679                           	callstack 0
  1680  000638                     _Serial_1_Config:
  1681                           	callstack 27
  1682  000638                     
  1683                           ;src/pic18f4520/serial/serial.c: 29:     uint8_t brg8LOW;;src/pic18f4520/serial/serial.c
      +                          : 30:     uint8_t brg8HIGH;;src/pic18f4520/serial/serial.c: 31:     uint8_t brg16HIGH;;s
      +                          rc/pic18f4520/serial/serial.c: 34:     uint8_t error_8LOW;;src/pic18f4520/serial/serial.
      +                          c: 35:     uint8_t error_8HIGH;;src/pic18f4520/serial/serial.c: 36:     uint8_t error_16
      +                          HIGH;;src/pic18f4520/serial/serial.c: 38:     uint8_t error_min;;src/pic18f4520/serial/s
      +                          erial.c: 41:     brg8LOW = (10000000UL/(serialConfig->serial_desired_baud * 64));
  1684  000638  0E80               	movlw	128
  1685  00063A  6E29               	movwf	___lldiv@dividend^0,c
  1686  00063C  0E96               	movlw	150
  1687  00063E  6E2A               	movwf	(___lldiv@dividend+1)^0,c
  1688  000640  0E98               	movlw	152
  1689  000642  6E2B               	movwf	(___lldiv@dividend+2)^0,c
  1690  000644  0E00               	movlw	0
  1691  000646  6E2C               	movwf	(___lldiv@dividend+3)^0,c
  1692  000648  EE20 F003          	lfsr	2,3
  1693  00064C  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1694  00064E  26D9               	addwf	fsr2l,f,c
  1695  000650  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1696  000652  22DA               	addwfc	fsr2h,f,c
  1697  000654  CFDE F038          	movff	postinc2,??_Serial_1_Config
  1698  000658  CFDE F039          	movff	postinc2,??_Serial_1_Config+1
  1699  00065C  CFDE F03A          	movff	postinc2,??_Serial_1_Config+2
  1700  000660  CFDE F03B          	movff	postinc2,??_Serial_1_Config+3
  1701  000664  0E06               	movlw	6
  1702  000666                     u455:
  1703  000666  90D8               	bcf	status,0,c
  1704  000668  3638               	rlcf	??_Serial_1_Config^0,f,c
  1705  00066A  3639               	rlcf	(??_Serial_1_Config+1)^0,f,c
  1706  00066C  363A               	rlcf	(??_Serial_1_Config+2)^0,f,c
  1707  00066E  363B               	rlcf	(??_Serial_1_Config+3)^0,f,c
  1708  000670  2EE8               	decfsz	wreg,f,c
  1709  000672  EF33  F003         	goto	u455
  1710  000676  C038  F02D         	movff	??_Serial_1_Config,___lldiv@divisor
  1711  00067A  C039  F02E         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
  1712  00067E  C03A  F02F         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
  1713  000682  C03B  F030         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
  1714  000686  EC52  F004         	call	___lldiv	;wreg free
  1715  00068A  5029               	movf	?___lldiv^0,w,c
  1716  00068C  6E3E               	movwf	Serial_1_Config@brg8LOW^0,c
  1717                           
  1718                           ;src/pic18f4520/serial/serial.c: 42:     brg8HIGH = (10000000UL/(serialConfig->serial_de
      +                          sired_baud * 16));
  1719  00068E  0E80               	movlw	128
  1720  000690  6E29               	movwf	___lldiv@dividend^0,c
  1721  000692  0E96               	movlw	150
  1722  000694  6E2A               	movwf	(___lldiv@dividend+1)^0,c
  1723  000696  0E98               	movlw	152
  1724  000698  6E2B               	movwf	(___lldiv@dividend+2)^0,c
  1725  00069A  0E00               	movlw	0
  1726  00069C  6E2C               	movwf	(___lldiv@dividend+3)^0,c
  1727  00069E  EE20 F003          	lfsr	2,3
  1728  0006A2  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1729  0006A4  26D9               	addwf	fsr2l,f,c
  1730  0006A6  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1731  0006A8  22DA               	addwfc	fsr2h,f,c
  1732  0006AA  CFDE F038          	movff	postinc2,??_Serial_1_Config
  1733  0006AE  CFDE F039          	movff	postinc2,??_Serial_1_Config+1
  1734  0006B2  CFDE F03A          	movff	postinc2,??_Serial_1_Config+2
  1735  0006B6  CFDE F03B          	movff	postinc2,??_Serial_1_Config+3
  1736  0006BA  0E04               	movlw	4
  1737  0006BC                     u465:
  1738  0006BC  90D8               	bcf	status,0,c
  1739  0006BE  3638               	rlcf	??_Serial_1_Config^0,f,c
  1740  0006C0  3639               	rlcf	(??_Serial_1_Config+1)^0,f,c
  1741  0006C2  363A               	rlcf	(??_Serial_1_Config+2)^0,f,c
  1742  0006C4  363B               	rlcf	(??_Serial_1_Config+3)^0,f,c
  1743  0006C6  2EE8               	decfsz	wreg,f,c
  1744  0006C8  EF5E  F003         	goto	u465
  1745  0006CC  C038  F02D         	movff	??_Serial_1_Config,___lldiv@divisor
  1746  0006D0  C039  F02E         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
  1747  0006D4  C03A  F02F         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
  1748  0006D8  C03B  F030         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
  1749  0006DC  EC52  F004         	call	___lldiv	;wreg free
  1750  0006E0  5029               	movf	?___lldiv^0,w,c
  1751  0006E2  6E3F               	movwf	Serial_1_Config@brg8HIGH^0,c
  1752                           
  1753                           ;src/pic18f4520/serial/serial.c: 43:     brg16HIGH = (10000000UL/(serialConfig->serial_d
      +                          esired_baud * 4));
  1754  0006E4  0E80               	movlw	128
  1755  0006E6  6E29               	movwf	___lldiv@dividend^0,c
  1756  0006E8  0E96               	movlw	150
  1757  0006EA  6E2A               	movwf	(___lldiv@dividend+1)^0,c
  1758  0006EC  0E98               	movlw	152
  1759  0006EE  6E2B               	movwf	(___lldiv@dividend+2)^0,c
  1760  0006F0  0E00               	movlw	0
  1761  0006F2  6E2C               	movwf	(___lldiv@dividend+3)^0,c
  1762  0006F4  EE20 F003          	lfsr	2,3
  1763  0006F8  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1764  0006FA  26D9               	addwf	fsr2l,f,c
  1765  0006FC  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1766  0006FE  22DA               	addwfc	fsr2h,f,c
  1767  000700  CFDE F038          	movff	postinc2,??_Serial_1_Config
  1768  000704  CFDE F039          	movff	postinc2,??_Serial_1_Config+1
  1769  000708  CFDE F03A          	movff	postinc2,??_Serial_1_Config+2
  1770  00070C  CFDE F03B          	movff	postinc2,??_Serial_1_Config+3
  1771  000710  0E02               	movlw	2
  1772  000712                     u475:
  1773  000712  90D8               	bcf	status,0,c
  1774  000714  3638               	rlcf	??_Serial_1_Config^0,f,c
  1775  000716  3639               	rlcf	(??_Serial_1_Config+1)^0,f,c
  1776  000718  363A               	rlcf	(??_Serial_1_Config+2)^0,f,c
  1777  00071A  363B               	rlcf	(??_Serial_1_Config+3)^0,f,c
  1778  00071C  2EE8               	decfsz	wreg,f,c
  1779  00071E  EF89  F003         	goto	u475
  1780  000722  C038  F02D         	movff	??_Serial_1_Config,___lldiv@divisor
  1781  000726  C039  F02E         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
  1782  00072A  C03A  F02F         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
  1783  00072E  C03B  F030         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
  1784  000732  EC52  F004         	call	___lldiv	;wreg free
  1785  000736  5029               	movf	?___lldiv^0,w,c
  1786  000738  6E40               	movwf	Serial_1_Config@brg16HIGH^0,c
  1787  00073A                     
  1788                           ;src/pic18f4520/serial/serial.c: 46:     error_8LOW = (10000000UL/(brg8LOW * 64)) - seri
      +                          alConfig->serial_desired_baud;
  1789  00073A  EE20 F003          	lfsr	2,3
  1790  00073E  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1791  000740  26D9               	addwf	fsr2l,f,c
  1792  000742  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1793  000744  22DA               	addwfc	fsr2h,f,c
  1794  000746  50DF               	movf	indf2,w,c
  1795  000748  6E38               	movwf	??_Serial_1_Config^0,c
  1796  00074A  0E80               	movlw	128
  1797  00074C  6E29               	movwf	___lldiv@dividend^0,c
  1798  00074E  0E96               	movlw	150
  1799  000750  6E2A               	movwf	(___lldiv@dividend+1)^0,c
  1800  000752  0E98               	movlw	152
  1801  000754  6E2B               	movwf	(___lldiv@dividend+2)^0,c
  1802  000756  0E00               	movlw	0
  1803  000758  6E2C               	movwf	(___lldiv@dividend+3)^0,c
  1804  00075A  503E               	movf	Serial_1_Config@brg8LOW^0,w,c
  1805  00075C  0D40               	mullw	64
  1806  00075E  CFF3 F039          	movff	prodl,??_Serial_1_Config+1
  1807  000762  CFF4 F03A          	movff	prodh,??_Serial_1_Config+2
  1808  000766  C039  F02D         	movff	??_Serial_1_Config+1,___lldiv@divisor
  1809  00076A  C03A  F02E         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
  1810  00076E  0E00               	movlw	0
  1811  000770  BE2E               	btfsc	(___lldiv@divisor+1)^0,7,c
  1812  000772  0EFF               	movlw	-1
  1813  000774  6E2F               	movwf	(___lldiv@divisor+2)^0,c
  1814  000776  6E30               	movwf	(___lldiv@divisor+3)^0,c
  1815  000778  EC52  F004         	call	___lldiv	;wreg free
  1816  00077C  5038               	movf	??_Serial_1_Config^0,w,c
  1817  00077E  5C29               	subwf	?___lldiv^0,w,c
  1818  000780  6E3C               	movwf	Serial_1_Config@error_8LOW^0,c
  1819  000782                     
  1820                           ;src/pic18f4520/serial/serial.c: 47:     error_8HIGH = (10000000UL/(brg8HIGH * 16)) - se
      +                          rialConfig->serial_desired_baud;
  1821  000782  EE20 F003          	lfsr	2,3
  1822  000786  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1823  000788  26D9               	addwf	fsr2l,f,c
  1824  00078A  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1825  00078C  22DA               	addwfc	fsr2h,f,c
  1826  00078E  50DF               	movf	indf2,w,c
  1827  000790  6E38               	movwf	??_Serial_1_Config^0,c
  1828  000792  0E80               	movlw	128
  1829  000794  6E29               	movwf	___lldiv@dividend^0,c
  1830  000796  0E96               	movlw	150
  1831  000798  6E2A               	movwf	(___lldiv@dividend+1)^0,c
  1832  00079A  0E98               	movlw	152
  1833  00079C  6E2B               	movwf	(___lldiv@dividend+2)^0,c
  1834  00079E  0E00               	movlw	0
  1835  0007A0  6E2C               	movwf	(___lldiv@dividend+3)^0,c
  1836  0007A2  503F               	movf	Serial_1_Config@brg8HIGH^0,w,c
  1837  0007A4  0D10               	mullw	16
  1838  0007A6  CFF3 F039          	movff	prodl,??_Serial_1_Config+1
  1839  0007AA  CFF4 F03A          	movff	prodh,??_Serial_1_Config+2
  1840  0007AE  C039  F02D         	movff	??_Serial_1_Config+1,___lldiv@divisor
  1841  0007B2  C03A  F02E         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
  1842  0007B6  0E00               	movlw	0
  1843  0007B8  BE2E               	btfsc	(___lldiv@divisor+1)^0,7,c
  1844  0007BA  0EFF               	movlw	-1
  1845  0007BC  6E2F               	movwf	(___lldiv@divisor+2)^0,c
  1846  0007BE  6E30               	movwf	(___lldiv@divisor+3)^0,c
  1847  0007C0  EC52  F004         	call	___lldiv	;wreg free
  1848  0007C4  5038               	movf	??_Serial_1_Config^0,w,c
  1849  0007C6  5C29               	subwf	?___lldiv^0,w,c
  1850  0007C8  6E41               	movwf	Serial_1_Config@error_8HIGH^0,c
  1851  0007CA                     
  1852                           ;src/pic18f4520/serial/serial.c: 48:     error_16HIGH = (10000000UL/(brg16HIGH * 4)) - s
      +                          erialConfig->serial_desired_baud;
  1853  0007CA  EE20 F003          	lfsr	2,3
  1854  0007CE  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1855  0007D0  26D9               	addwf	fsr2l,f,c
  1856  0007D2  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1857  0007D4  22DA               	addwfc	fsr2h,f,c
  1858  0007D6  50DF               	movf	indf2,w,c
  1859  0007D8  6E38               	movwf	??_Serial_1_Config^0,c
  1860  0007DA  0E80               	movlw	128
  1861  0007DC  6E29               	movwf	___lldiv@dividend^0,c
  1862  0007DE  0E96               	movlw	150
  1863  0007E0  6E2A               	movwf	(___lldiv@dividend+1)^0,c
  1864  0007E2  0E98               	movlw	152
  1865  0007E4  6E2B               	movwf	(___lldiv@dividend+2)^0,c
  1866  0007E6  0E00               	movlw	0
  1867  0007E8  6E2C               	movwf	(___lldiv@dividend+3)^0,c
  1868  0007EA  5040               	movf	Serial_1_Config@brg16HIGH^0,w,c
  1869  0007EC  0D04               	mullw	4
  1870  0007EE  CFF3 F039          	movff	prodl,??_Serial_1_Config+1
  1871  0007F2  CFF4 F03A          	movff	prodh,??_Serial_1_Config+2
  1872  0007F6  C039  F02D         	movff	??_Serial_1_Config+1,___lldiv@divisor
  1873  0007FA  C03A  F02E         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
  1874  0007FE  0E00               	movlw	0
  1875  000800  BE2E               	btfsc	(___lldiv@divisor+1)^0,7,c
  1876  000802  0EFF               	movlw	-1
  1877  000804  6E2F               	movwf	(___lldiv@divisor+2)^0,c
  1878  000806  6E30               	movwf	(___lldiv@divisor+3)^0,c
  1879  000808  EC52  F004         	call	___lldiv	;wreg free
  1880  00080C  5038               	movf	??_Serial_1_Config^0,w,c
  1881  00080E  5C29               	subwf	?___lldiv^0,w,c
  1882  000810  6E3D               	movwf	Serial_1_Config@error_16HIGH^0,c
  1883  000812                     
  1884                           ;src/pic18f4520/serial/serial.c: 51:     error_min = error_8LOW;
  1885  000812  C03C  F042         	movff	Serial_1_Config@error_8LOW,Serial_1_Config@error_min
  1886  000816                     
  1887                           ;src/pic18f4520/serial/serial.c: 53:     BAUDCONbits.BRG16 = 0x00;
  1888  000816  96B8               	bcf	184,3,c	;volatile
  1889  000818                     
  1890                           ;src/pic18f4520/serial/serial.c: 54:     TXSTAbits.BRGH = 0x00;
  1891  000818  94AC               	bcf	172,2,c	;volatile
  1892  00081A                     
  1893                           ;src/pic18f4520/serial/serial.c: 56:     SPBRG = (brg8LOW - 1);
  1894  00081A  043E               	decf	Serial_1_Config@brg8LOW^0,w,c
  1895  00081C  6EAF               	movwf	175,c	;volatile
  1896  00081E                     
  1897                           ;src/pic18f4520/serial/serial.c: 58:     if(error_8HIGH < error_min)
  1898  00081E  5042               	movf	Serial_1_Config@error_min^0,w,c
  1899  000820  5C41               	subwf	Serial_1_Config@error_8HIGH^0,w,c
  1900  000822  B0D8               	btfsc	status,0,c
  1901  000824  EF16  F004         	goto	u481
  1902  000828  EF18  F004         	goto	u480
  1903  00082C                     u481:
  1904  00082C  EF1E  F004         	goto	l283
  1905  000830                     u480:
  1906  000830                     
  1907                           ;src/pic18f4520/serial/serial.c: 59:     {;src/pic18f4520/serial/serial.c: 60:         e
      +                          rror_min = error_8HIGH;
  1908  000830  C041  F042         	movff	Serial_1_Config@error_8HIGH,Serial_1_Config@error_min
  1909                           
  1910                           ;src/pic18f4520/serial/serial.c: 62:         BAUDCONbits.BRG16 = 0x00;
  1911  000834  96B8               	bcf	184,3,c	;volatile
  1912                           
  1913                           ;src/pic18f4520/serial/serial.c: 63:         TXSTAbits.BRGH = 0x01;
  1914  000836  84AC               	bsf	172,2,c	;volatile
  1915  000838                     
  1916                           ;src/pic18f4520/serial/serial.c: 65:         SPBRG = (brg8HIGH - 1);
  1917  000838  043F               	decf	Serial_1_Config@brg8HIGH^0,w,c
  1918  00083A  6EAF               	movwf	175,c	;volatile
  1919  00083C                     l283:
  1920                           
  1921                           ;src/pic18f4520/serial/serial.c: 67:     if(error_16HIGH < error_min)
  1922  00083C  5042               	movf	Serial_1_Config@error_min^0,w,c
  1923  00083E  5C3D               	subwf	Serial_1_Config@error_16HIGH^0,w,c
  1924  000840  B0D8               	btfsc	status,0,c
  1925  000842  EF25  F004         	goto	u491
  1926  000846  EF27  F004         	goto	u490
  1927  00084A                     u491:
  1928  00084A  EF2B  F004         	goto	l1630
  1929  00084E                     u490:
  1930  00084E                     
  1931                           ;src/pic18f4520/serial/serial.c: 68:     {;src/pic18f4520/serial/serial.c: 69:         B
      +                          AUDCONbits.BRG16 = 0x01;
  1932  00084E  86B8               	bsf	184,3,c	;volatile
  1933                           
  1934                           ;src/pic18f4520/serial/serial.c: 70:         TXSTAbits.BRGH = 0x01;
  1935  000850  84AC               	bsf	172,2,c	;volatile
  1936  000852                     
  1937                           ;src/pic18f4520/serial/serial.c: 72:         SPBRG = (brg16HIGH - 1);
  1938  000852  0440               	decf	Serial_1_Config@brg16HIGH^0,w,c
  1939  000854  6EAF               	movwf	175,c	;volatile
  1940  000856                     l1630:
  1941                           
  1942                           ;src/pic18f4520/serial/serial.c: 80:     TXSTAbits.SYNC = serialConfig->serial_op_mode;
  1943  000856  EE20 F002          	lfsr	2,2
  1944  00085A  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1945  00085C  26D9               	addwf	fsr2l,f,c
  1946  00085E  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1947  000860  22DA               	addwfc	fsr2h,f,c
  1948  000862  50DF               	movf	indf2,w,c
  1949  000864  6E38               	movwf	??_Serial_1_Config^0,c
  1950  000866  3A38               	swapf	??_Serial_1_Config^0,f,c
  1951  000868  50AC               	movf	172,w,c	;volatile
  1952  00086A  1838               	xorwf	??_Serial_1_Config^0,w,c
  1953  00086C  0BEF               	andlw	-17
  1954  00086E  1838               	xorwf	??_Serial_1_Config^0,w,c
  1955  000870  6EAC               	movwf	172,c	;volatile
  1956  000872                     
  1957                           ;src/pic18f4520/serial/serial.c: 86:     RCSTAbits.SPEN = 0x01;
  1958  000872  8EAB               	bsf	171,7,c	;volatile
  1959  000874                     
  1960                           ;src/pic18f4520/serial/serial.c: 100:     if(serialConfig->serial_data_length == SERIAL_
      +                          DATA_LENGTH_9)
  1961  000874  EE20 F001          	lfsr	2,1
  1962  000878  5036               	movf	Serial_1_Config@serialConfig^0,w,c
  1963  00087A  26D9               	addwf	fsr2l,f,c
  1964  00087C  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1965  00087E  22DA               	addwfc	fsr2h,f,c
  1966  000880  04DE               	decf	postinc2,w,c
  1967  000882  A4D8               	btfss	status,2,c
  1968  000884  EF46  F004         	goto	u501
  1969  000888  EF48  F004         	goto	u500
  1970  00088C                     u501:
  1971  00088C  EF4C  F004         	goto	l285
  1972  000890                     u500:
  1973  000890                     
  1974                           ;src/pic18f4520/serial/serial.c: 101:     {;src/pic18f4520/serial/serial.c: 102:        
      +                           TXSTAbits.TX9 = 0x01;
  1975  000890  8CAC               	bsf	172,6,c	;volatile
  1976                           
  1977                           ;src/pic18f4520/serial/serial.c: 103:         RCSTAbits.RC9 = 0x01;
  1978  000892  8CAB               	bsf	171,6,c	;volatile
  1979                           
  1980                           ;src/pic18f4520/serial/serial.c: 104:     }else
  1981  000894  EF4E  F004         	goto	l286
  1982  000898                     l285:
  1983                           
  1984                           ;src/pic18f4520/serial/serial.c: 105:     {;src/pic18f4520/serial/serial.c: 106:        
      +                           TXSTAbits.TX9 = 0x00;
  1985  000898  9CAC               	bcf	172,6,c	;volatile
  1986                           
  1987                           ;src/pic18f4520/serial/serial.c: 107:         RCSTAbits.RC9 = 0x00;
  1988  00089A  9CAB               	bcf	171,6,c	;volatile
  1989  00089C                     l286:
  1990                           
  1991                           ;src/pic18f4520/serial/serial.c: 123:     TXSTAbits.TXEN = 0x01;
  1992  00089C  8AAC               	bsf	172,5,c	;volatile
  1993                           
  1994                           ;src/pic18f4520/serial/serial.c: 124:     RCSTAbits.CREN = 0x01;
  1995  00089E  88AB               	bsf	171,4,c	;volatile
  1996                           
  1997                           ;src/pic18f4520/serial/serial.c: 126:     PIE1bits.RCIE = 0x01;
  1998  0008A0  8A9D               	bsf	157,5,c	;volatile
  1999  0008A2  0012               	return		;funcret
  2000  0008A4                     __end_of_Serial_1_Config:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function ___lldiv *****************
  2004 ;; Defined at:
  2005 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  dividend        4    2[COMRAM] unsigned long 
  2008 ;;  divisor         4    6[COMRAM] unsigned long 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  quotient        4   10[COMRAM] unsigned long 
  2011 ;;  counter         1   14[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  4    2[COMRAM] unsigned long 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2021 ;;      Params:         8       0       0       0       0       0       0
  2022 ;;      Locals:         5       0       0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0
  2024 ;;      Totals:        13       0       0       0       0       0       0
  2025 ;;Total ram usage:       13 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 2
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_Serial_1_Config
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text15
  2036  0008A4                     __ptext15:
  2037                           	callstack 0
  2038  0008A4                     ___lldiv:
  2039                           	callstack 27
  2040  0008A4  0E00               	movlw	0
  2041  0008A6  6E31               	movwf	___lldiv@quotient^0,c
  2042  0008A8  0E00               	movlw	0
  2043  0008AA  6E32               	movwf	(___lldiv@quotient+1)^0,c
  2044  0008AC  0E00               	movlw	0
  2045  0008AE  6E33               	movwf	(___lldiv@quotient+2)^0,c
  2046  0008B0  0E00               	movlw	0
  2047  0008B2  6E34               	movwf	(___lldiv@quotient+3)^0,c
  2048  0008B4  502D               	movf	___lldiv@divisor^0,w,c
  2049  0008B6  102E               	iorwf	(___lldiv@divisor+1)^0,w,c
  2050  0008B8  102F               	iorwf	(___lldiv@divisor+2)^0,w,c
  2051  0008BA  1030               	iorwf	(___lldiv@divisor+3)^0,w,c
  2052  0008BC  B4D8               	btfsc	status,2,c
  2053  0008BE  EF63  F004         	goto	u411
  2054  0008C2  EF65  F004         	goto	u410
  2055  0008C6                     u411:
  2056  0008C6  EF9B  F004         	goto	l369
  2057  0008CA                     u410:
  2058  0008CA  0E01               	movlw	1
  2059  0008CC  6E35               	movwf	___lldiv@counter^0,c
  2060  0008CE  EF6F  F004         	goto	l1586
  2061  0008D2                     l1584:
  2062  0008D2  90D8               	bcf	status,0,c
  2063  0008D4  362D               	rlcf	___lldiv@divisor^0,f,c
  2064  0008D6  362E               	rlcf	(___lldiv@divisor+1)^0,f,c
  2065  0008D8  362F               	rlcf	(___lldiv@divisor+2)^0,f,c
  2066  0008DA  3630               	rlcf	(___lldiv@divisor+3)^0,f,c
  2067  0008DC  2A35               	incf	___lldiv@counter^0,f,c
  2068  0008DE                     l1586:
  2069  0008DE  AE30               	btfss	(___lldiv@divisor+3)^0,7,c
  2070  0008E0  EF74  F004         	goto	u421
  2071  0008E4  EF76  F004         	goto	u420
  2072  0008E8                     u421:
  2073  0008E8  EF69  F004         	goto	l1584
  2074  0008EC                     u420:
  2075  0008EC                     l1588:
  2076  0008EC  90D8               	bcf	status,0,c
  2077  0008EE  3631               	rlcf	___lldiv@quotient^0,f,c
  2078  0008F0  3632               	rlcf	(___lldiv@quotient+1)^0,f,c
  2079  0008F2  3633               	rlcf	(___lldiv@quotient+2)^0,f,c
  2080  0008F4  3634               	rlcf	(___lldiv@quotient+3)^0,f,c
  2081  0008F6  502D               	movf	___lldiv@divisor^0,w,c
  2082  0008F8  5C29               	subwf	___lldiv@dividend^0,w,c
  2083  0008FA  502E               	movf	(___lldiv@divisor+1)^0,w,c
  2084  0008FC  582A               	subwfb	(___lldiv@dividend+1)^0,w,c
  2085  0008FE  502F               	movf	(___lldiv@divisor+2)^0,w,c
  2086  000900  582B               	subwfb	(___lldiv@dividend+2)^0,w,c
  2087  000902  5030               	movf	(___lldiv@divisor+3)^0,w,c
  2088  000904  582C               	subwfb	(___lldiv@dividend+3)^0,w,c
  2089  000906  A0D8               	btfss	status,0,c
  2090  000908  EF88  F004         	goto	u431
  2091  00090C  EF8A  F004         	goto	u430
  2092  000910                     u431:
  2093  000910  EF93  F004         	goto	l1596
  2094  000914                     u430:
  2095  000914  502D               	movf	___lldiv@divisor^0,w,c
  2096  000916  5E29               	subwf	___lldiv@dividend^0,f,c
  2097  000918  502E               	movf	(___lldiv@divisor+1)^0,w,c
  2098  00091A  5A2A               	subwfb	(___lldiv@dividend+1)^0,f,c
  2099  00091C  502F               	movf	(___lldiv@divisor+2)^0,w,c
  2100  00091E  5A2B               	subwfb	(___lldiv@dividend+2)^0,f,c
  2101  000920  5030               	movf	(___lldiv@divisor+3)^0,w,c
  2102  000922  5A2C               	subwfb	(___lldiv@dividend+3)^0,f,c
  2103  000924  8031               	bsf	___lldiv@quotient^0,0,c
  2104  000926                     l1596:
  2105  000926  90D8               	bcf	status,0,c
  2106  000928  3230               	rrcf	(___lldiv@divisor+3)^0,f,c
  2107  00092A  322F               	rrcf	(___lldiv@divisor+2)^0,f,c
  2108  00092C  322E               	rrcf	(___lldiv@divisor+1)^0,f,c
  2109  00092E  322D               	rrcf	___lldiv@divisor^0,f,c
  2110  000930  2E35               	decfsz	___lldiv@counter^0,f,c
  2111  000932  EF76  F004         	goto	l1588
  2112  000936                     l369:
  2113  000936  C031  F029         	movff	___lldiv@quotient,?___lldiv
  2114  00093A  C032  F02A         	movff	___lldiv@quotient+1,?___lldiv+1
  2115  00093E  C033  F02B         	movff	___lldiv@quotient+2,?___lldiv+2
  2116  000942  C034  F02C         	movff	___lldiv@quotient+3,?___lldiv+3
  2117  000946  0012               	return		;funcret
  2118  000948                     __end_of___lldiv:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _TC0INT *****************
  2122 ;; Defined at:
  2123 ;;		line 45 in file "src/main.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 1
  2144 ;; This function calls:
  2145 ;;		_Serial_Transmit
  2146 ;;		_tickHook_Execute
  2147 ;; This function is called by:
  2148 ;;		Interrupt level 2
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	intcode
  2153  000008                     __pintcode:
  2154                           	callstack 0
  2155  000008                     _TC0INT:
  2156                           	callstack 25
  2157                           
  2158                           ;incstack = 0
  2159  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2160  00000A  ED49  F006         	call	int_func,f	;refresh shadow registers
  2161                           
  2162                           	psect	intcode_body
  2163  000C92                     __pintcode_body:
  2164                           	callstack 25
  2165  000C92                     int_func:
  2166                           	callstack 25
  2167  000C92  0006               	pop		; remove dummy address from shadow register refresh
  2168  000C94                     
  2169                           ;src/main.c: 46:     if (INTCONbits.TMR0IF == 0x01) {
  2170  000C94  A4F2               	btfss	242,2,c	;volatile
  2171  000C96  EF4F  F006         	goto	i2u51_41
  2172  000C9A  EF51  F006         	goto	i2u51_40
  2173  000C9E                     i2u51_41:
  2174  000C9E  EF5C  F006         	goto	i2l1656
  2175  000CA2                     i2u51_40:
  2176  000CA2                     
  2177                           ;src/main.c: 47:         tickHook_Execute(&global_timer_value);
  2178  000CA2  0E23               	movlw	low _global_timer_value
  2179  000CA4  6E27               	movwf	tickHook_Execute@global_timer_value^0,c
  2180  000CA6  0E00               	movlw	high _global_timer_value
  2181  000CA8  6E28               	movwf	(tickHook_Execute@global_timer_value+1)^0,c
  2182  000CAA  EC0F  F007         	call	_tickHook_Execute	;wreg free
  2183  000CAE                     
  2184                           ;src/main.c: 48:         TMR0 = 0xFB1E;
  2185  000CAE  0EFB               	movlw	251
  2186  000CB0  6ED7               	movwf	215,c	;volatile
  2187  000CB2  0E1E               	movlw	30
  2188  000CB4  6ED6               	movwf	214,c	;volatile
  2189  000CB6                     
  2190                           ;src/main.c: 49:         INTCONbits.T0IF = 0x00;
  2191  000CB6  94F2               	bcf	242,2,c	;volatile
  2192  000CB8                     i2l1656:
  2193                           
  2194                           ;src/main.c: 52:     if (PIR1bits.RCIF) {
  2195  000CB8  AA9E               	btfss	158,5,c	;volatile
  2196  000CBA  EF61  F006         	goto	i2u52_41
  2197  000CBE  EF63  F006         	goto	i2u52_40
  2198  000CC2                     i2u52_41:
  2199  000CC2  EF69  F006         	goto	i2l46
  2200  000CC6                     i2u52_40:
  2201  000CC6                     
  2202                           ;src/main.c: 53:         count = RCREG;
  2203  000CC6  CFAE F054          	movff	4014,_count	;volatile
  2204  000CCA                     
  2205                           ;src/main.c: 54:         Serial_Transmit(count);
  2206  000CCA  5054               	movf	_count^0,w,c
  2207  000CCC  EC03  F007         	call	_Serial_Transmit
  2208  000CD0                     
  2209                           ;src/main.c: 56:         PIR1bits.RCIF = 0x00;
  2210  000CD0  9A9E               	bcf	158,5,c	;volatile
  2211  000CD2                     i2l46:
  2212  000CD2  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2213  000CD4  0011               	retfie		f
  2214  000CD6                     __end_of_TC0INT:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _tickHook_Execute *****************
  2218 ;; Defined at:
  2219 ;;		line 89 in file "src/pic18f4520/timer/timer.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  global_timer    2    0[COMRAM] PTR unsigned long 
  2222 ;;		 -> global_timer_value(4), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2234 ;;      Params:         2       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0
  2237 ;;      Totals:         2       0       0       0       0       0       0
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_TC0INT
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text17
  2248  000E1E                     __ptext17:
  2249                           	callstack 0
  2250  000E1E                     _tickHook_Execute:
  2251                           	callstack 25
  2252  000E1E  0012               	return		;funcret
  2253  000E20                     __end_of_tickHook_Execute:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _Serial_Transmit *****************
  2257 ;; Defined at:
  2258 ;;		line 131 in file "src/pic18f4520/serial/serial.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  data            1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  data            1    0[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         0       0       0       0       0       0       0
  2273 ;;      Locals:         1       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0
  2275 ;;      Totals:         1       0       0       0       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_TC0INT
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text18
  2286  000E06                     __ptext18:
  2287                           	callstack 0
  2288  000E06                     _Serial_Transmit:
  2289                           	callstack 25
  2290                           
  2291                           ;incstack = 0
  2292                           ;Serial_Transmit@data stored from wreg
  2293  000E06  6E27               	movwf	Serial_Transmit@data^0,c
  2294  000E08                     
  2295                           ;src/pic18f4520/serial/serial.c: 131: void Serial_Transmit(uint8_t data);src/pic18f4520/
      +                          serial/serial.c: 132: {;src/pic18f4520/serial/serial.c: 133:     TXREG = data;
  2296  000E08  C027  FFAD         	movff	Serial_Transmit@data,4013	;volatile
  2297  000E0C                     i2l290:
  2298  000E0C  A2AC               	btfss	4012,1,c	;volatile
  2299  000E0E  EF0B  F007         	goto	i2u44_41
  2300  000E12  EF0D  F007         	goto	i2u44_40
  2301  000E16                     i2u44_41:
  2302  000E16  EF06  F007         	goto	i2l290
  2303  000E1A                     i2u44_40:
  2304  000E1A  0012               	return		;funcret
  2305  000E1C                     __end_of_Serial_Transmit:
  2306                           	callstack 0
  2307                           
  2308                           	psect	rparam
  2309  0000                     
  2310                           	psect	temp
  2311  000055                     btemp:
  2312                           	callstack 0
  2313  000055                     	ds	1
  2314  0000                     int$flags	set	btemp
  2315  0000                     wtemp8	set	btemp+1
  2316  0000                     ttemp5	set	btemp+1
  2317  0000                     ttemp6	set	btemp+4
  2318  0000                     ttemp7	set	btemp+8
  2319                           
  2320                           	psect	idloc
  2321                           
  2322                           ;Config register IDLOC0 @ 0x200000
  2323                           ;	unspecified, using default values
  2324  200000                     	org	2097152
  2325  200000  FF                 	db	255
  2326                           
  2327                           ;Config register IDLOC1 @ 0x200001
  2328                           ;	unspecified, using default values
  2329  200001                     	org	2097153
  2330  200001  FF                 	db	255
  2331                           
  2332                           ;Config register IDLOC2 @ 0x200002
  2333                           ;	unspecified, using default values
  2334  200002                     	org	2097154
  2335  200002  FF                 	db	255
  2336                           
  2337                           ;Config register IDLOC3 @ 0x200003
  2338                           ;	unspecified, using default values
  2339  200003                     	org	2097155
  2340  200003  FF                 	db	255
  2341                           
  2342                           ;Config register IDLOC4 @ 0x200004
  2343                           ;	unspecified, using default values
  2344  200004                     	org	2097156
  2345  200004  FF                 	db	255
  2346                           
  2347                           ;Config register IDLOC5 @ 0x200005
  2348                           ;	unspecified, using default values
  2349  200005                     	org	2097157
  2350  200005  FF                 	db	255
  2351                           
  2352                           ;Config register IDLOC6 @ 0x200006
  2353                           ;	unspecified, using default values
  2354  200006                     	org	2097158
  2355  200006  FF                 	db	255
  2356                           
  2357                           ;Config register IDLOC7 @ 0x200007
  2358                           ;	unspecified, using default values
  2359  200007                     	org	2097159
  2360  200007  FF                 	db	255
  2361                           
  2362                           	psect	config
  2363                           
  2364                           ; Padding undefined space
  2365  300000                     	org	3145728
  2366  300000  FF                 	db	255
  2367                           
  2368                           ;Config register CONFIG1H @ 0x300001
  2369                           ;	Oscillator Selection bits
  2370                           ;	OSC = HS, HS oscillator
  2371                           ;	Fail-Safe Clock Monitor Enable bit
  2372                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2373                           ;	Internal/External Oscillator Switchover bit
  2374                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2375  300001                     	org	3145729
  2376  300001  02                 	db	2
  2377                           
  2378                           ;Config register CONFIG2L @ 0x300002
  2379                           ;	Power-up Timer Enable bit
  2380                           ;	PWRT = OFF, PWRT disabled
  2381                           ;	Brown-out Reset Enable bits
  2382                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2383                           ;	Brown Out Reset Voltage bits
  2384                           ;	BORV = 3, Minimum setting
  2385  300002                     	org	3145730
  2386  300002  1F                 	db	31
  2387                           
  2388                           ;Config register CONFIG2H @ 0x300003
  2389                           ;	Watchdog Timer Enable bit
  2390                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2391                           ;	Watchdog Timer Postscale Select bits
  2392                           ;	WDTPS = 32768, 1:32768
  2393  300003                     	org	3145731
  2394  300003  1E                 	db	30
  2395                           
  2396                           ; Padding undefined space
  2397  300004                     	org	3145732
  2398  300004  FF                 	db	255
  2399                           
  2400                           ;Config register CONFIG3H @ 0x300005
  2401                           ;	CCP2 MUX bit
  2402                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2403                           ;	PORTB A/D Enable bit
  2404                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2405                           ;	Low-Power Timer1 Oscillator Enable bit
  2406                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2407                           ;	MCLR Pin Enable bit
  2408                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2409  300005                     	org	3145733
  2410  300005  81                 	db	129
  2411                           
  2412                           ;Config register CONFIG4L @ 0x300006
  2413                           ;	Stack Full/Underflow Reset Enable bit
  2414                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2415                           ;	Single-Supply ICSP Enable bit
  2416                           ;	LVP = OFF, Single-Supply ICSP disabled
  2417                           ;	Extended Instruction Set Enable bit
  2418                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2419                           ;	Background Debugger Enable bit
  2420                           ;	DEBUG = 0x1, unprogrammed default
  2421  300006                     	org	3145734
  2422  300006  81                 	db	129
  2423                           
  2424                           ; Padding undefined space
  2425  300007                     	org	3145735
  2426  300007  FF                 	db	255
  2427                           
  2428                           ;Config register CONFIG5L @ 0x300008
  2429                           ;	Code Protection bit
  2430                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2431                           ;	Code Protection bit
  2432                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2433                           ;	Code Protection bit
  2434                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2435                           ;	Code Protection bit
  2436                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2437  300008                     	org	3145736
  2438  300008  0F                 	db	15
  2439                           
  2440                           ;Config register CONFIG5H @ 0x300009
  2441                           ;	Boot Block Code Protection bit
  2442                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2443                           ;	Data EEPROM Code Protection bit
  2444                           ;	CPD = OFF, Data EEPROM not code-protected
  2445  300009                     	org	3145737
  2446  300009  C0                 	db	192
  2447                           
  2448                           ;Config register CONFIG6L @ 0x30000A
  2449                           ;	Write Protection bit
  2450                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2451                           ;	Write Protection bit
  2452                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2453                           ;	Write Protection bit
  2454                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2455                           ;	Write Protection bit
  2456                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2457  30000A                     	org	3145738
  2458  30000A  0F                 	db	15
  2459                           
  2460                           ;Config register CONFIG6H @ 0x30000B
  2461                           ;	Configuration Register Write Protection bit
  2462                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2463                           ;	Boot Block Write Protection bit
  2464                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2465                           ;	Data EEPROM Write Protection bit
  2466                           ;	WRTD = OFF, Data EEPROM not write-protected
  2467  30000B                     	org	3145739
  2468  30000B  E0                 	db	224
  2469                           
  2470                           ;Config register CONFIG7L @ 0x30000C
  2471                           ;	Table Read Protection bit
  2472                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2473                           ;	Table Read Protection bit
  2474                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2475                           ;	Table Read Protection bit
  2476                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2477                           ;	Table Read Protection bit
  2478                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2479  30000C                     	org	3145740
  2480  30000C  0F                 	db	15
  2481                           
  2482                           ;Config register CONFIG7H @ 0x30000D
  2483                           ;	Boot Block Table Read Protection bit
  2484                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2485  30000D                     	org	3145741
  2486  30000D  40                 	db	64
  2487                           tosu	equ	0xFFF
  2488                           tosh	equ	0xFFE
  2489                           tosl	equ	0xFFD
  2490                           stkptr	equ	0xFFC
  2491                           pclatu	equ	0xFFB
  2492                           pclath	equ	0xFFA
  2493                           pcl	equ	0xFF9
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           prodh	equ	0xFF4
  2499                           prodl	equ	0xFF3
  2500                           indf0	equ	0xFEF
  2501                           postinc0	equ	0xFEE
  2502                           postdec0	equ	0xFED
  2503                           preinc0	equ	0xFEC
  2504                           plusw0	equ	0xFEB
  2505                           fsr0h	equ	0xFEA
  2506                           fsr0l	equ	0xFE9
  2507                           wreg	equ	0xFE8
  2508                           indf1	equ	0xFE7
  2509                           postinc1	equ	0xFE6
  2510                           postdec1	equ	0xFE5
  2511                           preinc1	equ	0xFE4
  2512                           plusw1	equ	0xFE3
  2513                           fsr1h	equ	0xFE2
  2514                           fsr1l	equ	0xFE1
  2515                           bsr	equ	0xFE0
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           postdec2	equ	0xFDD
  2519                           preinc2	equ	0xFDC
  2520                           plusw2	equ	0xFDB
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    0
    Data        38
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30      84
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Absolute function$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    Peripheral_Controller@args	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    StartSystem@args	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    tickHook_Execute@global_timer_value	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt	PTR FTN(PTR unsigned long ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Serial_TransmitBuffer@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), STR_1(CODE[4]), 

    Serial_1_Config@serialConfig	PTR struct . size(2) Largest target is 7
		 -> serialConfig(COMRAM[7]), 

    Display_WriteString@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[17]), STR_11(CODE[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_Serial_1_Config
    _Display_WriteString->_Display_WriteByte
    _DisplayLCD_Init->_Display_SendByte
    _Bluetooth_HC_06_Configure->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _Serial_1_Config->___lldiv

Critical Paths under _TC0INT in COMRAM

    _TC0INT->_tickHook_Execute

Critical Paths under _main in BANK0

    None.

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5369
                                             28 COMRAM     2     2      0
                    _Serial_1_Config
              _Serial_TransmitBuffer
                        _StartSystem
 ---------------------------------------------------------------------------------
 (1) _StartSystem                                          2     0      2    3538
                                             18 COMRAM     2     0      2
          _Bluetooth_HC_06_Configure
                    _DisplayLCD_Init
                _Display_WriteString
              _Peripheral_Controller
                      _Timer0_WaitMS
 ---------------------------------------------------------------------------------
 (2) _Timer0_WaitMS                                       10     8      2      98
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (2) _Peripheral_Controller                                2     0      2      76
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Display_WriteString                                 12     8      4     607
                                              5 COMRAM    12     8      4
                  _Display_WriteByte
 ---------------------------------------------------------------------------------
 (3) _Display_WriteByte                                    3     3      0      60
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DisplayLCD_Init                                      1     1      0     432
                                              6 COMRAM     1     1      0
                   _Display_SendByte
                         _sendNibble
 ---------------------------------------------------------------------------------
 (3) _sendNibble                                           3     3      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Display_SendByte                                     4     3      1     417
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Bluetooth_HC_06_Configure                           12    12      0    2249
              _Serial_TransmitBuffer
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4    1854
                                             14 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _Serial_TransmitBuffer                                6     3      3     394
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Serial_1_Config                                     13    11      2    1436
                                             15 COMRAM    13    11      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     912
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TC0INT                                               0     0      0      98
                    _Serial_Transmit
                   _tickHook_Execute
 ---------------------------------------------------------------------------------
 (6) _tickHook_Execute                                     2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Serial_Transmit                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Serial_1_Config
     ___lldiv
   _Serial_TransmitBuffer
   _StartSystem
     _Bluetooth_HC_06_Configure
       _Serial_TransmitBuffer
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
     _DisplayLCD_Init
       _Display_SendByte
       _sendNibble
     _Display_WriteString
       _Display_WriteByte
     _Peripheral_Controller
     _Timer0_WaitMS

 _TC0INT (ROOT)
   _Serial_Transmit
   _tickHook_Execute

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      54       1       66.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54      15        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 16:39:57 2021

               ??_Display_WriteByte 0029                                  l79 0E1C  
                 ??_Serial_Transmit 0027                                 l302 0BAE  
                               l150 0B54                                 l240 0C60  
                               l154 0D8E                                 l250 0C7E  
                               l242 0C66                                 l226 0C4C  
                               l171 09A2                                 l163 096A  
                               l180 09CE                                 l252 0C84  
                               l244 0C6C                                 l236 0C54  
                               l165 097E                                 l182 09E2  
                               l254 0C8A                                 l246 0C72  
                               l238 0C5A                                 l159 0DB8  
                               l176 09C4                                 l248 0C78  
                               l169 0992                                 l193 0A2E  
                               l257 0C90                                 l186 09F6  
                               l283 083C                                 l339 0C02  
                               l188 0A0A                                 l285 0898  
                               l286 089C                                 l287 08A2  
                               l199 0A94                                 l376 0946  
                               l369 0936                                 l298 0B8C  
                               u400 0C02                                 u401 0BFE  
                               u410 08CA                                 u330 0D78  
                               u411 08C6                                 u331 0D74  
                               u420 08EC                                 u500 0890  
                               u340 0D14                                 u421 08E8  
                               u501 088C                                 u341 0D10  
                               u430 0914                                 u350 0B8A  
                               u431 0910                                 u360 0B9A  
                               u361 0B96                                 u370 0BAE  
                               u371 0BAA                                 u380 095A  
                               u357 0B80                                 u381 0956  
                               u390 0A94                                 u455 0666  
                               u607 0D9E                                 u391 0A90  
                               u480 0830                                 u481 082C  
                               u465 06BC                                 u617 0DB0  
                               u537 0AC8                                 u490 084E  
                               u491 084A                                 u475 0712  
                               u627 0986                                 u547 0AE0  
                               u637 09AA                                 u557 09EA  
                               u647 09BC                                 u567 0A12  
                               u577 0A24                                 u587 0AFC  
                               u597 0B4A               ??_Display_WriteString 0030  
                               wreg 000FE8           __end_of_Display_WriteByte 0A30  
                              l1020 0E04                                l1032 0D84  
                              l1120 09DC                                l1112 09C8  
                              l1026 0D14                                l1114 09C8  
                              l1060 0D88                                l1140 0A18  
                              l1132 0A04                                l1124 09E8  
                              l1142 0A1E                                l1072 0DA4  
                              l1064 0D88                                l1136 0A10  
                              l1128 09F0                                l1074 0DAA  
                              l1068 0D9C                                l1432 0D50  
                              l1610 07CA                                l1450 0B9A  
                              l1442 0CD6                                l1434 0D5C  
                              l1530 0B16                                l1522 0AF6  
                              l1620 081E                                l1612 0812  
                              l1604 0638                                l1452 0B9C  
                              l1444 0CE6                                l1436 0D60  
                              l1460 094A                                l1540 0B44  
                              l1532 0B1C                                l1524 0B06  
                              l1630 0856                                l1622 0830  
                              l1614 0816                                l1606 073A  
                              l1446 0B56                                l1438 0D78  
                              l1454 0DE0                                l1462 095A  
                              l1534 0B26                                l1526 0B0A  
                              l1542 0A30                                l1550 0C4E  
                              l1632 0872                                l1624 0838  
                              l1616 0818                                l1608 0782  
                              l1448 0B5E                                l1472 0984  
                              l1464 0964                                l1536 0B30  
                              l1528 0B10                                l1544 0A3C  
                              l1640 0C14                                l1634 0874  
                              l1626 084E                                l1618 081A  
                              l1490 09B0                                l1482 099C  
                              l1458 094A                                l1538 0B3A  
                              l1546 0A58                                l1642 0C28  
                              l1580 08B4                                l1636 0890  
                              l1628 0852                                l1492 09B6  
                              l1476 098C                                l1468 0978  
                              l1548 0A5A                                l1644 0C2C  
                              l1590 08F6                                l1582 08CA  
                              l1494 0E1C                                l1486 09A8  
                              l1478 0998                                l1574 0BB0  
                              l1646 0C38                                l1638 0C04  
                              l1670 0AAE                                l1592 0914  
                              l1584 08D2                                l1576 0BC0  
                              l1672 0ABE                                l1664 0A96  
                              l1594 0924                                l1586 08DE  
                              l1578 08A4                                l1674 0AD6  
                              l1666 0AA2                                l1596 0926  
                              l1588 08EC                                l1668 0AAE  
                              l1598 0930                                STR_1 0622  
                              STR_2 0626                                STR_3 0628  
                              STR_4 062A                                STR_5 062C  
                              STR_6 062E                                STR_7 0630  
                              STR_8 0632                                STR_9 0634  
                              _LATB 000F8A                                _LATD 000F8C  
                              i2l46 0CD2                                _TMR0 000FD6  
                              _TRMT 007D61                                _main 0A96  
                              fsr0h 000FEA                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0055  
                              prodh 000FF4                                prodl 000FF3  
                              start 000E                        ___param_bank 000000  
        ?_Bluetooth_HC_06_Configure 0027                               ?_main 0027  
                             STR_11 0612                               STR_12 0601  
                   __end_of___lldiv 0948                               i2l331 0E1E  
                             i2l290 0E0C                               i2l293 0E1A  
                             _RCREG 000FAE                               _SPBRG 000FAF  
                             _PORTB 000F81                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TXREG 000FAD  
    __size_of_Serial_TransmitBuffer 005A                               _count 0054  
     __end_of_Serial_TransmitBuffer 0BB0                               tablat 000FF5  
                             ttemp5 0056                               ttemp6 0059  
                             ttemp7 005D                               status 000FD8  
             __end_of_Timer0_WaitMS 0C04                               wtemp8 0056  
                   __initialization 0D16                        __end_of_main 0AF6  
                   _Serial_1_Config 0638   __end_of_Bluetooth_HC_06_Configure 0E1E  
                   _DisplayLCD_Init 0AF6                              ??_main 0043  
       Serial_1_Config@serialConfig 0036                       __activetblptr 000002  
        Serial_1_Config@error_8HIGH 0041          __size_of_Display_WriteByte 006A  
                            _TC0INT 0008            __end_of_tickHook_Execute 0E20  
                            i2l1600 0E1E                              i2l1602 0E08  
                            i2l1650 0CA2                              i2l1660 0CCA  
                            i2l1652 0CAE                              i2l1662 0CD0  
                            i2l1654 0CB6                              i2l1656 0CB8  
                            i2l1648 0C94                              i2l1658 0CC6  
           ??_Peripheral_Controller 002B                           ??___lldiv 0031  
         Peripheral_Controller@args 0029                              clear_0 0D3C  
           Serial_1_Config@brg8HIGH 003F                              isa$std 000001  
                            _strcat 0DE0                              _strcpy 0CD6  
                            _strlen 0D50                        __pdataCOMRAM 0001  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                        __accesstop 0080             __end_of__initialization 0D42  
                   _Serial_Transmit 0E06                       ___rparam_used 000001  
           __end_of_Serial_1_Config 08A4           __size_of_Display_SendByte 007E  
                    __pcstackCOMRAM 0027             __end_of_DisplayLCD_Init 0B56  
                     ??_StartSystem 003B          Display_WriteString@address 002F  
                           ?_TC0INT 0027         __end_of_Display_WriteString 0A96  
       ??_Bluetooth_HC_06_Configure 0039                             ?_strcat 0035  
                           ?_strcpy 002D                             ?_strlen 0029  
               __end_of_StartSystem 0C4E                             i2u51_40 0CA2  
                           i2u51_41 0C9E                             i2u44_40 0E1A  
                           i2u52_40 0CC6                             i2u44_41 0E16  
                           i2u52_41 0CC2             __end_of_Serial_Transmit 0E1C  
                   __size_of_TC0INT 0CCE                             __Hparam 0000  
                  ?_Serial_1_Config 0036                             __Lparam 0000  
                  ?_DisplayLCD_Init 0027                             ___lldiv 08A4  
                      __psmallconst 0600                             __pcinit 0D16  
                           __ramtop 0600                             __ptext0 0A96  
                           __ptext1 0C04                             __ptext2 0BB0  
                           __ptext3 0C4E                             __ptext4 0A30  
                           __ptext5 09C6                             __ptext6 0AF6  
                           __ptext7 0D86                             __ptext8 0948  
                           __ptext9 0E1C                           _T0CONbits 000FD5  
          Serial_1_Config@brg16HIGH 0040                     __size_of_strcat 0026  
                   __size_of_strcpy 0040                     __size_of_strlen 0036  
       Serial_TransmitBuffer@buffer 0029         Serial_TransmitBuffer@length 002B  
              Display_SendByte@comm 0029                Display_SendByte@byte 002B  
                    __pintcode_body 0C92                          _sendNibble 0D86  
         _Bluetooth_HC_06_Configure 0E1C                end_of_initialization 0D42  
             _Serial_TransmitBuffer 0B56                   ?_tickHook_Execute 0027  
                     __Lmediumconst 0000                             int_func 0C92  
                ??_tickHook_Execute 0029                     ___lldiv@divisor 002D  
                   ___lldiv@counter 0035                    _Display_SendByte 0948  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postinc0 000FEE                             postinc2 000FDE  
    __size_of_Peripheral_Controller 0044                             strcpy@d 0033  
                           strlen@a 002B                             strcpy@s 0031  
                           strlen@s 0029       __end_of_Peripheral_Controller 0C92  
                       _StartSystem 0C04             Display_SendByte@auxByte 002C  
            __size_of_Timer0_WaitMS 0054               Display_WriteByte@byte 002A  
          Serial_1_Config@error_min 0042                 Serial_Transmit@data 0027  
                  ?_Serial_Transmit 0027                      __end_of_TC0INT 0CD6  
                         _TXSTAbits 000FAC                     StartSystem@args 0039  
                       _BAUDCONbits 000FB8                       __pidataCOMRAM 0DBA  
                    __end_of_strcat 0E06                      __end_of_strcpy 0D16  
                    __end_of_strlen 0D86                 start_initialization 0D16  
                       ?_sendNibble 0027              ?_Serial_TransmitBuffer 0029  
                          ??_TC0INT 0029           Serial_1_Config@error_8LOW 003C  
                     _Timer0_WaitMS 0BB0              Serial_1_Config@brg8LOW 003E  
                          ??_strcat 0039                            ??_strcpy 0031  
                          ??_strlen 002B                         __pbssCOMRAM 0045  
         Display_WriteString@length 002E                      ?_Timer0_WaitMS 0029  
         Display_WriteString@string 002C  __size_of_Bluetooth_HC_06_Configure 0002  
                         __pintcode 0008                            ?___lldiv 0029  
               __size_of_sendNibble 0034                         __smallconst 0600  
      __size_of_Display_WriteString 0066            __end_of_Display_SendByte 09C6  
                          _PIE1bits 000F9D  tickHook_Execute@global_timer_value 0027  
                          _PIR1bits 000F9E                            _RCONbits 000FD0  
         __size_of_tickHook_Execute 0002                        ?_StartSystem 0039  
          __size_of_Serial_1_Config 026C                 _BLUETOOTH_BAUD_COMM 0014  
          __size_of_DisplayLCD_Init 0060                         _INTCON2bits 000FF1  
                         copy_data0 0D2A                     ??_Timer0_WaitMS 002B  
               _BLUETOOTH_NAME_COMM 000C                            __Hrparam 0000  
                          __Lrparam 0000                    sendNibble@nibble 002A  
                  __size_of___lldiv 00A4               _Peripheral_Controller 0C4E  
                        strcat@dest 0035             ??_Serial_TransmitBuffer 002C  
                          __ptext10 0DE0                            __ptext11 0D50  
                          __ptext12 0CD6                            __ptext13 0B56  
                          __ptext14 0638                            __ptext15 08A4  
                          __ptext17 0E1E                            __ptext18 0E06  
                      ??_sendNibble 0029                          strcpy@dest 002D  
                     __size_of_main 0060                        _serialConfig 001C  
                          _humidity 0050            __size_of_Serial_Transmit 0016  
                          isa$xinst 000000                            int$flags 0055  
                __end_of_sendNibble 0DBA                          _INTCONbits 000FF2  
                 ??_Serial_1_Config 0038                   ??_DisplayLCD_Init 002D  
                          intlevel2 0000                  _BLUETOOTH_PIN_COMM 0001  
       Serial_1_Config@error_16HIGH 003D                           strcat@src 0037  
            Timer0_WaitMS@timeStart 004A                    ___lldiv@dividend 0029  
            Timer0_WaitMS@timerWait 0029                           strcpy@src 002F  
               _Display_WriteString 0A30      Serial_TransmitBuffer@auxLength 002E  
                _global_timer_value 0023                    _tickHook_Execute 0E1E  
      Display_WriteString@auxLength 0037              ?_Peripheral_Controller 0029  
                       _temperature 0052                         _timerConfig 0045  
              __size_of_StartSystem 004A                    ___lldiv@quotient 0031  
              ?_Display_WriteString 002C                   _tickHook_func_prt 004E  
          Display_WriteByte@auxByte 002B                   ?_Display_SendByte 0029  
                ??_Display_SendByte 002A                   _Display_WriteByte 09C6  
                ?_Display_WriteByte 0027  
