

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 12 15:56:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  00053E                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _AT_VERSION
    64  00053E  41                 	db	65
    65  00053F  43                 	db	67
    66  000540  2B                 	db	43
    67  000541  56                 	db	86
    68  000542  45                 	db	69
    69  000543  52                 	db	82
    70  000544  53                 	db	83
    71  000545  49                 	db	73
    72  000546  4F                 	db	79
    73  000547  4E                 	db	78
    74                           
    75                           ;initializer for _serialConfig
    76  000548  00                 	db	0
    77  000549  00                 	db	0
    78  00054A  00                 	db	0
    79  00054B  2580               	dw	9600
    80  00054D  0000               	dw	0
    81                           
    82                           ;initializer for _timerConfig
    83  00054F  00                 	db	0
    84  000550  00                 	db	0
    85  000551  00                 	db	0
    86  000552  00                 	db	0
    87  000553  07                 	db	7
    88  0000                     _TMR0	set	4054
    89  0000                     _INTCON2bits	set	4081
    90  0000                     _T0CONbits	set	4053
    91  0000                     _TXREG	set	4013
    92  0000                     _PIE1bits	set	3997
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _TXSTAbits	set	4012
    96  0000                     _BAUDCONbits	set	4024
    97  0000                     _RCONbits	set	4048
    98  0000                     _TRISB	set	3987
    99  0000                     _RCREG	set	4014
   100  0000                     _PIR1bits	set	3998
   101  0000                     _PORTB	set	3969
   102  0000                     _LATB	set	3978
   103  0000                     _INTCONbits	set	4082
   104  0000                     _TRMT	set	32097
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109  00050E                     __pcinit:
   110                           	callstack 0
   111  00050E                     start_initialization:
   112                           	callstack 0
   113  00050E                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (22 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118  00050E  0E3E               	movlw	low __pidataCOMRAM
   119  000510  6EF6               	movwf	tblptrl,c
   120  000512  0E05               	movlw	high __pidataCOMRAM
   121  000514  6EF7               	movwf	tblptrh,c
   122  000516  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123  000518  6EF8               	movwf	tblptru,c
   124  00051A  EE00  F01F         	lfsr	0,__pdataCOMRAM
   125  00051E  EE10 F016          	lfsr	1,22
   126  000522                     copy_data0:
   127  000522  0009               	tblrd		*+
   128  000524  CFF5 FFEE          	movff	tablat,postinc0
   129  000528  50E5               	movf	postdec1,w,c
   130  00052A  50E1               	movf	fsr1l,w,c
   131  00052C  E1FA               	bnz	copy_data0
   132                           
   133                           ; Clear objects allocated to COMRAM (3 bytes)
   134  00052E  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   135  000530  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   136  000532  6A35               	clrf	__pbssCOMRAM& (0+255),c
   137  000534                     end_of_initialization:
   138                           	callstack 0
   139  000534                     __end_of__initialization:
   140                           	callstack 0
   141  000534  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   142  000536  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   143  000538  0100               	movlb	0
   144  00053A  EF69  F002         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	bssCOMRAM
   147  000035                     __pbssCOMRAM:
   148                           	callstack 0
   149  000035                     _i:
   150                           	callstack 0
   151  000035                     	ds	2
   152  000037                     _count:
   153                           	callstack 0
   154  000037                     	ds	1
   155                           
   156                           	psect	dataCOMRAM
   157  00001F                     __pdataCOMRAM:
   158                           	callstack 0
   159  00001F                     _AT_VERSION:
   160                           	callstack 0
   161  00001F                     	ds	10
   162  000029                     _serialConfig:
   163                           	callstack 0
   164  000029                     	ds	7
   165  000030                     _timerConfig:
   166                           	callstack 0
   167  000030                     	ds	5
   168                           
   169                           	psect	cstackCOMRAM
   170  000001                     __pcstackCOMRAM:
   171                           	callstack 0
   172  000001                     Serial_Transmit@data:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x0
   176  000001                     	ds	1
   177  000002                     ??_TC0INT:
   178                           
   179                           ; 1 bytes @ 0x1
   180  000002                     	ds	2
   181  000004                     ?___aldiv:
   182                           	callstack 0
   183  000004                     Timer0_Config@timerConfig:
   184                           	callstack 0
   185  000004                     ___aldiv@dividend:
   186                           	callstack 0
   187                           
   188                           ; 4 bytes @ 0x3
   189  000004                     	ds	2
   190  000006                     ??_Timer0_Config:
   191                           
   192                           ; 1 bytes @ 0x5
   193  000006                     	ds	2
   194  000008                     ___aldiv@divisor:
   195                           	callstack 0
   196                           
   197                           ; 4 bytes @ 0x7
   198  000008                     	ds	4
   199  00000C                     ___aldiv@counter:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xB
   203  00000C                     	ds	1
   204  00000D                     ___aldiv@sign:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xC
   208  00000D                     	ds	1
   209  00000E                     ___aldiv@quotient:
   210                           	callstack 0
   211                           
   212                           ; 4 bytes @ 0xD
   213  00000E                     	ds	4
   214  000012                     Serial_1_Config@serialConfig:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x11
   218  000012                     	ds	2
   219  000014                     ??_Serial_1_Config:
   220                           
   221                           ; 1 bytes @ 0x13
   222  000014                     	ds	4
   223  000018                     Serial_1_Config@error_8LOW:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x17
   227  000018                     	ds	1
   228  000019                     Serial_1_Config@error_16HIGH:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x18
   232  000019                     	ds	1
   233  00001A                     Serial_1_Config@brg8LOW:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x19
   237  00001A                     	ds	1
   238  00001B                     Serial_1_Config@brg8HIGH:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x1A
   242  00001B                     	ds	1
   243  00001C                     Serial_1_Config@brg16HIGH:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x1B
   247  00001C                     	ds	1
   248  00001D                     Serial_1_Config@error_8HIGH:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x1C
   252  00001D                     	ds	1
   253  00001E                     Serial_1_Config@error_min:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x1D
   257  00001E                     	ds	1
   258  00001F                     
   259                           ; 1 bytes @ 0x1E
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 118 in file "src/main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   279 ;;      Params:         0       0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels required when called: 4
   285 ;; This function calls:
   286 ;;		_Interrupt_GlobalEnable
   287 ;;		_Serial_1_Config
   288 ;;		_Timer0_Config
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text0
   295  0004D2                     __ptext0:
   296                           	callstack 0
   297  0004D2                     _main:
   298                           	callstack 27
   299  0004D2  5093               	movf	147,w,c	;volatile
   300  0004D4  0BFE               	andlw	254
   301  0004D6  6E93               	movwf	147,c	;volatile
   302  0004D8  5093               	movf	147,w,c	;volatile
   303  0004DA  0BFD               	andlw	253
   304  0004DC  6E93               	movwf	147,c	;volatile
   305  0004DE  5081               	movf	129,w,c	;volatile
   306  0004E0  0BFE               	andlw	254
   307  0004E2  6E8A               	movwf	138,c	;volatile
   308  0004E4  5081               	movf	129,w,c	;volatile
   309  0004E6  0902               	iorlw	2
   310  0004E8  6E8A               	movwf	138,c	;volatile
   311  0004EA                     
   312                           ;src/main.c: 128:     Interrupt_GlobalEnable();
   313  0004EA  ECB5  F002         	call	_Interrupt_GlobalEnable	;wreg free
   314  0004EE                     
   315                           ;src/main.c: 129:     Timer0_Config(&timerConfig);
   316  0004EE  0E30               	movlw	low _timerConfig
   317  0004F0  6E04               	movwf	Timer0_Config@timerConfig^0,c
   318  0004F2  0E00               	movlw	high _timerConfig
   319  0004F4  6E05               	movwf	(Timer0_Config@timerConfig+1)^0,c
   320  0004F6  EC1A  F002         	call	_Timer0_Config	;wreg free
   321  0004FA                     
   322                           ;src/main.c: 131:     Serial_1_Config(&serialConfig);
   323  0004FA  0E29               	movlw	low _serialConfig
   324  0004FC  6E12               	movwf	Serial_1_Config@serialConfig^0,c
   325  0004FE  0E00               	movlw	high _serialConfig
   326  000500  6E13               	movwf	(Serial_1_Config@serialConfig+1)^0,c
   327  000502  EC09  F000         	call	_Serial_1_Config	;wreg free
   328  000506                     l60:
   329  000506  EF83  F002         	goto	l60
   330  00050A  EF07  F000         	goto	start
   331  00050E                     __end_of_main:
   332                           	callstack 0
   333                           
   334 ;; *************** function _Timer0_Config *****************
   335 ;; Defined at:
   336 ;;		line 4 in file "src/pic18f4520/timer/timer.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;  timerConfig     2    3[COMRAM] PTR struct .
   339 ;;		 -> timerConfig(5), 
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   351 ;;      Params:         2       0       0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0
   353 ;;      Temps:          1       0       0       0       0       0       0
   354 ;;      Totals:         3       0       0       0       0       0       0
   355 ;;Total ram usage:        3 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 2
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text1
   366  000434                     __ptext1:
   367                           	callstack 0
   368  000434                     _Timer0_Config:
   369                           	callstack 28
   370  000434                     
   371                           ;src/pic18f4520/timer/timer.c: 4: void Timer0_Config( timer_config_t* timerConfig );src/
      +                          pic18f4520/timer/timer.c: 5: {;src/pic18f4520/timer/timer.c: 11:     T0CONbits.TMR0ON = 
      +                          0x00;
   372  000434  9ED5               	bcf	213,7,c	;volatile
   373  000436                     
   374                           ;src/pic18f4520/timer/timer.c: 19:     T0CONbits.T08BIT = timerConfig->timer_length;
   375  000436  C004  FFD9         	movff	Timer0_Config@timerConfig,fsr2l
   376  00043A  C005  FFDA         	movff	Timer0_Config@timerConfig+1,fsr2h
   377  00043E  50DF               	movf	indf2,w,c
   378  000440  6E06               	movwf	??_Timer0_Config^0,c
   379  000442  3A06               	swapf	??_Timer0_Config^0,f,c
   380  000444  4606               	rlncf	??_Timer0_Config^0,f,c
   381  000446  4606               	rlncf	??_Timer0_Config^0,f,c
   382  000448  50D5               	movf	213,w,c	;volatile
   383  00044A  1806               	xorwf	??_Timer0_Config^0,w,c
   384  00044C  0BBF               	andlw	-65
   385  00044E  1806               	xorwf	??_Timer0_Config^0,w,c
   386  000450  6ED5               	movwf	213,c	;volatile
   387                           
   388                           ;src/pic18f4520/timer/timer.c: 26:     T0CONbits.T0CS = timerConfig->timer_clk_src;
   389  000452  EE20 F001          	lfsr	2,1
   390  000456  5004               	movf	Timer0_Config@timerConfig^0,w,c
   391  000458  26D9               	addwf	fsr2l,f,c
   392  00045A  5005               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   393  00045C  22DA               	addwfc	fsr2h,f,c
   394  00045E  50DF               	movf	indf2,w,c
   395  000460  6E06               	movwf	??_Timer0_Config^0,c
   396  000462  3A06               	swapf	??_Timer0_Config^0,f,c
   397  000464  4606               	rlncf	??_Timer0_Config^0,f,c
   398  000466  50D5               	movf	213,w,c	;volatile
   399  000468  1806               	xorwf	??_Timer0_Config^0,w,c
   400  00046A  0BDF               	andlw	-33
   401  00046C  1806               	xorwf	??_Timer0_Config^0,w,c
   402  00046E  6ED5               	movwf	213,c	;volatile
   403                           
   404                           ;src/pic18f4520/timer/timer.c: 34:     if(!(T0CONbits.PSA = timerConfig->timer_prescaler
      +                          _assign))
   405  000470  EE20 F003          	lfsr	2,3
   406  000474  5004               	movf	Timer0_Config@timerConfig^0,w,c
   407  000476  26D9               	addwf	fsr2l,f,c
   408  000478  5005               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   409  00047A  22DA               	addwfc	fsr2h,f,c
   410  00047C  50DF               	movf	indf2,w,c
   411  00047E  6E06               	movwf	??_Timer0_Config^0,c
   412  000480  4606               	rlncf	??_Timer0_Config^0,f,c
   413  000482  4606               	rlncf	??_Timer0_Config^0,f,c
   414  000484  4606               	rlncf	??_Timer0_Config^0,f,c
   415  000486  50D5               	movf	213,w,c	;volatile
   416  000488  1806               	xorwf	??_Timer0_Config^0,w,c
   417  00048A  0BF7               	andlw	-9
   418  00048C  1806               	xorwf	??_Timer0_Config^0,w,c
   419  00048E  6ED5               	movwf	213,c	;volatile
   420  000490  30D5               	rrcf	213,w,c	;volatile
   421  000492  32E8               	rrcf	wreg,f,c
   422  000494  32E8               	rrcf	wreg,f,c
   423  000496  0B01               	andlw	1
   424  000498  0900               	iorlw	0
   425  00049A  A4D8               	btfss	status,2,c
   426  00049C  EF52  F002         	goto	u261
   427  0004A0  EF54  F002         	goto	u260
   428  0004A4                     u261:
   429  0004A4  EF61  F002         	goto	l984
   430  0004A8                     u260:
   431  0004A8                     
   432                           ;src/pic18f4520/timer/timer.c: 35:     {;src/pic18f4520/timer/timer.c: 45:         T0CON
      +                          bits.T0PS = timerConfig->timer_prescaler_value;
   433  0004A8  EE20 F004          	lfsr	2,4
   434  0004AC  5004               	movf	Timer0_Config@timerConfig^0,w,c
   435  0004AE  26D9               	addwf	fsr2l,f,c
   436  0004B0  5005               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   437  0004B2  22DA               	addwfc	fsr2h,f,c
   438  0004B4  50DF               	movf	indf2,w,c
   439  0004B6  6E06               	movwf	??_Timer0_Config^0,c
   440  0004B8  50D5               	movf	213,w,c	;volatile
   441  0004BA  1806               	xorwf	??_Timer0_Config^0,w,c
   442  0004BC  0BF8               	andlw	-8
   443  0004BE  1806               	xorwf	??_Timer0_Config^0,w,c
   444  0004C0  6ED5               	movwf	213,c	;volatile
   445  0004C2                     l984:
   446                           
   447                           ;src/pic18f4520/timer/timer.c: 60:     INTCONbits.TMR0IE = 0x01;
   448  0004C2  8AF2               	bsf	242,5,c	;volatile
   449  0004C4                     
   450                           ;src/pic18f4520/timer/timer.c: 66:     INTCON2bits.TMR0IP = 0x01;
   451  0004C4  84F1               	bsf	241,2,c	;volatile
   452  0004C6                     
   453                           ;src/pic18f4520/timer/timer.c: 69:     TMR0 = 0xD9D9;
   454  0004C6  0ED9               	movlw	217
   455  0004C8  6ED7               	movwf	215,c	;volatile
   456  0004CA  0ED9               	movlw	217
   457  0004CC  6ED6               	movwf	214,c	;volatile
   458  0004CE                     
   459                           ;src/pic18f4520/timer/timer.c: 71:     T0CONbits.TMR0ON = 0x01;
   460  0004CE  8ED5               	bsf	213,7,c	;volatile
   461  0004D0  0012               	return		;funcret
   462  0004D2                     __end_of_Timer0_Config:
   463                           	callstack 0
   464                           
   465 ;; *************** function _Serial_1_Config *****************
   466 ;; Defined at:
   467 ;;		line 7 in file "src/pic18f4520/serial/serial.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;  serialConfig    2   17[COMRAM] PTR struct .
   470 ;;		 -> serialConfig(7), 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  error_min       1   29[COMRAM] unsigned char 
   473 ;;  error_8HIGH     1   28[COMRAM] unsigned char 
   474 ;;  brg16HIGH       1   27[COMRAM] unsigned char 
   475 ;;  brg8HIGH        1   26[COMRAM] unsigned char 
   476 ;;  brg8LOW         1   25[COMRAM] unsigned char 
   477 ;;  error_16HIGH    1   24[COMRAM] unsigned char 
   478 ;;  error_8LOW      1   23[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         2       0       0       0       0       0       0
   489 ;;      Locals:         7       0       0       0       0       0       0
   490 ;;      Temps:          4       0       0       0       0       0       0
   491 ;;      Totals:        13       0       0       0       0       0       0
   492 ;;Total ram usage:       13 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; Hardware stack levels required when called: 3
   495 ;; This function calls:
   496 ;;		___aldiv
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text2
   503  000012                     __ptext2:
   504                           	callstack 0
   505  000012                     _Serial_1_Config:
   506                           	callstack 27
   507  000012                     
   508                           ;src/pic18f4520/serial/serial.c: 30:     uint8_t brg8LOW;;src/pic18f4520/serial/serial.c
      +                          : 31:     uint8_t brg8HIGH;;src/pic18f4520/serial/serial.c: 32:     uint8_t brg16HIGH;;s
      +                          rc/pic18f4520/serial/serial.c: 35:     uint8_t error_8LOW;;src/pic18f4520/serial/serial.
      +                          c: 36:     uint8_t error_8HIGH;;src/pic18f4520/serial/serial.c: 37:     uint8_t error_16
      +                          HIGH;;src/pic18f4520/serial/serial.c: 39:     uint8_t error_min;;src/pic18f4520/serial/s
      +                          erial.c: 42:     brg8LOW = (10000000/(serialConfig->serial_desired_baud * 64));
   509  000012  0E80               	movlw	128
   510  000014  6E04               	movwf	___aldiv@dividend^0,c
   511  000016  0E96               	movlw	150
   512  000018  6E05               	movwf	(___aldiv@dividend+1)^0,c
   513  00001A  0E98               	movlw	152
   514  00001C  6E06               	movwf	(___aldiv@dividend+2)^0,c
   515  00001E  0E00               	movlw	0
   516  000020  6E07               	movwf	(___aldiv@dividend+3)^0,c
   517  000022  EE20 F003          	lfsr	2,3
   518  000026  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   519  000028  26D9               	addwf	fsr2l,f,c
   520  00002A  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   521  00002C  22DA               	addwfc	fsr2h,f,c
   522  00002E  CFDE F014          	movff	postinc2,??_Serial_1_Config
   523  000032  CFDE F015          	movff	postinc2,??_Serial_1_Config+1
   524  000036  CFDE F016          	movff	postinc2,??_Serial_1_Config+2
   525  00003A  CFDE F017          	movff	postinc2,??_Serial_1_Config+3
   526  00003E  0E06               	movlw	6
   527  000040                     u275:
   528  000040  90D8               	bcf	status,0,c
   529  000042  3614               	rlcf	??_Serial_1_Config^0,f,c
   530  000044  3615               	rlcf	(??_Serial_1_Config+1)^0,f,c
   531  000046  3616               	rlcf	(??_Serial_1_Config+2)^0,f,c
   532  000048  3617               	rlcf	(??_Serial_1_Config+3)^0,f,c
   533  00004A  2EE8               	decfsz	wreg,f,c
   534  00004C  EF20  F000         	goto	u275
   535  000050  C014  F008         	movff	??_Serial_1_Config,___aldiv@divisor
   536  000054  C015  F009         	movff	??_Serial_1_Config+1,___aldiv@divisor+1
   537  000058  C016  F00A         	movff	??_Serial_1_Config+2,___aldiv@divisor+2
   538  00005C  C017  F00B         	movff	??_Serial_1_Config+3,___aldiv@divisor+3
   539  000060  EC3F  F001         	call	___aldiv	;wreg free
   540  000064  5004               	movf	?___aldiv^0,w,c
   541  000066  6E1A               	movwf	Serial_1_Config@brg8LOW^0,c
   542                           
   543                           ;src/pic18f4520/serial/serial.c: 43:     brg8HIGH = (10000000/(serialConfig->serial_desi
      +                          red_baud * 16));
   544  000068  0E80               	movlw	128
   545  00006A  6E04               	movwf	___aldiv@dividend^0,c
   546  00006C  0E96               	movlw	150
   547  00006E  6E05               	movwf	(___aldiv@dividend+1)^0,c
   548  000070  0E98               	movlw	152
   549  000072  6E06               	movwf	(___aldiv@dividend+2)^0,c
   550  000074  0E00               	movlw	0
   551  000076  6E07               	movwf	(___aldiv@dividend+3)^0,c
   552  000078  EE20 F003          	lfsr	2,3
   553  00007C  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   554  00007E  26D9               	addwf	fsr2l,f,c
   555  000080  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   556  000082  22DA               	addwfc	fsr2h,f,c
   557  000084  CFDE F014          	movff	postinc2,??_Serial_1_Config
   558  000088  CFDE F015          	movff	postinc2,??_Serial_1_Config+1
   559  00008C  CFDE F016          	movff	postinc2,??_Serial_1_Config+2
   560  000090  CFDE F017          	movff	postinc2,??_Serial_1_Config+3
   561  000094  0E04               	movlw	4
   562  000096                     u285:
   563  000096  90D8               	bcf	status,0,c
   564  000098  3614               	rlcf	??_Serial_1_Config^0,f,c
   565  00009A  3615               	rlcf	(??_Serial_1_Config+1)^0,f,c
   566  00009C  3616               	rlcf	(??_Serial_1_Config+2)^0,f,c
   567  00009E  3617               	rlcf	(??_Serial_1_Config+3)^0,f,c
   568  0000A0  2EE8               	decfsz	wreg,f,c
   569  0000A2  EF4B  F000         	goto	u285
   570  0000A6  C014  F008         	movff	??_Serial_1_Config,___aldiv@divisor
   571  0000AA  C015  F009         	movff	??_Serial_1_Config+1,___aldiv@divisor+1
   572  0000AE  C016  F00A         	movff	??_Serial_1_Config+2,___aldiv@divisor+2
   573  0000B2  C017  F00B         	movff	??_Serial_1_Config+3,___aldiv@divisor+3
   574  0000B6  EC3F  F001         	call	___aldiv	;wreg free
   575  0000BA  5004               	movf	?___aldiv^0,w,c
   576  0000BC  6E1B               	movwf	Serial_1_Config@brg8HIGH^0,c
   577                           
   578                           ;src/pic18f4520/serial/serial.c: 44:     brg16HIGH = (10000000/(serialConfig->serial_des
      +                          ired_baud * 4));
   579  0000BE  0E80               	movlw	128
   580  0000C0  6E04               	movwf	___aldiv@dividend^0,c
   581  0000C2  0E96               	movlw	150
   582  0000C4  6E05               	movwf	(___aldiv@dividend+1)^0,c
   583  0000C6  0E98               	movlw	152
   584  0000C8  6E06               	movwf	(___aldiv@dividend+2)^0,c
   585  0000CA  0E00               	movlw	0
   586  0000CC  6E07               	movwf	(___aldiv@dividend+3)^0,c
   587  0000CE  EE20 F003          	lfsr	2,3
   588  0000D2  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   589  0000D4  26D9               	addwf	fsr2l,f,c
   590  0000D6  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   591  0000D8  22DA               	addwfc	fsr2h,f,c
   592  0000DA  CFDE F014          	movff	postinc2,??_Serial_1_Config
   593  0000DE  CFDE F015          	movff	postinc2,??_Serial_1_Config+1
   594  0000E2  CFDE F016          	movff	postinc2,??_Serial_1_Config+2
   595  0000E6  CFDE F017          	movff	postinc2,??_Serial_1_Config+3
   596  0000EA  0E02               	movlw	2
   597  0000EC                     u295:
   598  0000EC  90D8               	bcf	status,0,c
   599  0000EE  3614               	rlcf	??_Serial_1_Config^0,f,c
   600  0000F0  3615               	rlcf	(??_Serial_1_Config+1)^0,f,c
   601  0000F2  3616               	rlcf	(??_Serial_1_Config+2)^0,f,c
   602  0000F4  3617               	rlcf	(??_Serial_1_Config+3)^0,f,c
   603  0000F6  2EE8               	decfsz	wreg,f,c
   604  0000F8  EF76  F000         	goto	u295
   605  0000FC  C014  F008         	movff	??_Serial_1_Config,___aldiv@divisor
   606  000100  C015  F009         	movff	??_Serial_1_Config+1,___aldiv@divisor+1
   607  000104  C016  F00A         	movff	??_Serial_1_Config+2,___aldiv@divisor+2
   608  000108  C017  F00B         	movff	??_Serial_1_Config+3,___aldiv@divisor+3
   609  00010C  EC3F  F001         	call	___aldiv	;wreg free
   610  000110  5004               	movf	?___aldiv^0,w,c
   611  000112  6E1C               	movwf	Serial_1_Config@brg16HIGH^0,c
   612  000114                     
   613                           ;src/pic18f4520/serial/serial.c: 47:     error_8LOW = (10000000/(brg8LOW * 64)) - serial
      +                          Config->serial_desired_baud;
   614  000114  EE20 F003          	lfsr	2,3
   615  000118  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   616  00011A  26D9               	addwf	fsr2l,f,c
   617  00011C  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   618  00011E  22DA               	addwfc	fsr2h,f,c
   619  000120  50DF               	movf	indf2,w,c
   620  000122  6E14               	movwf	??_Serial_1_Config^0,c
   621  000124  0E80               	movlw	128
   622  000126  6E04               	movwf	___aldiv@dividend^0,c
   623  000128  0E96               	movlw	150
   624  00012A  6E05               	movwf	(___aldiv@dividend+1)^0,c
   625  00012C  0E98               	movlw	152
   626  00012E  6E06               	movwf	(___aldiv@dividend+2)^0,c
   627  000130  0E00               	movlw	0
   628  000132  6E07               	movwf	(___aldiv@dividend+3)^0,c
   629  000134  501A               	movf	Serial_1_Config@brg8LOW^0,w,c
   630  000136  0D40               	mullw	64
   631  000138  CFF3 F015          	movff	prodl,??_Serial_1_Config+1
   632  00013C  CFF4 F016          	movff	prodh,??_Serial_1_Config+2
   633  000140  C015  F008         	movff	??_Serial_1_Config+1,___aldiv@divisor
   634  000144  C016  F009         	movff	??_Serial_1_Config+2,___aldiv@divisor+1
   635  000148  0E00               	movlw	0
   636  00014A  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
   637  00014C  0EFF               	movlw	-1
   638  00014E  6E0A               	movwf	(___aldiv@divisor+2)^0,c
   639  000150  6E0B               	movwf	(___aldiv@divisor+3)^0,c
   640  000152  EC3F  F001         	call	___aldiv	;wreg free
   641  000156  5014               	movf	??_Serial_1_Config^0,w,c
   642  000158  5C04               	subwf	?___aldiv^0,w,c
   643  00015A  6E18               	movwf	Serial_1_Config@error_8LOW^0,c
   644  00015C                     
   645                           ;src/pic18f4520/serial/serial.c: 48:     error_8HIGH = (10000000/(brg8HIGH * 16)) - seri
      +                          alConfig->serial_desired_baud;
   646  00015C  EE20 F003          	lfsr	2,3
   647  000160  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   648  000162  26D9               	addwf	fsr2l,f,c
   649  000164  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   650  000166  22DA               	addwfc	fsr2h,f,c
   651  000168  50DF               	movf	indf2,w,c
   652  00016A  6E14               	movwf	??_Serial_1_Config^0,c
   653  00016C  0E80               	movlw	128
   654  00016E  6E04               	movwf	___aldiv@dividend^0,c
   655  000170  0E96               	movlw	150
   656  000172  6E05               	movwf	(___aldiv@dividend+1)^0,c
   657  000174  0E98               	movlw	152
   658  000176  6E06               	movwf	(___aldiv@dividend+2)^0,c
   659  000178  0E00               	movlw	0
   660  00017A  6E07               	movwf	(___aldiv@dividend+3)^0,c
   661  00017C  501B               	movf	Serial_1_Config@brg8HIGH^0,w,c
   662  00017E  0D10               	mullw	16
   663  000180  CFF3 F015          	movff	prodl,??_Serial_1_Config+1
   664  000184  CFF4 F016          	movff	prodh,??_Serial_1_Config+2
   665  000188  C015  F008         	movff	??_Serial_1_Config+1,___aldiv@divisor
   666  00018C  C016  F009         	movff	??_Serial_1_Config+2,___aldiv@divisor+1
   667  000190  0E00               	movlw	0
   668  000192  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
   669  000194  0EFF               	movlw	-1
   670  000196  6E0A               	movwf	(___aldiv@divisor+2)^0,c
   671  000198  6E0B               	movwf	(___aldiv@divisor+3)^0,c
   672  00019A  EC3F  F001         	call	___aldiv	;wreg free
   673  00019E  5014               	movf	??_Serial_1_Config^0,w,c
   674  0001A0  5C04               	subwf	?___aldiv^0,w,c
   675  0001A2  6E1D               	movwf	Serial_1_Config@error_8HIGH^0,c
   676  0001A4                     
   677                           ;src/pic18f4520/serial/serial.c: 49:     error_16HIGH = (10000000/(brg16HIGH * 4)) - ser
      +                          ialConfig->serial_desired_baud;
   678  0001A4  EE20 F003          	lfsr	2,3
   679  0001A8  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   680  0001AA  26D9               	addwf	fsr2l,f,c
   681  0001AC  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   682  0001AE  22DA               	addwfc	fsr2h,f,c
   683  0001B0  50DF               	movf	indf2,w,c
   684  0001B2  6E14               	movwf	??_Serial_1_Config^0,c
   685  0001B4  0E80               	movlw	128
   686  0001B6  6E04               	movwf	___aldiv@dividend^0,c
   687  0001B8  0E96               	movlw	150
   688  0001BA  6E05               	movwf	(___aldiv@dividend+1)^0,c
   689  0001BC  0E98               	movlw	152
   690  0001BE  6E06               	movwf	(___aldiv@dividend+2)^0,c
   691  0001C0  0E00               	movlw	0
   692  0001C2  6E07               	movwf	(___aldiv@dividend+3)^0,c
   693  0001C4  501C               	movf	Serial_1_Config@brg16HIGH^0,w,c
   694  0001C6  0D04               	mullw	4
   695  0001C8  CFF3 F015          	movff	prodl,??_Serial_1_Config+1
   696  0001CC  CFF4 F016          	movff	prodh,??_Serial_1_Config+2
   697  0001D0  C015  F008         	movff	??_Serial_1_Config+1,___aldiv@divisor
   698  0001D4  C016  F009         	movff	??_Serial_1_Config+2,___aldiv@divisor+1
   699  0001D8  0E00               	movlw	0
   700  0001DA  BE09               	btfsc	(___aldiv@divisor+1)^0,7,c
   701  0001DC  0EFF               	movlw	-1
   702  0001DE  6E0A               	movwf	(___aldiv@divisor+2)^0,c
   703  0001E0  6E0B               	movwf	(___aldiv@divisor+3)^0,c
   704  0001E2  EC3F  F001         	call	___aldiv	;wreg free
   705  0001E6  5014               	movf	??_Serial_1_Config^0,w,c
   706  0001E8  5C04               	subwf	?___aldiv^0,w,c
   707  0001EA  6E19               	movwf	Serial_1_Config@error_16HIGH^0,c
   708  0001EC                     
   709                           ;src/pic18f4520/serial/serial.c: 52:     error_min = error_8LOW;
   710  0001EC  C018  F01E         	movff	Serial_1_Config@error_8LOW,Serial_1_Config@error_min
   711  0001F0                     
   712                           ;src/pic18f4520/serial/serial.c: 54:     BAUDCONbits.BRG16 = 0x00;
   713  0001F0  96B8               	bcf	184,3,c	;volatile
   714  0001F2                     
   715                           ;src/pic18f4520/serial/serial.c: 55:     TXSTAbits.BRGH = 0x00;
   716  0001F2  94AC               	bcf	172,2,c	;volatile
   717  0001F4                     
   718                           ;src/pic18f4520/serial/serial.c: 57:     SPBRG = (brg8LOW - 1);
   719  0001F4  041A               	decf	Serial_1_Config@brg8LOW^0,w,c
   720  0001F6  6EAF               	movwf	175,c	;volatile
   721  0001F8                     
   722                           ;src/pic18f4520/serial/serial.c: 59:     if(error_8HIGH < error_min)
   723  0001F8  501E               	movf	Serial_1_Config@error_min^0,w,c
   724  0001FA  5C1D               	subwf	Serial_1_Config@error_8HIGH^0,w,c
   725  0001FC  B0D8               	btfsc	status,0,c
   726  0001FE  EF03  F001         	goto	u301
   727  000202  EF05  F001         	goto	u300
   728  000206                     u301:
   729  000206  EF0B  F001         	goto	l89
   730  00020A                     u300:
   731  00020A                     
   732                           ;src/pic18f4520/serial/serial.c: 60:     {;src/pic18f4520/serial/serial.c: 61:         e
      +                          rror_min = error_8HIGH;
   733  00020A  C01D  F01E         	movff	Serial_1_Config@error_8HIGH,Serial_1_Config@error_min
   734                           
   735                           ;src/pic18f4520/serial/serial.c: 63:         BAUDCONbits.BRG16 = 0x00;
   736  00020E  96B8               	bcf	184,3,c	;volatile
   737                           
   738                           ;src/pic18f4520/serial/serial.c: 64:         TXSTAbits.BRGH = 0x01;
   739  000210  84AC               	bsf	172,2,c	;volatile
   740  000212                     
   741                           ;src/pic18f4520/serial/serial.c: 66:         SPBRG = (brg8HIGH - 1);
   742  000212  041B               	decf	Serial_1_Config@brg8HIGH^0,w,c
   743  000214  6EAF               	movwf	175,c	;volatile
   744  000216                     l89:
   745                           
   746                           ;src/pic18f4520/serial/serial.c: 68:     if(error_16HIGH < error_min)
   747  000216  501E               	movf	Serial_1_Config@error_min^0,w,c
   748  000218  5C19               	subwf	Serial_1_Config@error_16HIGH^0,w,c
   749  00021A  B0D8               	btfsc	status,0,c
   750  00021C  EF12  F001         	goto	u311
   751  000220  EF14  F001         	goto	u310
   752  000224                     u311:
   753  000224  EF18  F001         	goto	l1018
   754  000228                     u310:
   755  000228                     
   756                           ;src/pic18f4520/serial/serial.c: 69:     {;src/pic18f4520/serial/serial.c: 70:         B
      +                          AUDCONbits.BRG16 = 0x01;
   757  000228  86B8               	bsf	184,3,c	;volatile
   758                           
   759                           ;src/pic18f4520/serial/serial.c: 71:         TXSTAbits.BRGH = 0x01;
   760  00022A  84AC               	bsf	172,2,c	;volatile
   761  00022C                     
   762                           ;src/pic18f4520/serial/serial.c: 73:         SPBRG = (brg16HIGH - 1);
   763  00022C  041C               	decf	Serial_1_Config@brg16HIGH^0,w,c
   764  00022E  6EAF               	movwf	175,c	;volatile
   765  000230                     l1018:
   766                           
   767                           ;src/pic18f4520/serial/serial.c: 81:     TXSTAbits.SYNC = serialConfig->serial_op_mode;
   768  000230  EE20 F002          	lfsr	2,2
   769  000234  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   770  000236  26D9               	addwf	fsr2l,f,c
   771  000238  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   772  00023A  22DA               	addwfc	fsr2h,f,c
   773  00023C  50DF               	movf	indf2,w,c
   774  00023E  6E14               	movwf	??_Serial_1_Config^0,c
   775  000240  3A14               	swapf	??_Serial_1_Config^0,f,c
   776  000242  50AC               	movf	172,w,c	;volatile
   777  000244  1814               	xorwf	??_Serial_1_Config^0,w,c
   778  000246  0BEF               	andlw	-17
   779  000248  1814               	xorwf	??_Serial_1_Config^0,w,c
   780  00024A  6EAC               	movwf	172,c	;volatile
   781  00024C                     
   782                           ;src/pic18f4520/serial/serial.c: 87:     RCSTAbits.SPEN = 0x01;
   783  00024C  8EAB               	bsf	171,7,c	;volatile
   784  00024E                     
   785                           ;src/pic18f4520/serial/serial.c: 101:     if(serialConfig->serial_data_length == SERIAL_
      +                          DATA_LENGTH_9)
   786  00024E  EE20 F001          	lfsr	2,1
   787  000252  5012               	movf	Serial_1_Config@serialConfig^0,w,c
   788  000254  26D9               	addwf	fsr2l,f,c
   789  000256  5013               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   790  000258  22DA               	addwfc	fsr2h,f,c
   791  00025A  04DE               	decf	postinc2,w,c
   792  00025C  A4D8               	btfss	status,2,c
   793  00025E  EF33  F001         	goto	u321
   794  000262  EF35  F001         	goto	u320
   795  000266                     u321:
   796  000266  EF39  F001         	goto	l91
   797  00026A                     u320:
   798  00026A                     
   799                           ;src/pic18f4520/serial/serial.c: 102:     {;src/pic18f4520/serial/serial.c: 103:        
      +                           TXSTAbits.TX9 = 0x01;
   800  00026A  8CAC               	bsf	172,6,c	;volatile
   801                           
   802                           ;src/pic18f4520/serial/serial.c: 104:         RCSTAbits.RC9 = 0x01;
   803  00026C  8CAB               	bsf	171,6,c	;volatile
   804                           
   805                           ;src/pic18f4520/serial/serial.c: 105:     }else
   806  00026E  EF3B  F001         	goto	l92
   807  000272                     l91:
   808                           
   809                           ;src/pic18f4520/serial/serial.c: 106:     {;src/pic18f4520/serial/serial.c: 107:        
      +                           TXSTAbits.TX9 = 0x00;
   810  000272  9CAC               	bcf	172,6,c	;volatile
   811                           
   812                           ;src/pic18f4520/serial/serial.c: 108:         RCSTAbits.RC9 = 0x00;
   813  000274  9CAB               	bcf	171,6,c	;volatile
   814  000276                     l92:
   815                           
   816                           ;src/pic18f4520/serial/serial.c: 124:     TXSTAbits.TXEN = 0x01;
   817  000276  8AAC               	bsf	172,5,c	;volatile
   818                           
   819                           ;src/pic18f4520/serial/serial.c: 125:     RCSTAbits.CREN = 0x01;
   820  000278  88AB               	bsf	171,4,c	;volatile
   821                           
   822                           ;src/pic18f4520/serial/serial.c: 127:     PIE1bits.RCIE = 0x01;
   823  00027A  8A9D               	bsf	157,5,c	;volatile
   824  00027C  0012               	return		;funcret
   825  00027E                     __end_of_Serial_1_Config:
   826                           	callstack 0
   827                           
   828 ;; *************** function ___aldiv *****************
   829 ;; Defined at:
   830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  dividend        4    3[COMRAM] long 
   833 ;;  divisor         4    7[COMRAM] long 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  quotient        4   13[COMRAM] long 
   836 ;;  sign            1   12[COMRAM] unsigned char 
   837 ;;  counter         1   11[COMRAM] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  4    3[COMRAM] long 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   847 ;;      Params:         8       0       0       0       0       0       0
   848 ;;      Locals:         6       0       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0
   850 ;;      Totals:        14       0       0       0       0       0       0
   851 ;;Total ram usage:       14 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 2
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_Serial_1_Config
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text3
   862  00027E                     __ptext3:
   863                           	callstack 0
   864  00027E                     ___aldiv:
   865                           	callstack 27
   866  00027E  0E00               	movlw	0
   867  000280  6E0D               	movwf	___aldiv@sign^0,c
   868  000282  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
   869  000284  EF48  F001         	goto	u200
   870  000288  EF46  F001         	goto	u201
   871  00028C                     u201:
   872  00028C  EF52  F001         	goto	l942
   873  000290                     u200:
   874  000290  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
   875  000292  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
   876  000294  1E09               	comf	(___aldiv@divisor+1)^0,f,c
   877  000296  6C08               	negf	___aldiv@divisor^0,c
   878  000298  0E00               	movlw	0
   879  00029A  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
   880  00029C  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
   881  00029E  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
   882  0002A0  0E01               	movlw	1
   883  0002A2  6E0D               	movwf	___aldiv@sign^0,c
   884  0002A4                     l942:
   885  0002A4  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
   886  0002A6  EF59  F001         	goto	u210
   887  0002AA  EF57  F001         	goto	u211
   888  0002AE                     u211:
   889  0002AE  EF63  F001         	goto	l948
   890  0002B2                     u210:
   891  0002B2  1E07               	comf	(___aldiv@dividend+3)^0,f,c
   892  0002B4  1E06               	comf	(___aldiv@dividend+2)^0,f,c
   893  0002B6  1E05               	comf	(___aldiv@dividend+1)^0,f,c
   894  0002B8  6C04               	negf	___aldiv@dividend^0,c
   895  0002BA  0E00               	movlw	0
   896  0002BC  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
   897  0002BE  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
   898  0002C0  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
   899  0002C2  0E01               	movlw	1
   900  0002C4  1A0D               	xorwf	___aldiv@sign^0,f,c
   901  0002C6                     l948:
   902  0002C6  0E00               	movlw	0
   903  0002C8  6E0E               	movwf	___aldiv@quotient^0,c
   904  0002CA  0E00               	movlw	0
   905  0002CC  6E0F               	movwf	(___aldiv@quotient+1)^0,c
   906  0002CE  0E00               	movlw	0
   907  0002D0  6E10               	movwf	(___aldiv@quotient+2)^0,c
   908  0002D2  0E00               	movlw	0
   909  0002D4  6E11               	movwf	(___aldiv@quotient+3)^0,c
   910  0002D6  5008               	movf	___aldiv@divisor^0,w,c
   911  0002D8  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
   912  0002DA  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
   913  0002DC  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
   914  0002DE  B4D8               	btfsc	status,2,c
   915  0002E0  EF74  F001         	goto	u221
   916  0002E4  EF76  F001         	goto	u220
   917  0002E8                     u221:
   918  0002E8  EFAC  F001         	goto	l970
   919  0002EC                     u220:
   920  0002EC  0E01               	movlw	1
   921  0002EE  6E0C               	movwf	___aldiv@counter^0,c
   922  0002F0  EF80  F001         	goto	l956
   923  0002F4                     l954:
   924  0002F4  90D8               	bcf	status,0,c
   925  0002F6  3608               	rlcf	___aldiv@divisor^0,f,c
   926  0002F8  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
   927  0002FA  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
   928  0002FC  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
   929  0002FE  2A0C               	incf	___aldiv@counter^0,f,c
   930  000300                     l956:
   931  000300  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
   932  000302  EF85  F001         	goto	u231
   933  000306  EF87  F001         	goto	u230
   934  00030A                     u231:
   935  00030A  EF7A  F001         	goto	l954
   936  00030E                     u230:
   937  00030E                     l958:
   938  00030E  90D8               	bcf	status,0,c
   939  000310  360E               	rlcf	___aldiv@quotient^0,f,c
   940  000312  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
   941  000314  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
   942  000316  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
   943  000318  5008               	movf	___aldiv@divisor^0,w,c
   944  00031A  5C04               	subwf	___aldiv@dividend^0,w,c
   945  00031C  5009               	movf	(___aldiv@divisor+1)^0,w,c
   946  00031E  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
   947  000320  500A               	movf	(___aldiv@divisor+2)^0,w,c
   948  000322  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
   949  000324  500B               	movf	(___aldiv@divisor+3)^0,w,c
   950  000326  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
   951  000328  A0D8               	btfss	status,0,c
   952  00032A  EF99  F001         	goto	u241
   953  00032E  EF9B  F001         	goto	u240
   954  000332                     u241:
   955  000332  EFA4  F001         	goto	l966
   956  000336                     u240:
   957  000336  5008               	movf	___aldiv@divisor^0,w,c
   958  000338  5E04               	subwf	___aldiv@dividend^0,f,c
   959  00033A  5009               	movf	(___aldiv@divisor+1)^0,w,c
   960  00033C  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
   961  00033E  500A               	movf	(___aldiv@divisor+2)^0,w,c
   962  000340  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
   963  000342  500B               	movf	(___aldiv@divisor+3)^0,w,c
   964  000344  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
   965  000346  800E               	bsf	___aldiv@quotient^0,0,c
   966  000348                     l966:
   967  000348  90D8               	bcf	status,0,c
   968  00034A  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
   969  00034C  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
   970  00034E  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
   971  000350  3208               	rrcf	___aldiv@divisor^0,f,c
   972  000352  2E0C               	decfsz	___aldiv@counter^0,f,c
   973  000354  EF87  F001         	goto	l958
   974  000358                     l970:
   975  000358  500D               	movf	___aldiv@sign^0,w,c
   976  00035A  B4D8               	btfsc	status,2,c
   977  00035C  EFB2  F001         	goto	u251
   978  000360  EFB4  F001         	goto	u250
   979  000364                     u251:
   980  000364  EFBC  F001         	goto	l974
   981  000368                     u250:
   982  000368  1E11               	comf	(___aldiv@quotient+3)^0,f,c
   983  00036A  1E10               	comf	(___aldiv@quotient+2)^0,f,c
   984  00036C  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
   985  00036E  6C0E               	negf	___aldiv@quotient^0,c
   986  000370  0E00               	movlw	0
   987  000372  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
   988  000374  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
   989  000376  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
   990  000378                     l974:
   991  000378  C00E  F004         	movff	___aldiv@quotient,?___aldiv
   992  00037C  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
   993  000380  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
   994  000384  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
   995  000388  0012               	return		;funcret
   996  00038A                     __end_of___aldiv:
   997                           	callstack 0
   998                           
   999 ;; *************** function _Interrupt_GlobalEnable *****************
  1000 ;; Defined at:
  1001 ;;		line 4 in file "src/pic18f4520/interrupt/interrupt.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		None
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1015 ;;      Params:         0       0       0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 2
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text4
  1030  00056A                     __ptext4:
  1031                           	callstack 0
  1032  00056A                     _Interrupt_GlobalEnable:
  1033                           	callstack 28
  1034  00056A                     
  1035                           ;src/pic18f4520/interrupt/interrupt.c: 11:     RCONbits.IPEN = 0x01;
  1036  00056A  8ED0               	bsf	208,7,c	;volatile
  1037                           
  1038                           ;src/pic18f4520/interrupt/interrupt.c: 22:     INTCONbits.GIE_GIEH = 0x01;
  1039  00056C  8EF2               	bsf	242,7,c	;volatile
  1040                           
  1041                           ;src/pic18f4520/interrupt/interrupt.c: 33:     INTCONbits.PEIE_GIEL = 0x01;
  1042  00056E  8CF2               	bsf	242,6,c	;volatile
  1043  000570  0012               	return		;funcret
  1044  000572                     __end_of_Interrupt_GlobalEnable:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _TC0INT *****************
  1048 ;; Defined at:
  1049 ;;		line 87 in file "src/main.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0
  1065 ;;      Temps:          2       0       0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 1
  1070 ;; This function calls:
  1071 ;;		_Serial_Transmit
  1072 ;; This function is called by:
  1073 ;;		Interrupt level 2
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	intcode
  1078  000008                     __pintcode:
  1079                           	callstack 0
  1080  000008                     _TC0INT:
  1081                           	callstack 27
  1082                           
  1083                           ;incstack = 0
  1084  000008  8238               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1085  00000A  EDC5  F001         	call	int_func,f	;refresh shadow registers
  1086                           
  1087                           	psect	intcode_body
  1088  00038A                     __pintcode_body:
  1089                           	callstack 27
  1090  00038A                     int_func:
  1091                           	callstack 27
  1092  00038A  0006               	pop		; remove dummy address from shadow register refresh
  1093  00038C  CFD9 F002          	movff	fsr2l,??_TC0INT
  1094  000390  CFDA F003          	movff	fsr2h,??_TC0INT+1
  1095  000394                     
  1096                           ;src/main.c: 88:      if (INTCONbits.TMR0IF == 0x01) {
  1097  000394  A4F2               	btfss	242,2,c	;volatile
  1098  000396  EFCF  F001         	goto	i2u15_41
  1099  00039A  EFD1  F001         	goto	i2u15_40
  1100  00039E                     i2u15_41:
  1101  00039E  EFDC  F001         	goto	i2l894
  1102  0003A2                     i2u15_40:
  1103  0003A2                     
  1104                           ;src/main.c: 90:       LATB = (PORTB ^ (1 << 0));;
  1105  0003A2  5081               	movf	129,w,c	;volatile
  1106  0003A4  0A01               	xorlw	1
  1107  0003A6  6E8A               	movwf	138,c	;volatile
  1108                           
  1109                           ;src/main.c: 91:       LATB = (PORTB ^ (1 << 1));;
  1110  0003A8  5081               	movf	129,w,c	;volatile
  1111  0003AA  0A02               	xorlw	2
  1112  0003AC  6E8A               	movwf	138,c	;volatile
  1113  0003AE                     
  1114                           ;src/main.c: 93:       TMR0 = 0xE17B;
  1115  0003AE  0EE1               	movlw	225
  1116  0003B0  6ED7               	movwf	215,c	;volatile
  1117  0003B2  0E7B               	movlw	123
  1118  0003B4  6ED6               	movwf	214,c	;volatile
  1119  0003B6                     
  1120                           ;src/main.c: 94:       INTCONbits.T0IF = 0x00;
  1121  0003B6  94F2               	bcf	242,2,c	;volatile
  1122  0003B8                     i2l894:
  1123                           
  1124                           ;src/main.c: 98:     if(PIR1bits.RCIF){
  1125  0003B8  AA9E               	btfss	158,5,c	;volatile
  1126  0003BA  EFE1  F001         	goto	i2u16_41
  1127  0003BE  EFE3  F001         	goto	i2u16_40
  1128  0003C2                     i2u16_41:
  1129  0003C2  EF14  F002         	goto	i2l47
  1130  0003C6                     i2u16_40:
  1131  0003C6                     
  1132                           ;src/main.c: 102:         count = RCREG;
  1133  0003C6  CFAE F037          	movff	4014,_count	;volatile
  1134  0003CA                     
  1135                           ;src/main.c: 106:         if(count == 0x41){
  1136  0003CA  0E41               	movlw	65
  1137  0003CC  1837               	xorwf	_count^0,w,c
  1138  0003CE  A4D8               	btfss	status,2,c
  1139  0003D0  EFEC  F001         	goto	i2u17_41
  1140  0003D4  EFEE  F001         	goto	i2u17_40
  1141  0003D8                     i2u17_41:
  1142  0003D8  EF13  F002         	goto	i2l41
  1143  0003DC                     i2u17_40:
  1144  0003DC                     
  1145                           ;src/main.c: 107:             for(i = 0; i < sizeof(AT_VERSION); i++){
  1146  0003DC  0E00               	movlw	0
  1147  0003DE  6E36               	movwf	(_i+1)^0,c
  1148  0003E0  0E00               	movlw	0
  1149  0003E2  6E35               	movwf	_i^0,c
  1150  0003E4                     i2l902:
  1151  0003E4  5036               	movf	(_i+1)^0,w,c
  1152  0003E6  E109               	bnz	i2u18_40
  1153  0003E8  0E0A               	movlw	10
  1154  0003EA  5C35               	subwf	_i^0,w,c
  1155  0003EC  A0D8               	btfss	status,0,c
  1156  0003EE  EFFB  F001         	goto	i2u18_41
  1157  0003F2  EFFD  F001         	goto	i2u18_40
  1158  0003F6                     i2u18_41:
  1159  0003F6  EFFF  F001         	goto	i2l906
  1160  0003FA                     i2u18_40:
  1161  0003FA  EF13  F002         	goto	i2l41
  1162  0003FE                     i2l906:
  1163                           
  1164                           ;src/main.c: 108:                Serial_Transmit(AT_VERSION[i]);
  1165  0003FE  0E1F               	movlw	low _AT_VERSION
  1166  000400  2435               	addwf	_i^0,w,c
  1167  000402  6ED9               	movwf	fsr2l,c
  1168  000404  0E00               	movlw	high _AT_VERSION
  1169  000406  2036               	addwfc	(_i+1)^0,w,c
  1170  000408  6EDA               	movwf	fsr2h,c
  1171  00040A  50DF               	movf	indf2,w,c
  1172  00040C  ECAA  F002         	call	_Serial_Transmit
  1173  000410                     i2l44:
  1174  000410  A2AC               	btfss	4012,1,c	;volatile
  1175  000412  EF0D  F002         	goto	i2u19_41
  1176  000416  EF0F  F002         	goto	i2u19_40
  1177  00041A                     i2u19_41:
  1178  00041A  EF08  F002         	goto	i2l44
  1179  00041E                     i2u19_40:
  1180  00041E                     
  1181                           ;src/main.c: 110:             }
  1182  00041E  4A35               	infsnz	_i^0,f,c
  1183  000420  2A36               	incf	(_i+1)^0,f,c
  1184  000422  EFF2  F001         	goto	i2l902
  1185  000426                     i2l41:
  1186                           
  1187                           ;src/main.c: 112:         PIR1bits.RCIF = 0x00;
  1188  000426  9A9E               	bcf	158,5,c	;volatile
  1189  000428                     i2l47:
  1190  000428  C003  FFDA         	movff	??_TC0INT+1,fsr2h
  1191  00042C  C002  FFD9         	movff	??_TC0INT,fsr2l
  1192  000430  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1193  000432  0011               	retfie		f
  1194  000434                     __end_of_TC0INT:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _Serial_Transmit *****************
  1198 ;; Defined at:
  1199 ;;		line 132 in file "src/pic18f4520/serial/serial.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  data            1    wreg     unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  data            1    0[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         0       0       0       0       0       0       0
  1214 ;;      Locals:         1       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0
  1216 ;;      Totals:         1       0       0       0       0       0       0
  1217 ;;Total ram usage:        1 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_TC0INT
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text6
  1227  000554                     __ptext6:
  1228                           	callstack 0
  1229  000554                     _Serial_Transmit:
  1230                           	callstack 27
  1231                           
  1232                           ;incstack = 0
  1233                           ;Serial_Transmit@data stored from wreg
  1234  000554  6E01               	movwf	Serial_Transmit@data^0,c
  1235  000556                     
  1236                           ;src/pic18f4520/serial/serial.c: 132: void Serial_Transmit(char data);src/pic18f4520/ser
      +                          ial/serial.c: 133: {;src/pic18f4520/serial/serial.c: 134:     TXREG = data;
  1237  000556  C001  FFAD         	movff	Serial_Transmit@data,4013	;volatile
  1238  00055A                     i2l96:
  1239  00055A  A2AC               	btfss	4012,1,c	;volatile
  1240  00055C  EFB2  F002         	goto	i2u7_41
  1241  000560  EFB4  F002         	goto	i2u7_40
  1242  000564                     i2u7_41:
  1243  000564  EFAD  F002         	goto	i2l96
  1244  000568                     i2u7_40:
  1245  000568  0012               	return		;funcret
  1246  00056A                     __end_of_Serial_Transmit:
  1247                           	callstack 0
  1248  0000                     
  1249                           	psect	rparam
  1250  0000                     
  1251                           	psect	temp
  1252  000038                     btemp:
  1253                           	callstack 0
  1254  000038                     	ds	1
  1255  0000                     int$flags	set	btemp
  1256  0000                     wtemp8	set	btemp+1
  1257  0000                     ttemp5	set	btemp+1
  1258  0000                     ttemp6	set	btemp+4
  1259  0000                     ttemp7	set	btemp+8
  1260                           
  1261                           	psect	idloc
  1262                           
  1263                           ;Config register IDLOC0 @ 0x200000
  1264                           ;	unspecified, using default values
  1265  200000                     	org	2097152
  1266  200000  FF                 	db	255
  1267                           
  1268                           ;Config register IDLOC1 @ 0x200001
  1269                           ;	unspecified, using default values
  1270  200001                     	org	2097153
  1271  200001  FF                 	db	255
  1272                           
  1273                           ;Config register IDLOC2 @ 0x200002
  1274                           ;	unspecified, using default values
  1275  200002                     	org	2097154
  1276  200002  FF                 	db	255
  1277                           
  1278                           ;Config register IDLOC3 @ 0x200003
  1279                           ;	unspecified, using default values
  1280  200003                     	org	2097155
  1281  200003  FF                 	db	255
  1282                           
  1283                           ;Config register IDLOC4 @ 0x200004
  1284                           ;	unspecified, using default values
  1285  200004                     	org	2097156
  1286  200004  FF                 	db	255
  1287                           
  1288                           ;Config register IDLOC5 @ 0x200005
  1289                           ;	unspecified, using default values
  1290  200005                     	org	2097157
  1291  200005  FF                 	db	255
  1292                           
  1293                           ;Config register IDLOC6 @ 0x200006
  1294                           ;	unspecified, using default values
  1295  200006                     	org	2097158
  1296  200006  FF                 	db	255
  1297                           
  1298                           ;Config register IDLOC7 @ 0x200007
  1299                           ;	unspecified, using default values
  1300  200007                     	org	2097159
  1301  200007  FF                 	db	255
  1302                           
  1303                           	psect	config
  1304                           
  1305                           ; Padding undefined space
  1306  300000                     	org	3145728
  1307  300000  FF                 	db	255
  1308                           
  1309                           ;Config register CONFIG1H @ 0x300001
  1310                           ;	Oscillator Selection bits
  1311                           ;	OSC = HS, HS oscillator
  1312                           ;	Fail-Safe Clock Monitor Enable bit
  1313                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1314                           ;	Internal/External Oscillator Switchover bit
  1315                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1316  300001                     	org	3145729
  1317  300001  02                 	db	2
  1318                           
  1319                           ;Config register CONFIG2L @ 0x300002
  1320                           ;	Power-up Timer Enable bit
  1321                           ;	PWRT = OFF, PWRT disabled
  1322                           ;	Brown-out Reset Enable bits
  1323                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1324                           ;	Brown Out Reset Voltage bits
  1325                           ;	BORV = 3, Minimum setting
  1326  300002                     	org	3145730
  1327  300002  1F                 	db	31
  1328                           
  1329                           ;Config register CONFIG2H @ 0x300003
  1330                           ;	Watchdog Timer Enable bit
  1331                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1332                           ;	Watchdog Timer Postscale Select bits
  1333                           ;	WDTPS = 32768, 1:32768
  1334  300003                     	org	3145731
  1335  300003  1E                 	db	30
  1336                           
  1337                           ; Padding undefined space
  1338  300004                     	org	3145732
  1339  300004  FF                 	db	255
  1340                           
  1341                           ;Config register CONFIG3H @ 0x300005
  1342                           ;	CCP2 MUX bit
  1343                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1344                           ;	PORTB A/D Enable bit
  1345                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1346                           ;	Low-Power Timer1 Oscillator Enable bit
  1347                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1348                           ;	MCLR Pin Enable bit
  1349                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1350  300005                     	org	3145733
  1351  300005  81                 	db	129
  1352                           
  1353                           ;Config register CONFIG4L @ 0x300006
  1354                           ;	Stack Full/Underflow Reset Enable bit
  1355                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1356                           ;	Single-Supply ICSP Enable bit
  1357                           ;	LVP = OFF, Single-Supply ICSP disabled
  1358                           ;	Extended Instruction Set Enable bit
  1359                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1360                           ;	Background Debugger Enable bit
  1361                           ;	DEBUG = 0x1, unprogrammed default
  1362  300006                     	org	3145734
  1363  300006  81                 	db	129
  1364                           
  1365                           ; Padding undefined space
  1366  300007                     	org	3145735
  1367  300007  FF                 	db	255
  1368                           
  1369                           ;Config register CONFIG5L @ 0x300008
  1370                           ;	Code Protection bit
  1371                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1372                           ;	Code Protection bit
  1373                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1374                           ;	Code Protection bit
  1375                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1376                           ;	Code Protection bit
  1377                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1378  300008                     	org	3145736
  1379  300008  0F                 	db	15
  1380                           
  1381                           ;Config register CONFIG5H @ 0x300009
  1382                           ;	Boot Block Code Protection bit
  1383                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1384                           ;	Data EEPROM Code Protection bit
  1385                           ;	CPD = OFF, Data EEPROM not code-protected
  1386  300009                     	org	3145737
  1387  300009  C0                 	db	192
  1388                           
  1389                           ;Config register CONFIG6L @ 0x30000A
  1390                           ;	Write Protection bit
  1391                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1392                           ;	Write Protection bit
  1393                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1394                           ;	Write Protection bit
  1395                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1396                           ;	Write Protection bit
  1397                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1398  30000A                     	org	3145738
  1399  30000A  0F                 	db	15
  1400                           
  1401                           ;Config register CONFIG6H @ 0x30000B
  1402                           ;	Configuration Register Write Protection bit
  1403                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1404                           ;	Boot Block Write Protection bit
  1405                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1406                           ;	Data EEPROM Write Protection bit
  1407                           ;	WRTD = OFF, Data EEPROM not write-protected
  1408  30000B                     	org	3145739
  1409  30000B  E0                 	db	224
  1410                           
  1411                           ;Config register CONFIG7L @ 0x30000C
  1412                           ;	Table Read Protection bit
  1413                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1414                           ;	Table Read Protection bit
  1415                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1416                           ;	Table Read Protection bit
  1417                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1418                           ;	Table Read Protection bit
  1419                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1420  30000C                     	org	3145740
  1421  30000C  0F                 	db	15
  1422                           
  1423                           ;Config register CONFIG7H @ 0x30000D
  1424                           ;	Boot Block Table Read Protection bit
  1425                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1426  30000D                     	org	3145741
  1427  30000D  40                 	db	64
  1428                           tosu	equ	0xFFF
  1429                           tosh	equ	0xFFE
  1430                           tosl	equ	0xFFD
  1431                           stkptr	equ	0xFFC
  1432                           pclatu	equ	0xFFB
  1433                           pclath	equ	0xFFA
  1434                           pcl	equ	0xFF9
  1435                           tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           prodh	equ	0xFF4
  1440                           prodl	equ	0xFF3
  1441                           indf0	equ	0xFEF
  1442                           postinc0	equ	0xFEE
  1443                           postdec0	equ	0xFED
  1444                           preinc0	equ	0xFEC
  1445                           plusw0	equ	0xFEB
  1446                           fsr0h	equ	0xFEA
  1447                           fsr0l	equ	0xFE9
  1448                           wreg	equ	0xFE8
  1449                           indf1	equ	0xFE7
  1450                           postinc1	equ	0xFE6
  1451                           postdec1	equ	0xFE5
  1452                           preinc1	equ	0xFE4
  1453                           plusw1	equ	0xFE3
  1454                           fsr1h	equ	0xFE2
  1455                           fsr1l	equ	0xFE1
  1456                           bsr	equ	0xFE0
  1457                           indf2	equ	0xFDF
  1458                           postinc2	equ	0xFDE
  1459                           postdec2	equ	0xFDD
  1460                           preinc2	equ	0xFDC
  1461                           plusw2	equ	0xFDB
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Timer0_Config@timerConfig	PTR struct . size(2) Largest target is 5
		 -> timerConfig(COMRAM[5]), 

    Serial_1_Config@serialConfig	PTR struct . size(2) Largest target is 7
		 -> serialConfig(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_Serial_1_Config
    _Serial_1_Config->___aldiv

Critical Paths under _TC0INT in COMRAM

    _TC0INT->_Serial_Transmit

Critical Paths under _main in BANK0

    None.

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1738
             _Interrupt_GlobalEnable
                    _Serial_1_Config
                      _Timer0_Config
 ---------------------------------------------------------------------------------
 (1) _Timer0_Config                                        3     1      2     164
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Serial_1_Config                                     13    11      2    1574
                                             17 COMRAM    13    11      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1050
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Interrupt_GlobalEnable                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TC0INT                                               2     2      0      15
                                              1 COMRAM     2     2      0
                    _Serial_Transmit
 ---------------------------------------------------------------------------------
 (4) _Serial_Transmit                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_GlobalEnable
   _Serial_1_Config
     ___aldiv
   _Timer0_Config

 _TC0INT (ROOT)
   _Serial_Transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      37       1       43.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      15        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 12 15:56:19 2021

                              _i 0035                               l60 0506  
                             l61 0506                               l53 04D8  
                             l70 0570                               l57 04E4  
                             l91 0272                               l92 0276  
                             l93 027C                               l89 0216  
              ??_Serial_Transmit 0001                              l114 04D0  
                            l196 0388                              l836 056A  
                            l940 02A0                              l950 02D6  
                            l942 02A4                              l934 027E  
                            l960 0318                              l952 02EC  
                            l944 02B2                              l936 0282  
                            l962 0336                              l954 02F4  
                            l970 0358                              l946 02C2  
                            l938 0290                              l972 0368  
                            l964 0346                              l956 0300  
                            l948 02C6                              l980 0436  
                            l974 0378                              l966 0348  
                            l958 030E                              l990 04CE  
                            l982 04A8                              l968 0352  
                            l992 0012                              l984 04C2  
                            l994 0114                              l986 04C4  
                            l978 0434                              l996 015C  
                            l988 04C6                              l998 01A4  
                            u200 0290                              u201 028C  
                            u210 02B2                              u211 02AE  
                            u220 02EC                              u300 020A  
                            u221 02E8                              u301 0206  
                            u230 030E                              u310 0228  
                            u231 030A                              u311 0224  
                            u240 0336                              u320 026A  
                            u241 0332                              u321 0266  
                            u250 0368                              u251 0364  
                            u260 04A8                              u261 04A4  
                            u275 0040                              u285 0096  
                            u295 00EC                              wreg 000FE8  
 __end_of_Interrupt_GlobalEnable 0572                             l1000 01EC  
                           l1010 020A                             l1002 01F0  
                           l1020 024C                             l1012 0212  
                           l1004 01F2                             l1022 024E  
                           l1014 0228                             l1006 01F4  
                           l1024 026A                             l1016 022C  
                           l1008 01F8                             l1040 04EE  
                           l1018 0230                             l1042 04FA  
                           l1034 04DE                             l1026 04D2  
                           l1038 04EA                             _LATB 000F8A  
                           i2l41 0426                             i2l44 0410  
                           i2l47 0428                             i2l96 055A  
                           i2l99 0568                             _TMR0 000FD6  
                           _TRMT 007D61                             _main 04D2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0038                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                   ___param_bank 000000                  __end_of___aldiv 038A  
                          ?_main 0001                            i2l900 03DC  
                          i2l902 03E4                            i2l834 0556  
                          i2l906 03FE                            i2l908 041E  
                          i2l890 03AE                            i2l892 03B6  
                          i2l894 03B8                            i2l886 0394  
                          i2l896 03C6                            i2l888 03A2  
                          i2l898 03CA                            _RCREG 000FAE  
                          _SPBRG 000FAF                            _PORTB 000F81  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _count 0037                            tablat 000FF5  
          __end_of_Timer0_Config 04D2                            ttemp5 0039  
                          ttemp6 003C                            ttemp7 0040  
                          status 000FD8                            wtemp8 0039  
                __initialization 050E                     __end_of_main 050E  
                _Serial_1_Config 0012                           ??_main 001F  
    Serial_1_Config@serialConfig 0012                    __activetblptr 000000  
     Serial_1_Config@error_8HIGH 001D                           _TC0INT 0008  
                         i2u7_40 0568                           i2u7_41 0564  
                      ??___aldiv 000C          Serial_1_Config@brg8HIGH 001B  
                         isa$std 000001                     __pdataCOMRAM 001F  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                       __accesstop 0080  
        __end_of__initialization 0534                  _Serial_Transmit 0554  
                  ___rparam_used 000001          __end_of_Serial_1_Config 027E  
                 __pcstackCOMRAM 0001                          ?_TC0INT 0001  
                        i2u15_40 03A2                          i2u15_41 039E  
                        i2u16_40 03C6                          i2u16_41 03C2  
                        i2u17_40 03DC                          i2u17_41 03D8  
                        i2u18_40 03FA                          i2u18_41 03F6  
                        i2u19_40 041E                          i2u19_41 041A  
        __end_of_Serial_Transmit 056A                  __size_of_TC0INT 042C  
                        __Hparam 0000                 ?_Serial_1_Config 0012  
                        __Lparam 0000                          ___aldiv 027E  
                        __pcinit 050E                          __ramtop 0600  
                        __ptext0 04D2                          __ptext1 0434  
                        __ptext2 0012                          __ptext3 027E  
                        __ptext4 056A                          __ptext6 0554  
                      _T0CONbits 000FD5         Serial_1_Config@brg16HIGH 001C  
               ___aldiv@dividend 0004                   __pintcode_body 038A  
           end_of_initialization 0534                          int_func 038A  
                      _RCSTAbits 000FAB                 ___aldiv@quotient 000E  
                        postdec1 000FE5                          postinc0 000FEE  
                        postinc2 000FDE           __size_of_Timer0_Config 009E  
       ??_Interrupt_GlobalEnable 0004         Serial_1_Config@error_min 001E  
            Serial_Transmit@data 0001                 ?_Serial_Transmit 0001  
                 __end_of_TC0INT 0434                        _TXSTAbits 000FAC  
                    _BAUDCONbits 000FB8                    __pidataCOMRAM 053E  
            start_initialization 050E                         ??_TC0INT 0002  
       Timer0_Config@timerConfig 0004        Serial_1_Config@error_8LOW 0018  
                  _Timer0_Config 0434           Serial_1_Config@brg8LOW 001A  
__size_of_Interrupt_GlobalEnable 0008                      __pbssCOMRAM 0035  
                 ?_Timer0_Config 0004                        __pintcode 0008  
                       ?___aldiv 0004                  ___aldiv@divisor 0008  
                ___aldiv@counter 000C           _Interrupt_GlobalEnable 056A  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
                       _RCONbits 000FD0         __size_of_Serial_1_Config 026C  
                ??_Timer0_Config 0006                      _INTCON2bits 000FF1  
                      copy_data0 0522                         __Hrparam 0000  
                       __Lrparam 0000                 __size_of___aldiv 010C  
                  __size_of_main 003C                     _serialConfig 0029  
       __size_of_Serial_Transmit 0016                         isa$xinst 000000  
                       int$flags 0038                       _AT_VERSION 001F  
                     _INTCONbits 000FF2                ??_Serial_1_Config 0014  
                       intlevel2 0000      Serial_1_Config@error_16HIGH 0019  
                    _timerConfig 0030                     ___aldiv@sign 000D  
        ?_Interrupt_GlobalEnable 0001  
