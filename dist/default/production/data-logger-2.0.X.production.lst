

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 15:58:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  000CC4                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for _BLUETOOTH_PIN_COMM
    70  000CC4  41                 	db	65
    71  000CC5  54                 	db	84
    72  000CC6  2B                 	db	43
    73  000CC7  50                 	db	80
    74  000CC8  49                 	db	73
    75  000CC9  4E                 	db	78
    76  000CCA  58                 	db	88
    77  000CCB  59                 	db	89
    78  000CCC  5A                 	db	90
    79  000CCD  57                 	db	87
    80  000CCE  00                 	db	0
    81                           
    82                           ;initializer for _BLUETOOTH_NAME_COMM
    83  000CCF  41                 	db	65
    84  000CD0  54                 	db	84
    85  000CD1  2B                 	db	43
    86  000CD2  4E                 	db	78
    87  000CD3  41                 	db	65
    88  000CD4  4D                 	db	77
    89  000CD5  45                 	db	69
    90  000CD6  00                 	db	0
    91                           
    92                           ;initializer for _BLUETOOTH_BAUD_COMM
    93  000CD7  41                 	db	65
    94  000CD8  54                 	db	84
    95  000CD9  2B                 	db	43
    96  000CDA  42                 	db	66
    97  000CDB  41                 	db	65
    98  000CDC  55                 	db	85
    99  000CDD  44                 	db	68
   100  000CDE  00                 	db	0
   101                           
   102                           ;initializer for _serialConfig
   103  000CDF  00                 	db	0
   104  000CE0  00                 	db	0
   105  000CE1  00                 	db	0
   106  000CE2  2580               	dw	9600
   107  000CE4  0000               	dw	0
   108                           
   109                           ;initializer for _global_timer_value
   110  000CE6  0001               	dw	1
   111  000CE8  0000               	dw	0
   112  0000                     _TMR0	set	4054
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _T0CONbits	set	4053
   115  0000                     _TXREG	set	4013
   116  0000                     _PIE1bits	set	3997
   117  0000                     _RCSTAbits	set	4011
   118  0000                     _SPBRG	set	4015
   119  0000                     _TXSTAbits	set	4012
   120  0000                     _BAUDCONbits	set	4024
   121  0000                     _RCONbits	set	4048
   122  0000                     _TRISC	set	3988
   123  0000                     _PORTB	set	3969
   124  0000                     _LATB	set	3978
   125  0000                     _TRISB	set	3987
   126  0000                     _PORTD	set	3971
   127  0000                     _LATD	set	3980
   128  0000                     _TRISD	set	3989
   129  0000                     _RCREG	set	4014
   130  0000                     _PIR1bits	set	3998
   131  0000                     _INTCONbits	set	4082
   132  0000                     _TRMT	set	32097
   133                           
   134                           	psect	smallconst
   135  000600                     __psmallconst:
   136                           	callstack 0
   137  000600  00                 	db	0
   138  000601  53                 	db	83	;'S'
   139  000602  54                 	db	84	;'T'
   140  000603  41                 	db	65	;'A'
   141  000604  52                 	db	82	;'R'
   142  000605  54                 	db	84	;'T'
   143  000606  5F                 	db	95	;'_'
   144  000607  42                 	db	66	;'B'
   145  000608  4C                 	db	76	;'L'
   146  000609  55                 	db	85	;'U'
   147  00060A  45                 	db	69	;'E'
   148  00060B  54                 	db	84	;'T'
   149  00060C  4F                 	db	79	;'O'
   150  00060D  4F                 	db	79	;'O'
   151  00060E  54                 	db	84	;'T'
   152  00060F  48                 	db	72	;'H'
   153  000610  00                 	db	0
   154  000611                     STR_11:
   155  000611  4E                 	db	78	;'N'
   156  000612  41                 	db	65	;'A'
   157  000613  54                 	db	84	;'T'
   158  000614  41                 	db	65	;'A'
   159  000615  4E                 	db	78	;'N'
   160  000616  20                 	db	32
   161  000617  4D                 	db	77	;'M'
   162  000618  41                 	db	65	;'A'
   163  000619  52                 	db	82	;'R'
   164  00061A  51                 	db	81	;'Q'
   165  00061B  55                 	db	85	;'U'
   166  00061C  45                 	db	69	;'E'
   167  00061D  53                 	db	83	;'S'
   168  00061E  00                 	db	0
   169  00061F                     STR_1:
   170  00061F  41                 	db	65	;'A'
   171  000620  54                 	db	84	;'T'
   172  000621  0D                 	db	13
   173  000622  00                 	db	0
   174  000623  31                 	db	49	;'1'
   175  000624  00                 	db	0
   176  000625  32                 	db	50	;'2'
   177  000626  00                 	db	0
   178  000627  33                 	db	51	;'3'
   179  000628  00                 	db	0
   180  000629                     STR_5:
   181  000629  34                 	db	52	;'4'
   182  00062A  00                 	db	0
   183  00062B  35                 	db	53	;'5'
   184  00062C  00                 	db	0
   185  00062D  36                 	db	54	;'6'
   186  00062E  00                 	db	0
   187  00062F  37                 	db	55	;'7'
   188  000630  00                 	db	0
   189  000631  38                 	db	56	;'8'
   190  000632  00                 	db	0
   191  000633  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196  000C56                     __pcinit:
   197                           	callstack 0
   198  000C56                     start_initialization:
   199                           	callstack 0
   200  000C56                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to COMRAM (38 bytes)
   204                           ; load TBLPTR registers with __pidataCOMRAM
   205  000C56  0EC4               	movlw	low __pidataCOMRAM
   206  000C58  6EF6               	movwf	tblptrl,c
   207  000C5A  0E0C               	movlw	high __pidataCOMRAM
   208  000C5C  6EF7               	movwf	tblptrh,c
   209  000C5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   210  000C60  6EF8               	movwf	tblptru,c
   211  000C62  EE00  F001         	lfsr	0,__pdataCOMRAM
   212  000C66  EE10 F026          	lfsr	1,38
   213  000C6A                     copy_data0:
   214  000C6A  0009               	tblrd		*+
   215  000C6C  CFF5 FFEE          	movff	tablat,postinc0
   216  000C70  50E5               	movf	postdec1,w,c
   217  000C72  50E1               	movf	fsr1l,w,c
   218  000C74  E1FA               	bnz	copy_data0
   219                           
   220                           ; Clear objects allocated to COMRAM (16 bytes)
   221  000C76  EE00  F045         	lfsr	0,__pbssCOMRAM
   222  000C7A  0E10               	movlw	16
   223  000C7C                     clear_0:
   224  000C7C  6AEE               	clrf	postinc0,c
   225  000C7E  06E8               	decf	wreg,f,c
   226  000C80  E1FD               	bnz	clear_0
   227  000C82                     end_of_initialization:
   228                           	callstack 0
   229  000C82                     __end_of__initialization:
   230                           	callstack 0
   231  000C82  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   232  000C84  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   233  000C86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   234  000C88  6EF8               	movwf	tblptru,c
   235  000C8A  0100               	movlb	0
   236  000C8C  EFA2  F004         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239  000045                     __pbssCOMRAM:
   240                           	callstack 0
   241  000045                     _timerConfig:
   242                           	callstack 0
   243  000045                     	ds	5
   244  00004A                     Timer0_WaitMS@timeStart:
   245                           	callstack 0
   246  00004A                     	ds	4
   247  00004E                     _tickHook_func_prt:
   248                           	callstack 0
   249  00004E                     	ds	2
   250  000050                     _humidity:
   251                           	callstack 0
   252  000050                     	ds	2
   253  000052                     _temperature:
   254                           	callstack 0
   255  000052                     	ds	2
   256  000054                     _count:
   257                           	callstack 0
   258  000054                     	ds	1
   259                           
   260                           	psect	dataCOMRAM
   261  000001                     __pdataCOMRAM:
   262                           	callstack 0
   263  000001                     _BLUETOOTH_PIN_COMM:
   264                           	callstack 0
   265  000001                     	ds	11
   266  00000C                     _BLUETOOTH_NAME_COMM:
   267                           	callstack 0
   268  00000C                     	ds	8
   269  000014                     _BLUETOOTH_BAUD_COMM:
   270                           	callstack 0
   271  000014                     	ds	8
   272  00001C                     _serialConfig:
   273                           	callstack 0
   274  00001C                     	ds	7
   275  000023                     _global_timer_value:
   276                           	callstack 0
   277  000023                     	ds	4
   278                           
   279                           	psect	cstackCOMRAM
   280  000027                     __pcstackCOMRAM:
   281                           	callstack 0
   282  000027                     Serial_Transmit@data:
   283                           	callstack 0
   284  000027                     tickHook_Execute@global_timer_value:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x0
   288  000027                     	ds	2
   289  000029                     ??_sendNibble:
   290  000029                     ??_Display_WriteByte:
   291  000029                     ?___lldiv:
   292                           	callstack 0
   293  000029                     Display_SendByte@comm:
   294                           	callstack 0
   295  000029                     Serial_TransmitBuffer@buffer:
   296                           	callstack 0
   297  000029                     ___lldiv@dividend:
   298                           	callstack 0
   299                           
   300                           ; 4 bytes @ 0x2
   301  000029                     	ds	1
   302  00002A                     ??_Display_SendByte:
   303  00002A                     sendNibble@nibble:
   304                           	callstack 0
   305  00002A                     Display_WriteByte@byte:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x3
   309  00002A                     	ds	1
   310  00002B                     Display_SendByte@byte:
   311                           	callstack 0
   312  00002B                     Display_WriteByte@auxByte:
   313                           	callstack 0
   314  00002B                     Serial_TransmitBuffer@length:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x4
   318  00002B                     	ds	1
   319  00002C                     ??_Serial_TransmitBuffer:
   320  00002C                     Display_SendByte@auxByte:
   321                           	callstack 0
   322  00002C                     Display_WriteString@string:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x5
   326  00002C                     	ds	1
   327  00002D                     ___lldiv@divisor:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x6
   331  00002D                     	ds	1
   332  00002E                     Display_WriteString@length:
   333                           	callstack 0
   334  00002E                     Serial_TransmitBuffer@auxLength:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x7
   338  00002E                     	ds	1
   339  00002F                     Display_WriteString@address:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x8
   343  00002F                     	ds	1
   344  000030                     ??_Display_WriteString:
   345                           
   346                           ; 1 bytes @ 0x9
   347  000030                     	ds	1
   348  000031                     ___lldiv@quotient:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0xA
   352  000031                     	ds	4
   353  000035                     ___lldiv@counter:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0xE
   357  000035                     	ds	1
   358  000036                     Serial_1_Config@serialConfig:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0xF
   362  000036                     	ds	1
   363  000037                     Display_WriteString@auxLength:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x10
   367  000037                     	ds	1
   368  000038                     ??_Serial_1_Config:
   369  000038                     ??_DisplayLCD_Init:
   370                           
   371                           ; 1 bytes @ 0x11
   372  000038                     	ds	4
   373  00003C                     Serial_1_Config@error_8LOW:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x15
   377  00003C                     	ds	1
   378  00003D                     Serial_1_Config@error_16HIGH:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x16
   382  00003D                     	ds	1
   383  00003E                     Serial_1_Config@brg8LOW:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x17
   387  00003E                     	ds	1
   388  00003F                     Serial_1_Config@brg8HIGH:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x18
   392  00003F                     	ds	1
   393  000040                     Serial_1_Config@brg16HIGH:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x19
   397  000040                     	ds	1
   398  000041                     Serial_1_Config@error_8HIGH:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x1A
   402  000041                     	ds	1
   403  000042                     Serial_1_Config@error_min:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x1B
   407  000042                     	ds	1
   408  000043                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x1C
   411  000043                     	ds	2
   412                           
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 59 in file "src/main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  i               2    0        int 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         0       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0
   434 ;;      Temps:          2       0       0       0       0       0       0
   435 ;;      Totals:         2       0       0       0       0       0       0
   436 ;;Total ram usage:        2 bytes
   437 ;; Hardware stack levels required when called: 5
   438 ;; This function calls:
   439 ;;		_DisplayLCD_Init
   440 ;;		_Serial_1_Config
   441 ;;		_Serial_TransmitBuffer
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text0
   448  000944                     __ptext0:
   449                           	callstack 0
   450  000944                     _main:
   451                           	callstack 26
   452  000944                     
   453                           ;src/main.c: 64:     Serial_1_Config(&serialConfig);
   454  000944  0E1C               	movlw	low _serialConfig
   455  000946  6E36               	movwf	Serial_1_Config@serialConfig^0,c
   456  000948  0E00               	movlw	high _serialConfig
   457  00094A  6E37               	movwf	(Serial_1_Config@serialConfig+1)^0,c
   458  00094C  EC1A  F003         	call	_Serial_1_Config	;wreg free
   459  000950                     
   460                           ;src/main.c: 66:     DisplayLCD_Init();
   461  000950  ECF2  F004         	call	_DisplayLCD_Init	;wreg free
   462  000954                     l1572:
   463                           
   464                           ;src/main.c: 69:     {;src/main.c: 70:         Serial_TransmitBuffer("AT\r", sizeof("AT\
      +                          r"));
   465  000954  0E1F               	movlw	low STR_1
   466  000956  6E29               	movwf	Serial_TransmitBuffer@buffer^0,c
   467  000958  0E06               	movlw	high STR_1
   468  00095A  6E2A               	movwf	(Serial_TransmitBuffer@buffer+1)^0,c
   469  00095C  0E04               	movlw	4
   470  00095E  6E2B               	movwf	Serial_TransmitBuffer@length^0,c
   471  000960  ECDC  F005         	call	_Serial_TransmitBuffer	;wreg free
   472  000964                     
   473                           ;src/main.c: 72:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   474  000964  0E0D               	movlw	13
   475  000966  6E44               	movwf	(??_main+1)^0,c
   476  000968  0EAF               	movlw	175
   477  00096A  6E43               	movwf	??_main^0,c
   478  00096C  0EB6               	movlw	182
   479  00096E                     u497:
   480  00096E  2EE8               	decfsz	wreg,f,c
   481  000970  D7FE               	bra	u497
   482  000972  2E43               	decfsz	??_main^0,f,c
   483  000974  D7FC               	bra	u497
   484  000976  2E44               	decfsz	(??_main+1)^0,f,c
   485  000978  D7FA               	bra	u497
   486  00097A  D000               	nop2	
   487  00097C                     
   488                           ;src/main.c: 73:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   489  00097C  0E0D               	movlw	13
   490  00097E  6E44               	movwf	(??_main+1)^0,c
   491  000980  0EAF               	movlw	175
   492  000982  6E43               	movwf	??_main^0,c
   493  000984  0EB6               	movlw	182
   494  000986                     u507:
   495  000986  2EE8               	decfsz	wreg,f,c
   496  000988  D7FE               	bra	u507
   497  00098A  2E43               	decfsz	??_main^0,f,c
   498  00098C  D7FC               	bra	u507
   499  00098E  2E44               	decfsz	(??_main+1)^0,f,c
   500  000990  D7FA               	bra	u507
   501  000992  D000               	nop2	
   502  000994                     
   503                           ;src/main.c: 74:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   504  000994  0E0D               	movlw	13
   505  000996  6E44               	movwf	(??_main+1)^0,c
   506  000998  0EAF               	movlw	175
   507  00099A  6E43               	movwf	??_main^0,c
   508  00099C  0EB6               	movlw	182
   509  00099E                     u517:
   510  00099E  2EE8               	decfsz	wreg,f,c
   511  0009A0  D7FE               	bra	u517
   512  0009A2  2E43               	decfsz	??_main^0,f,c
   513  0009A4  D7FC               	bra	u517
   514  0009A6  2E44               	decfsz	(??_main+1)^0,f,c
   515  0009A8  D7FA               	bra	u517
   516  0009AA  D000               	nop2	
   517  0009AC                     
   518                           ;src/main.c: 75:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   519  0009AC  0E0D               	movlw	13
   520  0009AE  6E44               	movwf	(??_main+1)^0,c
   521  0009B0  0EAF               	movlw	175
   522  0009B2  6E43               	movwf	??_main^0,c
   523  0009B4  0EB6               	movlw	182
   524  0009B6                     u527:
   525  0009B6  2EE8               	decfsz	wreg,f,c
   526  0009B8  D7FE               	bra	u527
   527  0009BA  2E43               	decfsz	??_main^0,f,c
   528  0009BC  D7FC               	bra	u527
   529  0009BE  2E44               	decfsz	(??_main+1)^0,f,c
   530  0009C0  D7FA               	bra	u527
   531  0009C2  D000               	nop2	
   532  0009C4                     
   533                           ;src/main.c: 76:         _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   534  0009C4  0E0D               	movlw	13
   535  0009C6  6E44               	movwf	(??_main+1)^0,c
   536  0009C8  0EAF               	movlw	175
   537  0009CA  6E43               	movwf	??_main^0,c
   538  0009CC  0EB6               	movlw	182
   539  0009CE                     u537:
   540  0009CE  2EE8               	decfsz	wreg,f,c
   541  0009D0  D7FE               	bra	u537
   542  0009D2  2E43               	decfsz	??_main^0,f,c
   543  0009D4  D7FC               	bra	u537
   544  0009D6  2E44               	decfsz	(??_main+1)^0,f,c
   545  0009D8  D7FA               	bra	u537
   546  0009DA  D000               	nop2	
   547  0009DC  EFAA  F004         	goto	l1572
   548  0009E0  EF07  F000         	goto	start
   549  0009E4                     __end_of_main:
   550                           	callstack 0
   551                           
   552 ;; *************** function _Serial_TransmitBuffer *****************
   553 ;; Defined at:
   554 ;;		line 137 in file "src/pic18f4520/serial/serial.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  buffer          2    2[COMRAM] PTR unsigned char 
   557 ;;		 -> BLUETOOTH_BAUD_COMM(8), STR_1(4), 
   558 ;;  length          1    4[COMRAM] unsigned char 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  auxLength       1    7[COMRAM] unsigned char 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   570 ;;      Params:         3       0       0       0       0       0       0
   571 ;;      Locals:         1       0       0       0       0       0       0
   572 ;;      Temps:          2       0       0       0       0       0       0
   573 ;;      Totals:         6       0       0       0       0       0       0
   574 ;;Total ram usage:        6 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; Hardware stack levels required when called: 2
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_main
   581 ;;		_Bluetooth_HC_06_Configure
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text1
   586  000BB8                     __ptext1:
   587                           	callstack 0
   588  000BB8                     _Serial_TransmitBuffer:
   589                           	callstack 28
   590  000BB8                     
   591                           ;src/pic18f4520/serial/serial.c: 137: void Serial_TransmitBuffer(uint8_t* buffer, uint8_
      +                          t length);src/pic18f4520/serial/serial.c: 138: {;src/pic18f4520/serial/serial.c: 139:   
      +                            uint8_t auxLength = 0x00;
   592  000BB8  0E00               	movlw	0
   593  000BBA  6E2E               	movwf	Serial_TransmitBuffer@auxLength^0,c
   594                           
   595                           ;src/pic18f4520/serial/serial.c: 140:     while(auxLength < length)
   596  000BBC  EFFF  F005         	goto	l1548
   597  000BC0                     l1544:
   598                           
   599                           ;src/pic18f4520/serial/serial.c: 141:     {;src/pic18f4520/serial/serial.c: 142:        
      +                           TXREG = buffer[auxLength];
   600  000BC0  502E               	movf	Serial_TransmitBuffer@auxLength^0,w,c
   601  000BC2  2429               	addwf	Serial_TransmitBuffer@buffer^0,w,c
   602  000BC4  6E2C               	movwf	??_Serial_TransmitBuffer^0,c
   603  000BC6  0E00               	movlw	0
   604  000BC8  202A               	addwfc	(Serial_TransmitBuffer@buffer+1)^0,w,c
   605  000BCA  6E2D               	movwf	(??_Serial_TransmitBuffer+1)^0,c
   606  000BCC  C02C  FFF6         	movff	??_Serial_TransmitBuffer,tblptrl
   607  000BD0  C02D  FFF7         	movff	??_Serial_TransmitBuffer+1,tblptrh
   608  000BD4  6AF8               	clrf	tblptru,c
   609  000BD6  0E05               	movlw	(high __ramtop+-1)
   610  000BD8  64F7               	cpfsgt	tblptrh,c
   611  000BDA  D003               	bra	u437
   612  000BDC  0008               	tblrd		*
   613  000BDE  50F5               	movf	tablat,w,c
   614  000BE0  D005               	bra	u430
   615  000BE2                     u437:
   616  000BE2  CFF6 FFE9          	movff	tblptrl,fsr0l
   617  000BE6  CFF7 FFEA          	movff	tblptrh,fsr0h
   618  000BEA  50EF               	movf	indf0,w,c
   619  000BEC                     u430:
   620  000BEC  6EAD               	movwf	173,c	;volatile
   621  000BEE                     l288:
   622  000BEE  A2AC               	btfss	4012,1,c	;volatile
   623  000BF0  EFFC  F005         	goto	u441
   624  000BF4  EFFE  F005         	goto	u440
   625  000BF8                     u441:
   626  000BF8  EFF7  F005         	goto	l288
   627  000BFC                     u440:
   628  000BFC                     
   629                           ;src/pic18f4520/serial/serial.c: 145:         auxLength++;
   630  000BFC  2A2E               	incf	Serial_TransmitBuffer@auxLength^0,f,c
   631  000BFE                     l1548:
   632                           
   633                           ;src/pic18f4520/serial/serial.c: 140:     while(auxLength < length)
   634  000BFE  502B               	movf	Serial_TransmitBuffer@length^0,w,c
   635  000C00  5C2E               	subwf	Serial_TransmitBuffer@auxLength^0,w,c
   636  000C02  A0D8               	btfss	status,0,c
   637  000C04  EF06  F006         	goto	u451
   638  000C08  EF08  F006         	goto	u450
   639  000C0C                     u451:
   640  000C0C  EFE0  F005         	goto	l1544
   641  000C10                     u450:
   642  000C10  0012               	return		;funcret
   643  000C12                     __end_of_Serial_TransmitBuffer:
   644                           	callstack 0
   645                           
   646 ;; *************** function _Serial_1_Config *****************
   647 ;; Defined at:
   648 ;;		line 6 in file "src/pic18f4520/serial/serial.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  serialConfig    2   15[COMRAM] PTR struct .
   651 ;;		 -> serialConfig(7), 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  error_min       1   27[COMRAM] unsigned char 
   654 ;;  error_8HIGH     1   26[COMRAM] unsigned char 
   655 ;;  brg16HIGH       1   25[COMRAM] unsigned char 
   656 ;;  brg8HIGH        1   24[COMRAM] unsigned char 
   657 ;;  brg8LOW         1   23[COMRAM] unsigned char 
   658 ;;  error_16HIGH    1   22[COMRAM] unsigned char 
   659 ;;  error_8LOW      1   21[COMRAM] unsigned char 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   669 ;;      Params:         2       0       0       0       0       0       0
   670 ;;      Locals:         7       0       0       0       0       0       0
   671 ;;      Temps:          4       0       0       0       0       0       0
   672 ;;      Totals:        13       0       0       0       0       0       0
   673 ;;Total ram usage:       13 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 3
   676 ;; This function calls:
   677 ;;		___lldiv
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text2
   684  000634                     __ptext2:
   685                           	callstack 0
   686  000634                     _Serial_1_Config:
   687                           	callstack 27
   688  000634                     
   689                           ;src/pic18f4520/serial/serial.c: 29:     uint8_t brg8LOW;;src/pic18f4520/serial/serial.c
      +                          : 30:     uint8_t brg8HIGH;;src/pic18f4520/serial/serial.c: 31:     uint8_t brg16HIGH;;s
      +                          rc/pic18f4520/serial/serial.c: 34:     uint8_t error_8LOW;;src/pic18f4520/serial/serial.
      +                          c: 35:     uint8_t error_8HIGH;;src/pic18f4520/serial/serial.c: 36:     uint8_t error_16
      +                          HIGH;;src/pic18f4520/serial/serial.c: 38:     uint8_t error_min;;src/pic18f4520/serial/s
      +                          erial.c: 41:     brg8LOW = (10000000UL/(serialConfig->serial_desired_baud * 64));
   690  000634  0E80               	movlw	128
   691  000636  6E29               	movwf	___lldiv@dividend^0,c
   692  000638  0E96               	movlw	150
   693  00063A  6E2A               	movwf	(___lldiv@dividend+1)^0,c
   694  00063C  0E98               	movlw	152
   695  00063E  6E2B               	movwf	(___lldiv@dividend+2)^0,c
   696  000640  0E00               	movlw	0
   697  000642  6E2C               	movwf	(___lldiv@dividend+3)^0,c
   698  000644  EE20 F003          	lfsr	2,3
   699  000648  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   700  00064A  26D9               	addwf	fsr2l,f,c
   701  00064C  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   702  00064E  22DA               	addwfc	fsr2h,f,c
   703  000650  CFDE F038          	movff	postinc2,??_Serial_1_Config
   704  000654  CFDE F039          	movff	postinc2,??_Serial_1_Config+1
   705  000658  CFDE F03A          	movff	postinc2,??_Serial_1_Config+2
   706  00065C  CFDE F03B          	movff	postinc2,??_Serial_1_Config+3
   707  000660  0E06               	movlw	6
   708  000662                     u375:
   709  000662  90D8               	bcf	status,0,c
   710  000664  3638               	rlcf	??_Serial_1_Config^0,f,c
   711  000666  3639               	rlcf	(??_Serial_1_Config+1)^0,f,c
   712  000668  363A               	rlcf	(??_Serial_1_Config+2)^0,f,c
   713  00066A  363B               	rlcf	(??_Serial_1_Config+3)^0,f,c
   714  00066C  2EE8               	decfsz	wreg,f,c
   715  00066E  EF31  F003         	goto	u375
   716  000672  C038  F02D         	movff	??_Serial_1_Config,___lldiv@divisor
   717  000676  C039  F02E         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
   718  00067A  C03A  F02F         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
   719  00067E  C03B  F030         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
   720  000682  EC50  F004         	call	___lldiv	;wreg free
   721  000686  5029               	movf	?___lldiv^0,w,c
   722  000688  6E3E               	movwf	Serial_1_Config@brg8LOW^0,c
   723                           
   724                           ;src/pic18f4520/serial/serial.c: 42:     brg8HIGH = (10000000UL/(serialConfig->serial_de
      +                          sired_baud * 16));
   725  00068A  0E80               	movlw	128
   726  00068C  6E29               	movwf	___lldiv@dividend^0,c
   727  00068E  0E96               	movlw	150
   728  000690  6E2A               	movwf	(___lldiv@dividend+1)^0,c
   729  000692  0E98               	movlw	152
   730  000694  6E2B               	movwf	(___lldiv@dividend+2)^0,c
   731  000696  0E00               	movlw	0
   732  000698  6E2C               	movwf	(___lldiv@dividend+3)^0,c
   733  00069A  EE20 F003          	lfsr	2,3
   734  00069E  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   735  0006A0  26D9               	addwf	fsr2l,f,c
   736  0006A2  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   737  0006A4  22DA               	addwfc	fsr2h,f,c
   738  0006A6  CFDE F038          	movff	postinc2,??_Serial_1_Config
   739  0006AA  CFDE F039          	movff	postinc2,??_Serial_1_Config+1
   740  0006AE  CFDE F03A          	movff	postinc2,??_Serial_1_Config+2
   741  0006B2  CFDE F03B          	movff	postinc2,??_Serial_1_Config+3
   742  0006B6  0E04               	movlw	4
   743  0006B8                     u385:
   744  0006B8  90D8               	bcf	status,0,c
   745  0006BA  3638               	rlcf	??_Serial_1_Config^0,f,c
   746  0006BC  3639               	rlcf	(??_Serial_1_Config+1)^0,f,c
   747  0006BE  363A               	rlcf	(??_Serial_1_Config+2)^0,f,c
   748  0006C0  363B               	rlcf	(??_Serial_1_Config+3)^0,f,c
   749  0006C2  2EE8               	decfsz	wreg,f,c
   750  0006C4  EF5C  F003         	goto	u385
   751  0006C8  C038  F02D         	movff	??_Serial_1_Config,___lldiv@divisor
   752  0006CC  C039  F02E         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
   753  0006D0  C03A  F02F         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
   754  0006D4  C03B  F030         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
   755  0006D8  EC50  F004         	call	___lldiv	;wreg free
   756  0006DC  5029               	movf	?___lldiv^0,w,c
   757  0006DE  6E3F               	movwf	Serial_1_Config@brg8HIGH^0,c
   758                           
   759                           ;src/pic18f4520/serial/serial.c: 43:     brg16HIGH = (10000000UL/(serialConfig->serial_d
      +                          esired_baud * 4));
   760  0006E0  0E80               	movlw	128
   761  0006E2  6E29               	movwf	___lldiv@dividend^0,c
   762  0006E4  0E96               	movlw	150
   763  0006E6  6E2A               	movwf	(___lldiv@dividend+1)^0,c
   764  0006E8  0E98               	movlw	152
   765  0006EA  6E2B               	movwf	(___lldiv@dividend+2)^0,c
   766  0006EC  0E00               	movlw	0
   767  0006EE  6E2C               	movwf	(___lldiv@dividend+3)^0,c
   768  0006F0  EE20 F003          	lfsr	2,3
   769  0006F4  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   770  0006F6  26D9               	addwf	fsr2l,f,c
   771  0006F8  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   772  0006FA  22DA               	addwfc	fsr2h,f,c
   773  0006FC  CFDE F038          	movff	postinc2,??_Serial_1_Config
   774  000700  CFDE F039          	movff	postinc2,??_Serial_1_Config+1
   775  000704  CFDE F03A          	movff	postinc2,??_Serial_1_Config+2
   776  000708  CFDE F03B          	movff	postinc2,??_Serial_1_Config+3
   777  00070C  0E02               	movlw	2
   778  00070E                     u395:
   779  00070E  90D8               	bcf	status,0,c
   780  000710  3638               	rlcf	??_Serial_1_Config^0,f,c
   781  000712  3639               	rlcf	(??_Serial_1_Config+1)^0,f,c
   782  000714  363A               	rlcf	(??_Serial_1_Config+2)^0,f,c
   783  000716  363B               	rlcf	(??_Serial_1_Config+3)^0,f,c
   784  000718  2EE8               	decfsz	wreg,f,c
   785  00071A  EF87  F003         	goto	u395
   786  00071E  C038  F02D         	movff	??_Serial_1_Config,___lldiv@divisor
   787  000722  C039  F02E         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
   788  000726  C03A  F02F         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
   789  00072A  C03B  F030         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
   790  00072E  EC50  F004         	call	___lldiv	;wreg free
   791  000732  5029               	movf	?___lldiv^0,w,c
   792  000734  6E40               	movwf	Serial_1_Config@brg16HIGH^0,c
   793  000736                     
   794                           ;src/pic18f4520/serial/serial.c: 46:     error_8LOW = (10000000UL/(brg8LOW * 64)) - seri
      +                          alConfig->serial_desired_baud;
   795  000736  EE20 F003          	lfsr	2,3
   796  00073A  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   797  00073C  26D9               	addwf	fsr2l,f,c
   798  00073E  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   799  000740  22DA               	addwfc	fsr2h,f,c
   800  000742  50DF               	movf	indf2,w,c
   801  000744  6E38               	movwf	??_Serial_1_Config^0,c
   802  000746  0E80               	movlw	128
   803  000748  6E29               	movwf	___lldiv@dividend^0,c
   804  00074A  0E96               	movlw	150
   805  00074C  6E2A               	movwf	(___lldiv@dividend+1)^0,c
   806  00074E  0E98               	movlw	152
   807  000750  6E2B               	movwf	(___lldiv@dividend+2)^0,c
   808  000752  0E00               	movlw	0
   809  000754  6E2C               	movwf	(___lldiv@dividend+3)^0,c
   810  000756  503E               	movf	Serial_1_Config@brg8LOW^0,w,c
   811  000758  0D40               	mullw	64
   812  00075A  CFF3 F039          	movff	prodl,??_Serial_1_Config+1
   813  00075E  CFF4 F03A          	movff	prodh,??_Serial_1_Config+2
   814  000762  C039  F02D         	movff	??_Serial_1_Config+1,___lldiv@divisor
   815  000766  C03A  F02E         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
   816  00076A  0E00               	movlw	0
   817  00076C  BE2E               	btfsc	(___lldiv@divisor+1)^0,7,c
   818  00076E  0EFF               	movlw	-1
   819  000770  6E2F               	movwf	(___lldiv@divisor+2)^0,c
   820  000772  6E30               	movwf	(___lldiv@divisor+3)^0,c
   821  000774  EC50  F004         	call	___lldiv	;wreg free
   822  000778  5038               	movf	??_Serial_1_Config^0,w,c
   823  00077A  5C29               	subwf	?___lldiv^0,w,c
   824  00077C  6E3C               	movwf	Serial_1_Config@error_8LOW^0,c
   825  00077E                     
   826                           ;src/pic18f4520/serial/serial.c: 47:     error_8HIGH = (10000000UL/(brg8HIGH * 16)) - se
      +                          rialConfig->serial_desired_baud;
   827  00077E  EE20 F003          	lfsr	2,3
   828  000782  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   829  000784  26D9               	addwf	fsr2l,f,c
   830  000786  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   831  000788  22DA               	addwfc	fsr2h,f,c
   832  00078A  50DF               	movf	indf2,w,c
   833  00078C  6E38               	movwf	??_Serial_1_Config^0,c
   834  00078E  0E80               	movlw	128
   835  000790  6E29               	movwf	___lldiv@dividend^0,c
   836  000792  0E96               	movlw	150
   837  000794  6E2A               	movwf	(___lldiv@dividend+1)^0,c
   838  000796  0E98               	movlw	152
   839  000798  6E2B               	movwf	(___lldiv@dividend+2)^0,c
   840  00079A  0E00               	movlw	0
   841  00079C  6E2C               	movwf	(___lldiv@dividend+3)^0,c
   842  00079E  503F               	movf	Serial_1_Config@brg8HIGH^0,w,c
   843  0007A0  0D10               	mullw	16
   844  0007A2  CFF3 F039          	movff	prodl,??_Serial_1_Config+1
   845  0007A6  CFF4 F03A          	movff	prodh,??_Serial_1_Config+2
   846  0007AA  C039  F02D         	movff	??_Serial_1_Config+1,___lldiv@divisor
   847  0007AE  C03A  F02E         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
   848  0007B2  0E00               	movlw	0
   849  0007B4  BE2E               	btfsc	(___lldiv@divisor+1)^0,7,c
   850  0007B6  0EFF               	movlw	-1
   851  0007B8  6E2F               	movwf	(___lldiv@divisor+2)^0,c
   852  0007BA  6E30               	movwf	(___lldiv@divisor+3)^0,c
   853  0007BC  EC50  F004         	call	___lldiv	;wreg free
   854  0007C0  5038               	movf	??_Serial_1_Config^0,w,c
   855  0007C2  5C29               	subwf	?___lldiv^0,w,c
   856  0007C4  6E41               	movwf	Serial_1_Config@error_8HIGH^0,c
   857  0007C6                     
   858                           ;src/pic18f4520/serial/serial.c: 48:     error_16HIGH = (10000000UL/(brg16HIGH * 4)) - s
      +                          erialConfig->serial_desired_baud;
   859  0007C6  EE20 F003          	lfsr	2,3
   860  0007CA  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   861  0007CC  26D9               	addwf	fsr2l,f,c
   862  0007CE  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   863  0007D0  22DA               	addwfc	fsr2h,f,c
   864  0007D2  50DF               	movf	indf2,w,c
   865  0007D4  6E38               	movwf	??_Serial_1_Config^0,c
   866  0007D6  0E80               	movlw	128
   867  0007D8  6E29               	movwf	___lldiv@dividend^0,c
   868  0007DA  0E96               	movlw	150
   869  0007DC  6E2A               	movwf	(___lldiv@dividend+1)^0,c
   870  0007DE  0E98               	movlw	152
   871  0007E0  6E2B               	movwf	(___lldiv@dividend+2)^0,c
   872  0007E2  0E00               	movlw	0
   873  0007E4  6E2C               	movwf	(___lldiv@dividend+3)^0,c
   874  0007E6  5040               	movf	Serial_1_Config@brg16HIGH^0,w,c
   875  0007E8  0D04               	mullw	4
   876  0007EA  CFF3 F039          	movff	prodl,??_Serial_1_Config+1
   877  0007EE  CFF4 F03A          	movff	prodh,??_Serial_1_Config+2
   878  0007F2  C039  F02D         	movff	??_Serial_1_Config+1,___lldiv@divisor
   879  0007F6  C03A  F02E         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
   880  0007FA  0E00               	movlw	0
   881  0007FC  BE2E               	btfsc	(___lldiv@divisor+1)^0,7,c
   882  0007FE  0EFF               	movlw	-1
   883  000800  6E2F               	movwf	(___lldiv@divisor+2)^0,c
   884  000802  6E30               	movwf	(___lldiv@divisor+3)^0,c
   885  000804  EC50  F004         	call	___lldiv	;wreg free
   886  000808  5038               	movf	??_Serial_1_Config^0,w,c
   887  00080A  5C29               	subwf	?___lldiv^0,w,c
   888  00080C  6E3D               	movwf	Serial_1_Config@error_16HIGH^0,c
   889  00080E                     
   890                           ;src/pic18f4520/serial/serial.c: 51:     error_min = error_8LOW;
   891  00080E  C03C  F042         	movff	Serial_1_Config@error_8LOW,Serial_1_Config@error_min
   892  000812                     
   893                           ;src/pic18f4520/serial/serial.c: 53:     BAUDCONbits.BRG16 = 0x00;
   894  000812  96B8               	bcf	184,3,c	;volatile
   895  000814                     
   896                           ;src/pic18f4520/serial/serial.c: 54:     TXSTAbits.BRGH = 0x00;
   897  000814  94AC               	bcf	172,2,c	;volatile
   898  000816                     
   899                           ;src/pic18f4520/serial/serial.c: 56:     SPBRG = (brg8LOW - 1);
   900  000816  043E               	decf	Serial_1_Config@brg8LOW^0,w,c
   901  000818  6EAF               	movwf	175,c	;volatile
   902  00081A                     
   903                           ;src/pic18f4520/serial/serial.c: 58:     if(error_8HIGH < error_min)
   904  00081A  5042               	movf	Serial_1_Config@error_min^0,w,c
   905  00081C  5C41               	subwf	Serial_1_Config@error_8HIGH^0,w,c
   906  00081E  B0D8               	btfsc	status,0,c
   907  000820  EF14  F004         	goto	u401
   908  000824  EF16  F004         	goto	u400
   909  000828                     u401:
   910  000828  EF1C  F004         	goto	l273
   911  00082C                     u400:
   912  00082C                     
   913                           ;src/pic18f4520/serial/serial.c: 59:     {;src/pic18f4520/serial/serial.c: 60:         e
      +                          rror_min = error_8HIGH;
   914  00082C  C041  F042         	movff	Serial_1_Config@error_8HIGH,Serial_1_Config@error_min
   915                           
   916                           ;src/pic18f4520/serial/serial.c: 62:         BAUDCONbits.BRG16 = 0x00;
   917  000830  96B8               	bcf	184,3,c	;volatile
   918                           
   919                           ;src/pic18f4520/serial/serial.c: 63:         TXSTAbits.BRGH = 0x01;
   920  000832  84AC               	bsf	172,2,c	;volatile
   921  000834                     
   922                           ;src/pic18f4520/serial/serial.c: 65:         SPBRG = (brg8HIGH - 1);
   923  000834  043F               	decf	Serial_1_Config@brg8HIGH^0,w,c
   924  000836  6EAF               	movwf	175,c	;volatile
   925  000838                     l273:
   926                           
   927                           ;src/pic18f4520/serial/serial.c: 67:     if(error_16HIGH < error_min)
   928  000838  5042               	movf	Serial_1_Config@error_min^0,w,c
   929  00083A  5C3D               	subwf	Serial_1_Config@error_16HIGH^0,w,c
   930  00083C  B0D8               	btfsc	status,0,c
   931  00083E  EF23  F004         	goto	u411
   932  000842  EF25  F004         	goto	u410
   933  000846                     u411:
   934  000846  EF29  F004         	goto	l1508
   935  00084A                     u410:
   936  00084A                     
   937                           ;src/pic18f4520/serial/serial.c: 68:     {;src/pic18f4520/serial/serial.c: 69:         B
      +                          AUDCONbits.BRG16 = 0x01;
   938  00084A  86B8               	bsf	184,3,c	;volatile
   939                           
   940                           ;src/pic18f4520/serial/serial.c: 70:         TXSTAbits.BRGH = 0x01;
   941  00084C  84AC               	bsf	172,2,c	;volatile
   942  00084E                     
   943                           ;src/pic18f4520/serial/serial.c: 72:         SPBRG = (brg16HIGH - 1);
   944  00084E  0440               	decf	Serial_1_Config@brg16HIGH^0,w,c
   945  000850  6EAF               	movwf	175,c	;volatile
   946  000852                     l1508:
   947                           
   948                           ;src/pic18f4520/serial/serial.c: 80:     TXSTAbits.SYNC = serialConfig->serial_op_mode;
   949  000852  EE20 F002          	lfsr	2,2
   950  000856  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   951  000858  26D9               	addwf	fsr2l,f,c
   952  00085A  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   953  00085C  22DA               	addwfc	fsr2h,f,c
   954  00085E  50DF               	movf	indf2,w,c
   955  000860  6E38               	movwf	??_Serial_1_Config^0,c
   956  000862  3A38               	swapf	??_Serial_1_Config^0,f,c
   957  000864  50AC               	movf	172,w,c	;volatile
   958  000866  1838               	xorwf	??_Serial_1_Config^0,w,c
   959  000868  0BEF               	andlw	-17
   960  00086A  1838               	xorwf	??_Serial_1_Config^0,w,c
   961  00086C  6EAC               	movwf	172,c	;volatile
   962  00086E                     
   963                           ;src/pic18f4520/serial/serial.c: 86:     RCSTAbits.SPEN = 0x01;
   964  00086E  8EAB               	bsf	171,7,c	;volatile
   965  000870                     
   966                           ;src/pic18f4520/serial/serial.c: 100:     if(serialConfig->serial_data_length == SERIAL_
      +                          DATA_LENGTH_9)
   967  000870  EE20 F001          	lfsr	2,1
   968  000874  5036               	movf	Serial_1_Config@serialConfig^0,w,c
   969  000876  26D9               	addwf	fsr2l,f,c
   970  000878  5037               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   971  00087A  22DA               	addwfc	fsr2h,f,c
   972  00087C  04DE               	decf	postinc2,w,c
   973  00087E  A4D8               	btfss	status,2,c
   974  000880  EF44  F004         	goto	u421
   975  000884  EF46  F004         	goto	u420
   976  000888                     u421:
   977  000888  EF4A  F004         	goto	l275
   978  00088C                     u420:
   979  00088C                     
   980                           ;src/pic18f4520/serial/serial.c: 101:     {;src/pic18f4520/serial/serial.c: 102:        
      +                           TXSTAbits.TX9 = 0x01;
   981  00088C  8CAC               	bsf	172,6,c	;volatile
   982                           
   983                           ;src/pic18f4520/serial/serial.c: 103:         RCSTAbits.RC9 = 0x01;
   984  00088E  8CAB               	bsf	171,6,c	;volatile
   985                           
   986                           ;src/pic18f4520/serial/serial.c: 104:     }else
   987  000890  EF4C  F004         	goto	l276
   988  000894                     l275:
   989                           
   990                           ;src/pic18f4520/serial/serial.c: 105:     {;src/pic18f4520/serial/serial.c: 106:        
      +                           TXSTAbits.TX9 = 0x00;
   991  000894  9CAC               	bcf	172,6,c	;volatile
   992                           
   993                           ;src/pic18f4520/serial/serial.c: 107:         RCSTAbits.RC9 = 0x00;
   994  000896  9CAB               	bcf	171,6,c	;volatile
   995  000898                     l276:
   996                           
   997                           ;src/pic18f4520/serial/serial.c: 123:     TXSTAbits.TXEN = 0x01;
   998  000898  8AAC               	bsf	172,5,c	;volatile
   999                           
  1000                           ;src/pic18f4520/serial/serial.c: 124:     RCSTAbits.CREN = 0x01;
  1001  00089A  88AB               	bsf	171,4,c	;volatile
  1002                           
  1003                           ;src/pic18f4520/serial/serial.c: 126:     PIE1bits.RCIE = 0x01;
  1004  00089C  8A9D               	bsf	157,5,c	;volatile
  1005  00089E  0012               	return		;funcret
  1006  0008A0                     __end_of_Serial_1_Config:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function ___lldiv *****************
  1010 ;; Defined at:
  1011 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  dividend        4    2[COMRAM] unsigned long 
  1014 ;;  divisor         4    6[COMRAM] unsigned long 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  quotient        4   10[COMRAM] unsigned long 
  1017 ;;  counter         1   14[COMRAM] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  4    2[COMRAM] unsigned long 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1027 ;;      Params:         8       0       0       0       0       0       0
  1028 ;;      Locals:         5       0       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0
  1030 ;;      Totals:        13       0       0       0       0       0       0
  1031 ;;Total ram usage:       13 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; Hardware stack levels required when called: 2
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_Serial_1_Config
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text3
  1042  0008A0                     __ptext3:
  1043                           	callstack 0
  1044  0008A0                     ___lldiv:
  1045                           	callstack 27
  1046  0008A0  0E00               	movlw	0
  1047  0008A2  6E31               	movwf	___lldiv@quotient^0,c
  1048  0008A4  0E00               	movlw	0
  1049  0008A6  6E32               	movwf	(___lldiv@quotient+1)^0,c
  1050  0008A8  0E00               	movlw	0
  1051  0008AA  6E33               	movwf	(___lldiv@quotient+2)^0,c
  1052  0008AC  0E00               	movlw	0
  1053  0008AE  6E34               	movwf	(___lldiv@quotient+3)^0,c
  1054  0008B0  502D               	movf	___lldiv@divisor^0,w,c
  1055  0008B2  102E               	iorwf	(___lldiv@divisor+1)^0,w,c
  1056  0008B4  102F               	iorwf	(___lldiv@divisor+2)^0,w,c
  1057  0008B6  1030               	iorwf	(___lldiv@divisor+3)^0,w,c
  1058  0008B8  B4D8               	btfsc	status,2,c
  1059  0008BA  EF61  F004         	goto	u331
  1060  0008BE  EF63  F004         	goto	u330
  1061  0008C2                     u331:
  1062  0008C2  EF99  F004         	goto	l359
  1063  0008C6                     u330:
  1064  0008C6  0E01               	movlw	1
  1065  0008C8  6E35               	movwf	___lldiv@counter^0,c
  1066  0008CA  EF6D  F004         	goto	l1464
  1067  0008CE                     l1462:
  1068  0008CE  90D8               	bcf	status,0,c
  1069  0008D0  362D               	rlcf	___lldiv@divisor^0,f,c
  1070  0008D2  362E               	rlcf	(___lldiv@divisor+1)^0,f,c
  1071  0008D4  362F               	rlcf	(___lldiv@divisor+2)^0,f,c
  1072  0008D6  3630               	rlcf	(___lldiv@divisor+3)^0,f,c
  1073  0008D8  2A35               	incf	___lldiv@counter^0,f,c
  1074  0008DA                     l1464:
  1075  0008DA  AE30               	btfss	(___lldiv@divisor+3)^0,7,c
  1076  0008DC  EF72  F004         	goto	u341
  1077  0008E0  EF74  F004         	goto	u340
  1078  0008E4                     u341:
  1079  0008E4  EF67  F004         	goto	l1462
  1080  0008E8                     u340:
  1081  0008E8                     l1466:
  1082  0008E8  90D8               	bcf	status,0,c
  1083  0008EA  3631               	rlcf	___lldiv@quotient^0,f,c
  1084  0008EC  3632               	rlcf	(___lldiv@quotient+1)^0,f,c
  1085  0008EE  3633               	rlcf	(___lldiv@quotient+2)^0,f,c
  1086  0008F0  3634               	rlcf	(___lldiv@quotient+3)^0,f,c
  1087  0008F2  502D               	movf	___lldiv@divisor^0,w,c
  1088  0008F4  5C29               	subwf	___lldiv@dividend^0,w,c
  1089  0008F6  502E               	movf	(___lldiv@divisor+1)^0,w,c
  1090  0008F8  582A               	subwfb	(___lldiv@dividend+1)^0,w,c
  1091  0008FA  502F               	movf	(___lldiv@divisor+2)^0,w,c
  1092  0008FC  582B               	subwfb	(___lldiv@dividend+2)^0,w,c
  1093  0008FE  5030               	movf	(___lldiv@divisor+3)^0,w,c
  1094  000900  582C               	subwfb	(___lldiv@dividend+3)^0,w,c
  1095  000902  A0D8               	btfss	status,0,c
  1096  000904  EF86  F004         	goto	u351
  1097  000908  EF88  F004         	goto	u350
  1098  00090C                     u351:
  1099  00090C  EF91  F004         	goto	l1474
  1100  000910                     u350:
  1101  000910  502D               	movf	___lldiv@divisor^0,w,c
  1102  000912  5E29               	subwf	___lldiv@dividend^0,f,c
  1103  000914  502E               	movf	(___lldiv@divisor+1)^0,w,c
  1104  000916  5A2A               	subwfb	(___lldiv@dividend+1)^0,f,c
  1105  000918  502F               	movf	(___lldiv@divisor+2)^0,w,c
  1106  00091A  5A2B               	subwfb	(___lldiv@dividend+2)^0,f,c
  1107  00091C  5030               	movf	(___lldiv@divisor+3)^0,w,c
  1108  00091E  5A2C               	subwfb	(___lldiv@dividend+3)^0,f,c
  1109  000920  8031               	bsf	___lldiv@quotient^0,0,c
  1110  000922                     l1474:
  1111  000922  90D8               	bcf	status,0,c
  1112  000924  3230               	rrcf	(___lldiv@divisor+3)^0,f,c
  1113  000926  322F               	rrcf	(___lldiv@divisor+2)^0,f,c
  1114  000928  322E               	rrcf	(___lldiv@divisor+1)^0,f,c
  1115  00092A  322D               	rrcf	___lldiv@divisor^0,f,c
  1116  00092C  2E35               	decfsz	___lldiv@counter^0,f,c
  1117  00092E  EF74  F004         	goto	l1466
  1118  000932                     l359:
  1119  000932  C031  F029         	movff	___lldiv@quotient,?___lldiv
  1120  000936  C032  F02A         	movff	___lldiv@quotient+1,?___lldiv+1
  1121  00093A  C033  F02B         	movff	___lldiv@quotient+2,?___lldiv+2
  1122  00093E  C034  F02C         	movff	___lldiv@quotient+3,?___lldiv+3
  1123  000942  0012               	return		;funcret
  1124  000944                     __end_of___lldiv:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _DisplayLCD_Init *****************
  1128 ;; Defined at:
  1129 ;;		line 10 in file "src/app/display_lcd/display_lcd.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0
  1145 ;;      Temps:          1       0       0       0       0       0       0
  1146 ;;      Totals:         1       0       0       0       0       0       0
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 4
  1150 ;; This function calls:
  1151 ;;		_Display_SendByte
  1152 ;;		_Display_WriteString
  1153 ;;		_sendNibble
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;;		_StartSystem
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text4
  1161  0009E4                     __ptext4:
  1162                           	callstack 0
  1163  0009E4                     _DisplayLCD_Init:
  1164                           	callstack 26
  1165  0009E4                     
  1166                           ;src/app/display_lcd/display_lcd.c: 13:     _delay((unsigned long)((20)*(10000000UL/4000
      +                          .0)));
  1167  0009E4  0E41               	movlw	65
  1168  0009E6  6E38               	movwf	??_DisplayLCD_Init^0,c
  1169  0009E8  0EEE               	movlw	238
  1170  0009EA                     u547:
  1171  0009EA  2EE8               	decfsz	wreg,f,c
  1172  0009EC  D7FE               	bra	u547
  1173  0009EE  2E38               	decfsz	??_DisplayLCD_Init^0,f,c
  1174  0009F0  D7FC               	bra	u547
  1175  0009F2  D000               	nop2	
  1176  0009F4                     
  1177                           ;src/app/display_lcd/display_lcd.c: 16:     TRISB = 0x00;;
  1178  0009F4  0E00               	movlw	0
  1179  0009F6  6E93               	movwf	147,c	;volatile
  1180  0009F8                     
  1181                           ;src/app/display_lcd/display_lcd.c: 19:     sendNibble(0x20);
  1182  0009F8  0E20               	movlw	32
  1183  0009FA  EC48  F006         	call	_sendNibble
  1184  0009FE                     
  1185                           ;src/app/display_lcd/display_lcd.c: 20:     sendNibble(0x20);
  1186  0009FE  0E20               	movlw	32
  1187  000A00  EC48  F006         	call	_sendNibble
  1188  000A04                     
  1189                           ;src/app/display_lcd/display_lcd.c: 21:     sendNibble(0x30);
  1190  000A04  0E30               	movlw	48
  1191  000A06  EC48  F006         	call	_sendNibble
  1192  000A0A                     
  1193                           ;src/app/display_lcd/display_lcd.c: 24:     Display_SendByte((0b00100000 | 0b00000000 | 
      +                          0b00001000 | 0b00000100), 0);
  1194  000A0A  0E00               	movlw	0
  1195  000A0C  6E29               	movwf	Display_SendByte@comm^0,c
  1196  000A0E  0E2C               	movlw	44
  1197  000A10  EC35  F005         	call	_Display_SendByte
  1198  000A14                     
  1199                           ;src/app/display_lcd/display_lcd.c: 27:     Display_SendByte((0b00000100 | 0b00000010 | 
      +                          0b00000000), 0);
  1200  000A14  0E00               	movlw	0
  1201  000A16  6E29               	movwf	Display_SendByte@comm^0,c
  1202  000A18  0E06               	movlw	6
  1203  000A1A  EC35  F005         	call	_Display_SendByte
  1204  000A1E                     
  1205                           ;src/app/display_lcd/display_lcd.c: 31:     Display_SendByte((0b00001000 | 0b00000100 | 
      +                          0b00000010 | 0b00000001 ), 0);
  1206  000A1E  0E00               	movlw	0
  1207  000A20  6E29               	movwf	Display_SendByte@comm^0,c
  1208  000A22  0E0F               	movlw	15
  1209  000A24  EC35  F005         	call	_Display_SendByte
  1210  000A28                     
  1211                           ;src/app/display_lcd/display_lcd.c: 34:     Display_SendByte(0b00000001, 0);
  1212  000A28  0E00               	movlw	0
  1213  000A2A  6E29               	movwf	Display_SendByte@comm^0,c
  1214  000A2C  0E01               	movlw	1
  1215  000A2E  EC35  F005         	call	_Display_SendByte
  1216  000A32                     
  1217                           ;src/app/display_lcd/display_lcd.c: 35:    _delay((unsigned long)((2)*(10000000UL/4000.0
      +                          )));
  1218  000A32  0E07               	movlw	7
  1219  000A34  6E38               	movwf	??_DisplayLCD_Init^0,c
  1220  000A36  0E7D               	movlw	125
  1221  000A38                     u557:
  1222  000A38  2EE8               	decfsz	wreg,f,c
  1223  000A3A  D7FE               	bra	u557
  1224  000A3C  2E38               	decfsz	??_DisplayLCD_Init^0,f,c
  1225  000A3E  D7FC               	bra	u557
  1226  000A40  F000               	nop	
  1227  000A42                     
  1228                           ;src/app/display_lcd/display_lcd.c: 38:    Display_SendByte((0b10000000 | 0b01000000), 0
      +                          );
  1229  000A42  0E00               	movlw	0
  1230  000A44  6E29               	movwf	Display_SendByte@comm^0,c
  1231  000A46  0EC0               	movlw	192
  1232  000A48  EC35  F005         	call	_Display_SendByte
  1233  000A4C                     
  1234                           ;src/app/display_lcd/display_lcd.c: 39:    _delay((unsigned long)((50)*(10000000UL/40000
      +                          00.0)));
  1235  000A4C  0E29               	movlw	41
  1236  000A4E                     u567:
  1237  000A4E  2EE8               	decfsz	wreg,f,c
  1238  000A50  D7FE               	bra	u567
  1239  000A52  D000               	nop2	
  1240  000A54                     
  1241                           ;src/app/display_lcd/display_lcd.c: 42:    Display_WriteString("NATAN MARQUES", sizeof("
      +                          NATAN MARQUES"), 0x40);
  1242  000A54  0E11               	movlw	low STR_11
  1243  000A56  6E2C               	movwf	Display_WriteString@string^0,c
  1244  000A58  0E06               	movlw	high STR_11
  1245  000A5A  6E2D               	movwf	(Display_WriteString@string+1)^0,c
  1246  000A5C  0E0E               	movlw	14
  1247  000A5E  6E2E               	movwf	Display_WriteString@length^0,c
  1248  000A60  0E40               	movlw	64
  1249  000A62  6E2F               	movwf	Display_WriteString@address^0,c
  1250  000A64  ECA9  F005         	call	_Display_WriteString	;wreg free
  1251  000A68  0012               	return		;funcret
  1252  000A6A                     __end_of_DisplayLCD_Init:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _sendNibble *****************
  1256 ;; Defined at:
  1257 ;;		line 46 in file "src/app/display_lcd/display_lcd.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  nibble          1    wreg     unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  nibble          1    3[COMRAM] unsigned char 
  1262 ;;  auxNibble       1    0        unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         0       0       0       0       0       0       0
  1273 ;;      Locals:         1       0       0       0       0       0       0
  1274 ;;      Temps:          1       0       0       0       0       0       0
  1275 ;;      Totals:         2       0       0       0       0       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_DisplayLCD_Init
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text5
  1287  000C90                     __ptext5:
  1288                           	callstack 0
  1289  000C90                     _sendNibble:
  1290                           	callstack 27
  1291                           
  1292                           ;incstack = 0
  1293                           ;sendNibble@nibble stored from wreg
  1294  000C90  6E2A               	movwf	sendNibble@nibble^0,c
  1295  000C92  5081               	movf	129,w,c	;volatile
  1296  000C94  0BF7               	andlw	247
  1297  000C96  6E8A               	movwf	138,c	;volatile
  1298  000C98                     
  1299                           ;src/app/display_lcd/display_lcd.c: 53:     if(0x01 == 0x01) LATB = (PORTB | (1 << 2)); 
      +                          else LATB = (PORTB & ~((1 << 2)));;
  1300  000C98  5081               	movf	129,w,c	;volatile
  1301  000C9A  0B0F               	andlw	15
  1302  000C9C  102A               	iorwf	sendNibble@nibble^0,w,c
  1303  000C9E  6E8A               	movwf	138,c	;volatile
  1304  000CA0  5081               	movf	129,w,c	;volatile
  1305  000CA2  0904               	iorlw	4
  1306  000CA4  6E8A               	movwf	138,c	;volatile
  1307  000CA6                     
  1308                           ;src/app/display_lcd/display_lcd.c: 54:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1309  000CA6  0E53               	movlw	83
  1310  000CA8                     u577:
  1311  000CA8  2EE8               	decfsz	wreg,f,c
  1312  000CAA  D7FE               	bra	u577
  1313  000CAC  F000               	nop	
  1314  000CAE  5081               	movf	129,w,c	;volatile
  1315  000CB0  0BFB               	andlw	251
  1316  000CB2  6E8A               	movwf	138,c	;volatile
  1317  000CB4                     
  1318                           ;src/app/display_lcd/display_lcd.c: 57:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  1319  000CB4  0E04               	movlw	4
  1320  000CB6  6E29               	movwf	??_sendNibble^0,c
  1321  000CB8  0E3E               	movlw	62
  1322  000CBA                     u587:
  1323  000CBA  2EE8               	decfsz	wreg,f,c
  1324  000CBC  D7FE               	bra	u587
  1325  000CBE  2E29               	decfsz	??_sendNibble^0,f,c
  1326  000CC0  D7FC               	bra	u587
  1327  000CC2  0012               	return		;funcret
  1328  000CC4                     __end_of_sendNibble:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _Display_WriteString *****************
  1332 ;; Defined at:
  1333 ;;		line 112 in file "src/app/display_lcd/display_lcd.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  string          2    5[COMRAM] PTR unsigned char 
  1336 ;;		 -> STR_12(16), STR_11(14), 
  1337 ;;  length          1    7[COMRAM] unsigned char 
  1338 ;;  address         1    8[COMRAM] unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  auxLength       1   16[COMRAM] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         4       0       0       0       0       0       0
  1351 ;;      Locals:         1       0       0       0       0       0       0
  1352 ;;      Temps:          7       0       0       0       0       0       0
  1353 ;;      Totals:        12       0       0       0       0       0       0
  1354 ;;Total ram usage:       12 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 3
  1357 ;; This function calls:
  1358 ;;		_Display_WriteByte
  1359 ;; This function is called by:
  1360 ;;		_DisplayLCD_Init
  1361 ;;		_StartSystem
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text6
  1366  000B52                     __ptext6:
  1367                           	callstack 0
  1368  000B52                     _Display_WriteString:
  1369                           	callstack 26
  1370  000B52                     
  1371                           ;src/app/display_lcd/display_lcd.c: 112: void Display_WriteString(char* string, uint8_t 
      +                          length, uint8_t address);src/app/display_lcd/display_lcd.c: 113: {;src/app/display_lcd/d
      +                          isplay_lcd.c: 114:     uint8_t auxLength = 0x00;
  1372  000B52  0E00               	movlw	0
  1373  000B54  6E37               	movwf	Display_WriteString@auxLength^0,c
  1374                           
  1375                           ;src/app/display_lcd/display_lcd.c: 117:     for(auxLength = 0; auxLength < length - 1; 
      +                          auxLength++)
  1376  000B56  0E00               	movlw	0
  1377  000B58  6E37               	movwf	Display_WriteString@auxLength^0,c
  1378  000B5A  EFBE  F005         	goto	l1454
  1379  000B5E                     l1450:
  1380                           
  1381                           ;src/app/display_lcd/display_lcd.c: 118:     {;src/app/display_lcd/display_lcd.c: 119:  
      +                                 Display_WriteByte((uint8_t)string[auxLength]);
  1382  000B5E  5037               	movf	Display_WriteString@auxLength^0,w,c
  1383  000B60  242C               	addwf	Display_WriteString@string^0,w,c
  1384  000B62  6E30               	movwf	??_Display_WriteString^0,c
  1385  000B64  0E00               	movlw	0
  1386  000B66  202D               	addwfc	(Display_WriteString@string+1)^0,w,c
  1387  000B68  6E31               	movwf	(??_Display_WriteString+1)^0,c
  1388  000B6A  C030  FFF6         	movff	??_Display_WriteString,tblptrl
  1389  000B6E  C031  FFF7         	movff	??_Display_WriteString+1,tblptrh
  1390  000B72                     	if	0	;tblptru may be non-zero
  1391  000B72                     	endif
  1392  000B72                     	if	0	;tblptru may be non-zero
  1393  000B72                     	endif
  1394  000B72  0008               	tblrd		*
  1395  000B74  50F5               	movf	tablat,w,c
  1396  000B76  EC74  F005         	call	_Display_WriteByte
  1397  000B7A                     
  1398                           ;src/app/display_lcd/display_lcd.c: 120:     }
  1399  000B7A  2A37               	incf	Display_WriteString@auxLength^0,f,c
  1400  000B7C                     l1454:
  1401  000B7C  0EFF               	movlw	255
  1402  000B7E  6E30               	movwf	??_Display_WriteString^0,c
  1403  000B80  0EFF               	movlw	255
  1404  000B82  6E31               	movwf	(??_Display_WriteString+1)^0,c
  1405  000B84  502E               	movf	Display_WriteString@length^0,w,c
  1406  000B86  6E32               	movwf	(??_Display_WriteString+2)^0,c
  1407  000B88  6A33               	clrf	(??_Display_WriteString+3)^0,c
  1408  000B8A  5030               	movf	??_Display_WriteString^0,w,c
  1409  000B8C  2632               	addwf	(??_Display_WriteString+2)^0,f,c
  1410  000B8E  5031               	movf	(??_Display_WriteString+1)^0,w,c
  1411  000B90  2233               	addwfc	(??_Display_WriteString+3)^0,f,c
  1412  000B92  5037               	movf	Display_WriteString@auxLength^0,w,c
  1413  000B94  6E34               	movwf	(??_Display_WriteString+4)^0,c
  1414  000B96  6A35               	clrf	(??_Display_WriteString+5)^0,c
  1415  000B98  5032               	movf	(??_Display_WriteString+2)^0,w,c
  1416  000B9A  5C34               	subwf	(??_Display_WriteString+4)^0,w,c
  1417  000B9C  5035               	movf	(??_Display_WriteString+5)^0,w,c
  1418  000B9E  0A80               	xorlw	128
  1419  000BA0  6E36               	movwf	(??_Display_WriteString+6)^0,c
  1420  000BA2  5033               	movf	(??_Display_WriteString+3)^0,w,c
  1421  000BA4  0A80               	xorlw	128
  1422  000BA6  5836               	subwfb	(??_Display_WriteString+6)^0,w,c
  1423  000BA8  A0D8               	btfss	status,0,c
  1424  000BAA  EFD9  F005         	goto	u321
  1425  000BAE  EFDB  F005         	goto	u320
  1426  000BB2                     u321:
  1427  000BB2  EFAF  F005         	goto	l1450
  1428  000BB6                     u320:
  1429  000BB6  0012               	return		;funcret
  1430  000BB8                     __end_of_Display_WriteString:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _Display_WriteByte *****************
  1434 ;; Defined at:
  1435 ;;		line 87 in file "src/app/display_lcd/display_lcd.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  byte            1    wreg     unsigned char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  byte            1    3[COMRAM] unsigned char 
  1440 ;;  auxByte         1    4[COMRAM] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1450 ;;      Params:         0       0       0       0       0       0       0
  1451 ;;      Locals:         2       0       0       0       0       0       0
  1452 ;;      Temps:          1       0       0       0       0       0       0
  1453 ;;      Totals:         3       0       0       0       0       0       0
  1454 ;;Total ram usage:        3 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 2
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_Display_WriteString
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text7
  1465  000AE8                     __ptext7:
  1466                           	callstack 0
  1467  000AE8                     _Display_WriteByte:
  1468                           	callstack 26
  1469                           
  1470                           ;incstack = 0
  1471                           ;Display_WriteByte@byte stored from wreg
  1472  000AE8  6E2A               	movwf	Display_WriteByte@byte^0,c
  1473  000AEA  5081               	movf	129,w,c	;volatile
  1474  000AEC  0908               	iorlw	8
  1475  000AEE  6E8A               	movwf	138,c	;volatile
  1476  000AF0                     
  1477                           ;src/app/display_lcd/display_lcd.c: 92:     auxByte = (byte & 0xF0);
  1478  000AF0  502A               	movf	Display_WriteByte@byte^0,w,c
  1479  000AF2  0BF0               	andlw	240
  1480  000AF4  6E2B               	movwf	Display_WriteByte@auxByte^0,c
  1481                           
  1482                           ;src/app/display_lcd/display_lcd.c: 93:     LATB = ((PORTB & 0x0F) | auxByte);;
  1483  000AF6  5081               	movf	129,w,c	;volatile
  1484  000AF8  0B0F               	andlw	15
  1485  000AFA  102B               	iorwf	Display_WriteByte@auxByte^0,w,c
  1486  000AFC  6E8A               	movwf	138,c	;volatile
  1487  000AFE  5081               	movf	129,w,c	;volatile
  1488  000B00  0BFB               	andlw	251
  1489  000B02  6E8A               	movwf	138,c	;volatile
  1490  000B04  5081               	movf	129,w,c	;volatile
  1491  000B06  0904               	iorlw	4
  1492  000B08  6E8A               	movwf	138,c	;volatile
  1493  000B0A                     
  1494                           ;src/app/display_lcd/display_lcd.c: 97:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1495  000B0A  0E53               	movlw	83
  1496  000B0C                     u597:
  1497  000B0C  2EE8               	decfsz	wreg,f,c
  1498  000B0E  D7FE               	bra	u597
  1499  000B10  F000               	nop	
  1500  000B12  5081               	movf	129,w,c	;volatile
  1501  000B14  0BFB               	andlw	251
  1502  000B16  6E8A               	movwf	138,c	;volatile
  1503  000B18                     
  1504                           ;src/app/display_lcd/display_lcd.c: 101:     auxByte = (byte << 0x04);
  1505  000B18  382A               	swapf	Display_WriteByte@byte^0,w,c
  1506  000B1A  0BF0               	andlw	240
  1507  000B1C  6E2B               	movwf	Display_WriteByte@auxByte^0,c
  1508                           
  1509                           ;src/app/display_lcd/display_lcd.c: 102:     LATB = ((PORTB & 0x0F) | auxByte);;
  1510  000B1E  5081               	movf	129,w,c	;volatile
  1511  000B20  0B0F               	andlw	15
  1512  000B22  102B               	iorwf	Display_WriteByte@auxByte^0,w,c
  1513  000B24  6E8A               	movwf	138,c	;volatile
  1514  000B26  5081               	movf	129,w,c	;volatile
  1515  000B28  0BFB               	andlw	251
  1516  000B2A  6E8A               	movwf	138,c	;volatile
  1517  000B2C  5081               	movf	129,w,c	;volatile
  1518  000B2E  0904               	iorlw	4
  1519  000B30  6E8A               	movwf	138,c	;volatile
  1520  000B32                     
  1521                           ;src/app/display_lcd/display_lcd.c: 106:     _delay((unsigned long)((100)*(10000000UL/40
      +                          00000.0)));
  1522  000B32  0E53               	movlw	83
  1523  000B34                     u607:
  1524  000B34  2EE8               	decfsz	wreg,f,c
  1525  000B36  D7FE               	bra	u607
  1526  000B38  F000               	nop	
  1527  000B3A  5081               	movf	129,w,c	;volatile
  1528  000B3C  0BFB               	andlw	251
  1529  000B3E  6E8A               	movwf	138,c	;volatile
  1530  000B40                     
  1531                           ;src/app/display_lcd/display_lcd.c: 109:     _delay((unsigned long)((2)*(10000000UL/4000
      +                          .0)));
  1532  000B40  0E07               	movlw	7
  1533  000B42  6E29               	movwf	??_Display_WriteByte^0,c
  1534  000B44  0E7D               	movlw	125
  1535  000B46                     u617:
  1536  000B46  2EE8               	decfsz	wreg,f,c
  1537  000B48  D7FE               	bra	u617
  1538  000B4A  2E29               	decfsz	??_Display_WriteByte^0,f,c
  1539  000B4C  D7FC               	bra	u617
  1540  000B4E  F000               	nop	
  1541  000B50  0012               	return		;funcret
  1542  000B52                     __end_of_Display_WriteByte:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _Display_SendByte *****************
  1546 ;; Defined at:
  1547 ;;		line 60 in file "src/app/display_lcd/display_lcd.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  byte            1    wreg     unsigned char 
  1550 ;;  comm            1    2[COMRAM] unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  byte            1    4[COMRAM] unsigned char 
  1553 ;;  auxByte         1    5[COMRAM] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1563 ;;      Params:         1       0       0       0       0       0       0
  1564 ;;      Locals:         2       0       0       0       0       0       0
  1565 ;;      Temps:          1       0       0       0       0       0       0
  1566 ;;      Totals:         4       0       0       0       0       0       0
  1567 ;;Total ram usage:        4 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 2
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_DisplayLCD_Init
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text8
  1578  000A6A                     __ptext8:
  1579                           	callstack 0
  1580  000A6A                     _Display_SendByte:
  1581                           	callstack 27
  1582                           
  1583                           ;incstack = 0
  1584                           ;Display_SendByte@byte stored from wreg
  1585  000A6A  6E2B               	movwf	Display_SendByte@byte^0,c
  1586  000A6C                     
  1587                           ;src/app/display_lcd/display_lcd.c: 64:     if(comm == 0x01) LATB = (PORTB | (1 << 3)); 
      +                          else LATB = (PORTB & ~((1 << 3)));;
  1588  000A6C  0429               	decf	Display_SendByte@comm^0,w,c
  1589  000A6E  A4D8               	btfss	status,2,c
  1590  000A70  EF3C  F005         	goto	u311
  1591  000A74  EF3E  F005         	goto	u310
  1592  000A78                     u311:
  1593  000A78  EF43  F005         	goto	l1418
  1594  000A7C                     u310:
  1595  000A7C  5081               	movf	129,w,c	;volatile
  1596  000A7E  0908               	iorlw	8
  1597  000A80  6E8A               	movwf	138,c	;volatile
  1598  000A82  EF46  F005         	goto	l165
  1599  000A86                     l1418:
  1600  000A86  5081               	movf	129,w,c	;volatile
  1601  000A88  0BF7               	andlw	247
  1602  000A8A  6E8A               	movwf	138,c	;volatile
  1603  000A8C                     l165:
  1604                           
  1605                           ;src/app/display_lcd/display_lcd.c: 66:     auxByte = (byte & 0xF0);
  1606  000A8C  502B               	movf	Display_SendByte@byte^0,w,c
  1607  000A8E  0BF0               	andlw	240
  1608  000A90  6E2C               	movwf	Display_SendByte@auxByte^0,c
  1609                           
  1610                           ;src/app/display_lcd/display_lcd.c: 68:     LATB = ((PORTB & 0x0F) | auxByte);;
  1611  000A92  5081               	movf	129,w,c	;volatile
  1612  000A94  0B0F               	andlw	15
  1613  000A96  102C               	iorwf	Display_SendByte@auxByte^0,w,c
  1614  000A98  6E8A               	movwf	138,c	;volatile
  1615  000A9A  5081               	movf	129,w,c	;volatile
  1616  000A9C  0BFB               	andlw	251
  1617  000A9E  6E8A               	movwf	138,c	;volatile
  1618  000AA0  5081               	movf	129,w,c	;volatile
  1619  000AA2  0904               	iorlw	4
  1620  000AA4  6E8A               	movwf	138,c	;volatile
  1621  000AA6                     
  1622                           ;src/app/display_lcd/display_lcd.c: 72:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1623  000AA6  0E53               	movlw	83
  1624  000AA8                     u627:
  1625  000AA8  2EE8               	decfsz	wreg,f,c
  1626  000AAA  D7FE               	bra	u627
  1627  000AAC  F000               	nop	
  1628  000AAE  5081               	movf	129,w,c	;volatile
  1629  000AB0  0BFB               	andlw	251
  1630  000AB2  6E8A               	movwf	138,c	;volatile
  1631  000AB4                     
  1632                           ;src/app/display_lcd/display_lcd.c: 75:     auxByte = (byte << 0x04);
  1633  000AB4  382B               	swapf	Display_SendByte@byte^0,w,c
  1634  000AB6  0BF0               	andlw	240
  1635  000AB8  6E2C               	movwf	Display_SendByte@auxByte^0,c
  1636  000ABA                     
  1637                           ;src/app/display_lcd/display_lcd.c: 77:     LATB = auxByte;;
  1638  000ABA  C02C  FF8A         	movff	Display_SendByte@auxByte,3978	;volatile
  1639  000ABE  5081               	movf	129,w,c	;volatile
  1640  000AC0  0BFB               	andlw	251
  1641  000AC2  6E8A               	movwf	138,c	;volatile
  1642  000AC4  5081               	movf	129,w,c	;volatile
  1643  000AC6  0904               	iorlw	4
  1644  000AC8  6E8A               	movwf	138,c	;volatile
  1645  000ACA                     
  1646                           ;src/app/display_lcd/display_lcd.c: 81:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1647  000ACA  0E53               	movlw	83
  1648  000ACC                     u637:
  1649  000ACC  2EE8               	decfsz	wreg,f,c
  1650  000ACE  D7FE               	bra	u637
  1651  000AD0  F000               	nop	
  1652  000AD2  5081               	movf	129,w,c	;volatile
  1653  000AD4  0BFB               	andlw	251
  1654  000AD6  6E8A               	movwf	138,c	;volatile
  1655  000AD8                     
  1656                           ;src/app/display_lcd/display_lcd.c: 84:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  1657  000AD8  0E04               	movlw	4
  1658  000ADA  6E2A               	movwf	??_Display_SendByte^0,c
  1659  000ADC  0E3E               	movlw	62
  1660  000ADE                     u647:
  1661  000ADE  2EE8               	decfsz	wreg,f,c
  1662  000AE0  D7FE               	bra	u647
  1663  000AE2  2E2A               	decfsz	??_Display_SendByte^0,f,c
  1664  000AE4  D7FC               	bra	u647
  1665  000AE6  0012               	return		;funcret
  1666  000AE8                     __end_of_Display_SendByte:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _TC0INT *****************
  1670 ;; Defined at:
  1671 ;;		line 43 in file "src/main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         0       0       0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 1
  1692 ;; This function calls:
  1693 ;;		_Serial_Transmit
  1694 ;;		_tickHook_Execute
  1695 ;; This function is called by:
  1696 ;;		Interrupt level 2
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	intcode
  1701  000008                     __pintcode:
  1702                           	callstack 0
  1703  000008                     _TC0INT:
  1704                           	callstack 26
  1705                           
  1706                           ;incstack = 0
  1707  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1708  00000A  ED09  F006         	call	int_func,f	;refresh shadow registers
  1709                           
  1710                           	psect	intcode_body
  1711  000C12                     __pintcode_body:
  1712                           	callstack 26
  1713  000C12                     int_func:
  1714                           	callstack 26
  1715  000C12  0006               	pop		; remove dummy address from shadow register refresh
  1716  000C14                     
  1717                           ;src/main.c: 44:     if (INTCONbits.TMR0IF == 0x01) {
  1718  000C14  A4F2               	btfss	242,2,c	;volatile
  1719  000C16  EF0F  F006         	goto	i2u46_41
  1720  000C1A  EF11  F006         	goto	i2u46_40
  1721  000C1E                     i2u46_41:
  1722  000C1E  EF1C  F006         	goto	i2l1558
  1723  000C22                     i2u46_40:
  1724  000C22                     
  1725                           ;src/main.c: 45:         tickHook_Execute(&global_timer_value);
  1726  000C22  0E23               	movlw	low _global_timer_value
  1727  000C24  6E27               	movwf	tickHook_Execute@global_timer_value^0,c
  1728  000C26  0E00               	movlw	high _global_timer_value
  1729  000C28  6E28               	movwf	(tickHook_Execute@global_timer_value+1)^0,c
  1730  000C2A  EC80  F006         	call	_tickHook_Execute	;wreg free
  1731  000C2E                     
  1732                           ;src/main.c: 46:         TMR0 = 0xFB1E;
  1733  000C2E  0EFB               	movlw	251
  1734  000C30  6ED7               	movwf	215,c	;volatile
  1735  000C32  0E1E               	movlw	30
  1736  000C34  6ED6               	movwf	214,c	;volatile
  1737  000C36                     
  1738                           ;src/main.c: 47:         INTCONbits.T0IF = 0x00;
  1739  000C36  94F2               	bcf	242,2,c	;volatile
  1740  000C38                     i2l1558:
  1741                           
  1742                           ;src/main.c: 50:     if (PIR1bits.RCIF) {
  1743  000C38  AA9E               	btfss	158,5,c	;volatile
  1744  000C3A  EF21  F006         	goto	i2u47_41
  1745  000C3E  EF23  F006         	goto	i2u47_40
  1746  000C42                     i2u47_41:
  1747  000C42  EF29  F006         	goto	i2l46
  1748  000C46                     i2u47_40:
  1749  000C46                     
  1750                           ;src/main.c: 51:         count = RCREG;
  1751  000C46  CFAE F054          	movff	4014,_count	;volatile
  1752  000C4A                     
  1753                           ;src/main.c: 52:         Serial_Transmit(count);
  1754  000C4A  5054               	movf	_count^0,w,c
  1755  000C4C  EC75  F006         	call	_Serial_Transmit
  1756  000C50                     
  1757                           ;src/main.c: 54:         PIR1bits.RCIF = 0x00;
  1758  000C50  9A9E               	bcf	158,5,c	;volatile
  1759  000C52                     i2l46:
  1760  000C52  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1761  000C54  0011               	retfie		f
  1762  000C56                     __end_of_TC0INT:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _tickHook_Execute *****************
  1766 ;; Defined at:
  1767 ;;		line 89 in file "src/pic18f4520/timer/timer.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  global_timer    2    0[COMRAM] PTR unsigned long 
  1770 ;;		 -> global_timer_value(4), 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1782 ;;      Params:         2       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0
  1785 ;;      Totals:         2       0       0       0       0       0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_TC0INT
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text10
  1796  000D00                     __ptext10:
  1797                           	callstack 0
  1798  000D00                     _tickHook_Execute:
  1799                           	callstack 26
  1800  000D00  0012               	return		;funcret
  1801  000D02                     __end_of_tickHook_Execute:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _Serial_Transmit *****************
  1805 ;; Defined at:
  1806 ;;		line 131 in file "src/pic18f4520/serial/serial.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  data            1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  data            1    0[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1820 ;;      Params:         0       0       0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0
  1823 ;;      Totals:         1       0       0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_TC0INT
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text11
  1834  000CEA                     __ptext11:
  1835                           	callstack 0
  1836  000CEA                     _Serial_Transmit:
  1837                           	callstack 26
  1838                           
  1839                           ;incstack = 0
  1840                           ;Serial_Transmit@data stored from wreg
  1841  000CEA  6E27               	movwf	Serial_Transmit@data^0,c
  1842  000CEC                     
  1843                           ;src/pic18f4520/serial/serial.c: 131: void Serial_Transmit(uint8_t data);src/pic18f4520/
      +                          serial/serial.c: 132: {;src/pic18f4520/serial/serial.c: 133:     TXREG = data;
  1844  000CEC  C027  FFAD         	movff	Serial_Transmit@data,4013	;volatile
  1845  000CF0                     i2l280:
  1846  000CF0  A2AC               	btfss	4012,1,c	;volatile
  1847  000CF2  EF7D  F006         	goto	i2u36_41
  1848  000CF6  EF7F  F006         	goto	i2u36_40
  1849  000CFA                     i2u36_41:
  1850  000CFA  EF78  F006         	goto	i2l280
  1851  000CFE                     i2u36_40:
  1852  000CFE  0012               	return		;funcret
  1853  000D00                     __end_of_Serial_Transmit:
  1854                           	callstack 0
  1855                           
  1856                           	psect	rparam
  1857  0000                     
  1858                           	psect	temp
  1859  000055                     btemp:
  1860                           	callstack 0
  1861  000055                     	ds	1
  1862  0000                     int$flags	set	btemp
  1863  0000                     wtemp8	set	btemp+1
  1864  0000                     ttemp5	set	btemp+1
  1865  0000                     ttemp6	set	btemp+4
  1866  0000                     ttemp7	set	btemp+8
  1867                           
  1868                           	psect	idloc
  1869                           
  1870                           ;Config register IDLOC0 @ 0x200000
  1871                           ;	unspecified, using default values
  1872  200000                     	org	2097152
  1873  200000  FF                 	db	255
  1874                           
  1875                           ;Config register IDLOC1 @ 0x200001
  1876                           ;	unspecified, using default values
  1877  200001                     	org	2097153
  1878  200001  FF                 	db	255
  1879                           
  1880                           ;Config register IDLOC2 @ 0x200002
  1881                           ;	unspecified, using default values
  1882  200002                     	org	2097154
  1883  200002  FF                 	db	255
  1884                           
  1885                           ;Config register IDLOC3 @ 0x200003
  1886                           ;	unspecified, using default values
  1887  200003                     	org	2097155
  1888  200003  FF                 	db	255
  1889                           
  1890                           ;Config register IDLOC4 @ 0x200004
  1891                           ;	unspecified, using default values
  1892  200004                     	org	2097156
  1893  200004  FF                 	db	255
  1894                           
  1895                           ;Config register IDLOC5 @ 0x200005
  1896                           ;	unspecified, using default values
  1897  200005                     	org	2097157
  1898  200005  FF                 	db	255
  1899                           
  1900                           ;Config register IDLOC6 @ 0x200006
  1901                           ;	unspecified, using default values
  1902  200006                     	org	2097158
  1903  200006  FF                 	db	255
  1904                           
  1905                           ;Config register IDLOC7 @ 0x200007
  1906                           ;	unspecified, using default values
  1907  200007                     	org	2097159
  1908  200007  FF                 	db	255
  1909                           
  1910                           	psect	config
  1911                           
  1912                           ; Padding undefined space
  1913  300000                     	org	3145728
  1914  300000  FF                 	db	255
  1915                           
  1916                           ;Config register CONFIG1H @ 0x300001
  1917                           ;	Oscillator Selection bits
  1918                           ;	OSC = HS, HS oscillator
  1919                           ;	Fail-Safe Clock Monitor Enable bit
  1920                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1921                           ;	Internal/External Oscillator Switchover bit
  1922                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1923  300001                     	org	3145729
  1924  300001  02                 	db	2
  1925                           
  1926                           ;Config register CONFIG2L @ 0x300002
  1927                           ;	Power-up Timer Enable bit
  1928                           ;	PWRT = OFF, PWRT disabled
  1929                           ;	Brown-out Reset Enable bits
  1930                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1931                           ;	Brown Out Reset Voltage bits
  1932                           ;	BORV = 3, Minimum setting
  1933  300002                     	org	3145730
  1934  300002  1F                 	db	31
  1935                           
  1936                           ;Config register CONFIG2H @ 0x300003
  1937                           ;	Watchdog Timer Enable bit
  1938                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1939                           ;	Watchdog Timer Postscale Select bits
  1940                           ;	WDTPS = 32768, 1:32768
  1941  300003                     	org	3145731
  1942  300003  1E                 	db	30
  1943                           
  1944                           ; Padding undefined space
  1945  300004                     	org	3145732
  1946  300004  FF                 	db	255
  1947                           
  1948                           ;Config register CONFIG3H @ 0x300005
  1949                           ;	CCP2 MUX bit
  1950                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1951                           ;	PORTB A/D Enable bit
  1952                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1953                           ;	Low-Power Timer1 Oscillator Enable bit
  1954                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1955                           ;	MCLR Pin Enable bit
  1956                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1957  300005                     	org	3145733
  1958  300005  81                 	db	129
  1959                           
  1960                           ;Config register CONFIG4L @ 0x300006
  1961                           ;	Stack Full/Underflow Reset Enable bit
  1962                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1963                           ;	Single-Supply ICSP Enable bit
  1964                           ;	LVP = OFF, Single-Supply ICSP disabled
  1965                           ;	Extended Instruction Set Enable bit
  1966                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1967                           ;	Background Debugger Enable bit
  1968                           ;	DEBUG = 0x1, unprogrammed default
  1969  300006                     	org	3145734
  1970  300006  81                 	db	129
  1971                           
  1972                           ; Padding undefined space
  1973  300007                     	org	3145735
  1974  300007  FF                 	db	255
  1975                           
  1976                           ;Config register CONFIG5L @ 0x300008
  1977                           ;	Code Protection bit
  1978                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1979                           ;	Code Protection bit
  1980                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1981                           ;	Code Protection bit
  1982                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1983                           ;	Code Protection bit
  1984                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1985  300008                     	org	3145736
  1986  300008  0F                 	db	15
  1987                           
  1988                           ;Config register CONFIG5H @ 0x300009
  1989                           ;	Boot Block Code Protection bit
  1990                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1991                           ;	Data EEPROM Code Protection bit
  1992                           ;	CPD = OFF, Data EEPROM not code-protected
  1993  300009                     	org	3145737
  1994  300009  C0                 	db	192
  1995                           
  1996                           ;Config register CONFIG6L @ 0x30000A
  1997                           ;	Write Protection bit
  1998                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1999                           ;	Write Protection bit
  2000                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2001                           ;	Write Protection bit
  2002                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2003                           ;	Write Protection bit
  2004                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2005  30000A                     	org	3145738
  2006  30000A  0F                 	db	15
  2007                           
  2008                           ;Config register CONFIG6H @ 0x30000B
  2009                           ;	Configuration Register Write Protection bit
  2010                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2011                           ;	Boot Block Write Protection bit
  2012                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2013                           ;	Data EEPROM Write Protection bit
  2014                           ;	WRTD = OFF, Data EEPROM not write-protected
  2015  30000B                     	org	3145739
  2016  30000B  E0                 	db	224
  2017                           
  2018                           ;Config register CONFIG7L @ 0x30000C
  2019                           ;	Table Read Protection bit
  2020                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2021                           ;	Table Read Protection bit
  2022                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2023                           ;	Table Read Protection bit
  2024                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2025                           ;	Table Read Protection bit
  2026                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2027  30000C                     	org	3145740
  2028  30000C  0F                 	db	15
  2029                           
  2030                           ;Config register CONFIG7H @ 0x30000D
  2031                           ;	Boot Block Table Read Protection bit
  2032                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2033  30000D                     	org	3145741
  2034  30000D  40                 	db	64
  2035                           tosu	equ	0xFFF
  2036                           tosh	equ	0xFFE
  2037                           tosl	equ	0xFFD
  2038                           stkptr	equ	0xFFC
  2039                           pclatu	equ	0xFFB
  2040                           pclath	equ	0xFFA
  2041                           pcl	equ	0xFF9
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           prodh	equ	0xFF4
  2047                           prodl	equ	0xFF3
  2048                           indf0	equ	0xFEF
  2049                           postinc0	equ	0xFEE
  2050                           postdec0	equ	0xFED
  2051                           preinc0	equ	0xFEC
  2052                           plusw0	equ	0xFEB
  2053                           fsr0h	equ	0xFEA
  2054                           fsr0l	equ	0xFE9
  2055                           wreg	equ	0xFE8
  2056                           indf1	equ	0xFE7
  2057                           postinc1	equ	0xFE6
  2058                           postdec1	equ	0xFE5
  2059                           preinc1	equ	0xFE4
  2060                           plusw1	equ	0xFE3
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           bsr	equ	0xFE0
  2064                           indf2	equ	0xFDF
  2065                           postinc2	equ	0xFDE
  2066                           postdec2	equ	0xFDD
  2067                           preinc2	equ	0xFDC
  2068                           plusw2	equ	0xFDB
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    0
    Data        38
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30      84
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Absolute function$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    tickHook_Execute@global_timer_value	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt	PTR FTN(PTR unsigned long ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Serial_TransmitBuffer@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), STR_1(CODE[4]), 

    Serial_1_Config@serialConfig	PTR struct . size(2) Largest target is 7
		 -> serialConfig(COMRAM[7]), 

    Display_WriteString@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[16]), STR_11(CODE[14]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_Serial_1_Config
    _Serial_1_Config->___lldiv
    _DisplayLCD_Init->_Display_WriteString
    _Display_WriteString->_Display_WriteByte

Critical Paths under _TC0INT in COMRAM

    _TC0INT->_tickHook_Execute

Critical Paths under _main in BANK0

    None.

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2946
                                             28 COMRAM     2     2      0
                    _DisplayLCD_Init
                    _Serial_1_Config
              _Serial_TransmitBuffer
 ---------------------------------------------------------------------------------
 (1) _Serial_TransmitBuffer                                6     3      3     394
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Serial_1_Config                                     13    11      2    1436
                                             15 COMRAM    13    11      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     912
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _DisplayLCD_Init                                      1     1      0    1115
                                             17 COMRAM     1     1      0
                   _Display_SendByte
                _Display_WriteString
                         _sendNibble
 ---------------------------------------------------------------------------------
 (2) _sendNibble                                           3     3      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Display_WriteString                                 12     8      4     607
                                              5 COMRAM    12     8      4
                  _Display_WriteByte
 ---------------------------------------------------------------------------------
 (3) _Display_WriteByte                                    3     3      0      60
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Display_SendByte                                     4     3      1     493
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TC0INT                                               0     0      0      98
                    _Serial_Transmit
                   _tickHook_Execute
 ---------------------------------------------------------------------------------
 (5) _tickHook_Execute                                     2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Serial_Transmit                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayLCD_Init
     _Display_SendByte
     _Display_WriteString
       _Display_WriteByte
     _sendNibble
   _Serial_1_Config
     ___lldiv
   _Serial_TransmitBuffer

 _TC0INT (ROOT)
   _Serial_Transmit
   _tickHook_Execute

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      54       1       66.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54      15        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 15:58:19 2021

               ??_Display_WriteByte 0029                   ??_Serial_Transmit 0027  
                               l201 0BB6                                 l152 0A68  
                               l161 0CC2                                 l171 0AB4  
                               l156 0C98                                 l173 0AC4  
                               l165 0A8C                                 l190 0B2C  
                               l182 0AF0                                 l167 0AA0  
                               l184 0B04                                 l273 0838  
                               l178 0AE6                                 l195 0B50  
                               l275 0894                                 l188 0B18  
                               l276 0898                                 l292 0C10  
                               l277 089E                                 l366 0942  
                               l359 0932                                 l288 0BEE  
                               u310 0A7C                                 u311 0A78  
                               u320 0BB6                                 u400 082C  
                               u321 0BB2                                 u401 0828  
                               u330 08C6                                 u410 084A  
                               u331 08C2                                 u411 0846  
                               u340 08E8                                 u420 088C  
                               u341 08E4                                 u421 0888  
                               u350 0910                                 u430 0BEC  
                               u351 090C                                 u440 0BFC  
                               u441 0BF8                                 u450 0C10  
                               u451 0C0C                                 u507 0986  
                               u437 0BE2                                 u517 099E  
                               u607 0B34                                 u375 0662  
                               u527 09B6                                 u617 0B46  
                               u385 06B8                                 u537 09CE  
                               u627 0AA8                                 u547 09EA  
                               u395 070E                                 u637 0ACC  
                               u557 0A38                                 u647 0ADE  
                               u567 0A4E                                 u577 0CA8  
                               u497 096E                                 u587 0CBA  
                               u597 0B0C               ??_Display_WriteString 0030  
                               wreg 000FE8           __end_of_Display_WriteByte 0B52  
                              l1040 0B12                                l1032 0AFE  
                              l1024 0AEA                                l1026 0AEA  
                              l1052 0B3A                                l1044 0B26  
                              l1036 0B0A                                l1060 0C92  
                              l1054 0B40                                l1070 0CB4  
                              l1048 0B32                                l1064 0CA6  
                              l1056 0C92                                l1412 0A6C  
                              l1068 0CAE                                l1500 082C  
                              l1430 0AAE                                l1422 0A9A  
                              l1414 0A6C                                l1510 086E  
                              l1502 0834                                l1440 0ACA  
                              l1432 0ABA                                l1416 0A7C  
                              l1520 09F8                                l1512 0870  
                              l1504 084A                                l1426 0AA6  
                              l1418 0A86                                l1450 0B5E  
                              l1530 0A1E                                l1522 09FE  
                              l1514 088C                                l1506 084E  
                              l1444 0AD2                                l1436 0ABE  
                              l1452 0B7A                                l1540 0A54  
                              l1532 0A28                                l1524 0A04  
                              l1516 09E4                                l1460 08C6  
                              l1508 0852                                l1446 0AD8  
                              l1454 0B7C                                l1534 0A32  
                              l1526 0A0A                                l1518 09F4  
                              l1470 0910                                l1462 08CE  
                              l1542 0BB8                                l1448 0B52  
                              l1536 0A42                                l1528 0A14  
                              l1472 0920                                l1464 08DA  
                              l1456 08A0                                l1544 0BC0  
                              l1538 0A4C                                l1474 0922  
                              l1466 08E8                                l1458 08B0  
                              l1490 080E                                l1482 0634  
                              l1546 0BFC                                l1570 0954  
                              l1476 092C                                l1468 08F2  
                              l1492 0812                                l1484 0736  
                              l1548 0BFE                                l1580 09AC  
                              l1572 0954                                l1494 0814  
                              l1486 077E                                l1582 09C4  
                              l1574 0964                                l1566 0944  
                              l1496 0816                                l1488 07C6  
                              l1576 097C                                l1568 0950  
                              l1498 081A                                l1578 0994  
                              STR_1 061F                                STR_2 0623  
                              STR_3 0625                                STR_4 0627  
                              STR_5 0629                                STR_6 062B  
                              STR_7 062D                                STR_8 062F  
                              STR_9 0631                                _LATB 000F8A  
                              _LATD 000F8C                                i2l46 0C52  
                              _TMR0 000FD6                                _TRMT 007D61  
                              _main 0944                                fsr0h 000FEA  
                              indf0 000FEF                                fsr2h 000FDA  
                              fsr0l 000FE9                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 0055                                prodh 000FF4  
                              prodl 000FF3                                start 000E  
                      ___param_bank 000000                               ?_main 0027  
                             STR_11 0611                               STR_12 0601  
                   __end_of___lldiv 0944                               i2l321 0D00  
                             i2l280 0CF0                               i2l283 0CFE  
                             _RCREG 000FAE                               _SPBRG 000FAF  
                             _PORTB 000F81                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TXREG 000FAD  
    __size_of_Serial_TransmitBuffer 005A                               _count 0054  
     __end_of_Serial_TransmitBuffer 0C12                               tablat 000FF5  
                             ttemp5 0056                               ttemp6 0059  
                             ttemp7 005D                               status 000FD8  
                             wtemp8 0056                     __initialization 0C56  
                      __end_of_main 09E4                     _Serial_1_Config 0634  
                   _DisplayLCD_Init 09E4                              ??_main 0043  
       Serial_1_Config@serialConfig 0036                       __activetblptr 000002  
        Serial_1_Config@error_8HIGH 0041          __size_of_Display_WriteByte 006A  
                            _TC0INT 0008            __end_of_tickHook_Execute 0D02  
                            i2l1550 0C14                              i2l1480 0CEC  
                            i2l1560 0C46                              i2l1552 0C22  
                            i2l1562 0C4A                              i2l1554 0C2E  
                            i2l1564 0C50                              i2l1556 0C36  
                            i2l1478 0D00                              i2l1558 0C38  
                         ??___lldiv 0031                              clear_0 0C7C  
           Serial_1_Config@brg8HIGH 003F                              isa$std 000001  
                      __pdataCOMRAM 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                          __accesstop 0080  
           __end_of__initialization 0C82                     _Serial_Transmit 0CEA  
                     ___rparam_used 000001             __end_of_Serial_1_Config 08A0  
         __size_of_Display_SendByte 007E                      __pcstackCOMRAM 0027  
           __end_of_DisplayLCD_Init 0A6A          Display_WriteString@address 002F  
                           ?_TC0INT 0027         __end_of_Display_WriteString 0BB8  
                           i2u36_40 0CFE                             i2u36_41 0CFA  
                           i2u46_40 0C22                             i2u46_41 0C1E  
                           i2u47_40 0C46                             i2u47_41 0C42  
           __end_of_Serial_Transmit 0D00                     __size_of_TC0INT 0C4E  
                           __Hparam 0000                    ?_Serial_1_Config 0036  
                           __Lparam 0000                    ?_DisplayLCD_Init 0027  
                           ___lldiv 08A0                        __psmallconst 0600  
                           __pcinit 0C56                             __ramtop 0600  
                           __ptext0 0944                             __ptext1 0BB8  
                           __ptext2 0634                             __ptext3 08A0  
                           __ptext4 09E4                             __ptext5 0C90  
                           __ptext6 0B52                             __ptext7 0AE8  
                           __ptext8 0A6A                           _T0CONbits 000FD5  
          Serial_1_Config@brg16HIGH 0040         Serial_TransmitBuffer@buffer 0029  
       Serial_TransmitBuffer@length 002B                Display_SendByte@comm 0029  
              Display_SendByte@byte 002B                      __pintcode_body 0C12  
                        _sendNibble 0C90                end_of_initialization 0C82  
             _Serial_TransmitBuffer 0BB8                   ?_tickHook_Execute 0027  
                     __Lmediumconst 0000                             int_func 0C12  
                ??_tickHook_Execute 0029                     ___lldiv@divisor 002D  
                   ___lldiv@counter 0035                    _Display_SendByte 0A6A  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postinc0 000FEE                             postinc2 000FDE  
           Display_SendByte@auxByte 002C               Display_WriteByte@byte 002A  
          Serial_1_Config@error_min 0042                 Serial_Transmit@data 0027  
                  ?_Serial_Transmit 0027                      __end_of_TC0INT 0C56  
                         _TXSTAbits 000FAC                         _BAUDCONbits 000FB8  
                     __pidataCOMRAM 0CC4                 start_initialization 0C56  
                       ?_sendNibble 0027              ?_Serial_TransmitBuffer 0029  
                          ??_TC0INT 0029           Serial_1_Config@error_8LOW 003C  
            Serial_1_Config@brg8LOW 003E                         __pbssCOMRAM 0045  
         Display_WriteString@length 002E           Display_WriteString@string 002C  
                         __pintcode 0008                            ?___lldiv 0029  
               __size_of_sendNibble 0034                         __smallconst 0600  
      __size_of_Display_WriteString 0066            __end_of_Display_SendByte 0AE8  
                          _PIE1bits 000F9D  tickHook_Execute@global_timer_value 0027  
                          _PIR1bits 000F9E                            _RCONbits 000FD0  
         __size_of_tickHook_Execute 0002            __size_of_Serial_1_Config 026C  
               _BLUETOOTH_BAUD_COMM 0014            __size_of_DisplayLCD_Init 0086  
                       _INTCON2bits 000FF1                           copy_data0 0C6A  
               _BLUETOOTH_NAME_COMM 000C                            __Hrparam 0000  
                          __Lrparam 0000                    sendNibble@nibble 002A  
                  __size_of___lldiv 00A4             ??_Serial_TransmitBuffer 002C  
                          __ptext10 0D00                            __ptext11 0CEA  
                      ??_sendNibble 0029                       __size_of_main 00A0  
                      _serialConfig 001C                            _humidity 0050  
          __size_of_Serial_Transmit 0016                            isa$xinst 000000  
                          int$flags 0055                  __end_of_sendNibble 0CC4  
                        _INTCONbits 000FF2                   ??_Serial_1_Config 0038  
                 ??_DisplayLCD_Init 0038                            intlevel2 0000  
                _BLUETOOTH_PIN_COMM 0001         Serial_1_Config@error_16HIGH 003D  
            Timer0_WaitMS@timeStart 004A                    ___lldiv@dividend 0029  
               _Display_WriteString 0B52      Serial_TransmitBuffer@auxLength 002E  
                _global_timer_value 0023                    _tickHook_Execute 0D00  
      Display_WriteString@auxLength 0037                         _temperature 0052  
                       _timerConfig 0045                    ___lldiv@quotient 0031  
              ?_Display_WriteString 002C                   _tickHook_func_prt 004E  
          Display_WriteByte@auxByte 002B                   ?_Display_SendByte 0029  
                ??_Display_SendByte 002A                   _Display_WriteByte 0AE8  
                ?_Display_WriteByte 0027  
