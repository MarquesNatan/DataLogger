

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 14 23:15:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  0002CE                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _serialConfig
    64  0002CE  00                 	db	0
    65  0002CF  00                 	db	0
    66  0002D0  00                 	db	0
    67  0002D1  2580               	dw	9600
    68  0002D3  0000               	dw	0
    69                           
    70                           ;initializer for _timerConfig
    71  0002D5  00                 	db	0
    72  0002D6  00                 	db	0
    73  0002D7  00                 	db	0
    74  0002D8  00                 	db	0
    75  0002D9  07                 	db	7
    76  0000                     _TMR0	set	4054
    77  0000                     _PORTD	set	3971
    78  0000                     _LATD	set	3980
    79  0000                     _TRISD	set	3989
    80  0000                     _INTCON2bits	set	4081
    81  0000                     _T0CONbits	set	4053
    82  0000                     _TXREG	set	4013
    83  0000                     _PIE1bits	set	3997
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _SPBRG	set	4015
    86  0000                     _TXSTAbits	set	4012
    87  0000                     _BAUDCONbits	set	4024
    88  0000                     _RCONbits	set	4048
    89  0000                     _TRISB	set	3987
    90  0000                     _RCREG	set	4014
    91  0000                     _PIR1bits	set	3998
    92  0000                     _PORTB	set	3969
    93  0000                     _LATB	set	3978
    94  0000                     _INTCONbits	set	4082
    95  0000                     _TRMT	set	32097
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  0002A2                     __pcinit:
   101                           	callstack 0
   102  0002A2                     start_initialization:
   103                           	callstack 0
   104  0002A2                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Initialize objects allocated to COMRAM (12 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109  0002A2  0ECE               	movlw	low __pidataCOMRAM
   110  0002A4  6EF6               	movwf	tblptrl,c
   111  0002A6  0E02               	movlw	high __pidataCOMRAM
   112  0002A8  6EF7               	movwf	tblptrh,c
   113  0002AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114  0002AC  6EF8               	movwf	tblptru,c
   115  0002AE  EE00  F001         	lfsr	0,__pdataCOMRAM
   116  0002B2  EE10 F00C          	lfsr	1,12
   117  0002B6                     copy_data0:
   118  0002B6  0009               	tblrd		*+
   119  0002B8  CFF5 FFEE          	movff	tablat,postinc0
   120  0002BC  50E5               	movf	postdec1,w,c
   121  0002BE  50E1               	movf	fsr1l,w,c
   122  0002C0  E1FA               	bnz	copy_data0
   123                           
   124                           ; Clear objects allocated to COMRAM (1 bytes)
   125  0002C2  6A11               	clrf	__pbssCOMRAM& (0+255),c
   126  0002C4                     end_of_initialization:
   127                           	callstack 0
   128  0002C4                     __end_of__initialization:
   129                           	callstack 0
   130  0002C4  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131  0002C6  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132  0002C8  0100               	movlb	0
   133  0002CA  EF37  F001         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136  000011                     __pbssCOMRAM:
   137                           	callstack 0
   138  000011                     _count:
   139                           	callstack 0
   140  000011                     	ds	1
   141                           
   142                           	psect	dataCOMRAM
   143  000001                     __pdataCOMRAM:
   144                           	callstack 0
   145  000001                     _serialConfig:
   146                           	callstack 0
   147  000001                     	ds	7
   148  000008                     _timerConfig:
   149                           	callstack 0
   150  000008                     	ds	5
   151                           
   152                           	psect	cstackCOMRAM
   153  00000D                     __pcstackCOMRAM:
   154                           	callstack 0
   155  00000D                     ??_LCD_Command:
   156  00000D                     ??_LCD_WriteByte:
   157  00000D                     Timer0_Config@timerConfig:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x0
   161  00000D                     	ds	1
   162  00000E                     LCD_Command@command:
   163                           	callstack 0
   164  00000E                     LCD_WriteByte@byte:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x1
   168  00000E                     	ds	1
   169  00000F                     ??_Timer0_Config:
   170  00000F                     LCD_Command@commandAux:
   171                           	callstack 0
   172  00000F                     LCD_WriteByte@auxByte:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x2
   176  00000F                     	ds	1
   177  000010                     ??_LCD_Init:
   178                           
   179                           ; 1 bytes @ 0x3
   180  000010                     	ds	1
   181  000011                     
   182                           ; 1 bytes @ 0x4
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 105 in file "src/main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   202 ;;      Params:         0       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels required when called: 3
   208 ;; This function calls:
   209 ;;		_Interrupt_GlobalEnable
   210 ;;		_LCD_Init
   211 ;;		_Timer0_Config
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text0
   218  00026E                     __ptext0:
   219                           	callstack 0
   220  00026E                     _main:
   221                           	callstack 28
   222  00026E  5093               	movf	147,w,c	;volatile
   223  000270  0BFB               	andlw	251
   224  000272  6E93               	movwf	147,c	;volatile
   225  000274  5093               	movf	147,w,c	;volatile
   226  000276  0BF7               	andlw	247
   227  000278  6E93               	movwf	147,c	;volatile
   228  00027A  5081               	movf	129,w,c	;volatile
   229  00027C  0BFB               	andlw	251
   230  00027E  6E8A               	movwf	138,c	;volatile
   231  000280  5081               	movf	129,w,c	;volatile
   232  000282  0908               	iorlw	8
   233  000284  6E8A               	movwf	138,c	;volatile
   234  000286                     
   235                           ;src/main.c: 114:    Interrupt_GlobalEnable();
   236  000286  EC6D  F001         	call	_Interrupt_GlobalEnable	;wreg free
   237  00028A                     
   238                           ;src/main.c: 115:    Timer0_Config(&timerConfig);
   239  00028A  0E08               	movlw	low _timerConfig
   240  00028C  6E0D               	movwf	Timer0_Config@timerConfig^0,c
   241  00028E  0E00               	movlw	high _timerConfig
   242  000290  6E0E               	movwf	(Timer0_Config@timerConfig+1)^0,c
   243  000292  EC6D  F000         	call	_Timer0_Config	;wreg free
   244  000296                     
   245                           ;src/main.c: 121:     LCD_Init();
   246  000296  EC09  F000         	call	_LCD_Init	;wreg free
   247  00029A                     l46:
   248  00029A  EF4D  F001         	goto	l46
   249  00029E  EF07  F000         	goto	start
   250  0002A2                     __end_of_main:
   251                           	callstack 0
   252                           
   253 ;; *************** function _Timer0_Config *****************
   254 ;; Defined at:
   255 ;;		line 4 in file "src/pic18f4520/timer/timer.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;  timerConfig     2    0[COMRAM] PTR struct .
   258 ;;		 -> timerConfig(5), 
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         2       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0
   272 ;;      Temps:          1       0       0       0       0       0       0
   273 ;;      Totals:         3       0       0       0       0       0       0
   274 ;;Total ram usage:        3 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; Hardware stack levels required when called: 1
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		_main
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text1
   285  0000DA                     __ptext1:
   286                           	callstack 0
   287  0000DA                     _Timer0_Config:
   288                           	callstack 29
   289  0000DA                     
   290                           ;src/pic18f4520/timer/timer.c: 4: void Timer0_Config( timer_config_t* timerConfig );src/
      +                          pic18f4520/timer/timer.c: 5: {;src/pic18f4520/timer/timer.c: 11:     T0CONbits.TMR0ON = 
      +                          0x00;
   291  0000DA  9ED5               	bcf	213,7,c	;volatile
   292  0000DC                     
   293                           ;src/pic18f4520/timer/timer.c: 19:     T0CONbits.T08BIT = timerConfig->timer_length;
   294  0000DC  C00D  FFD9         	movff	Timer0_Config@timerConfig,fsr2l
   295  0000E0  C00E  FFDA         	movff	Timer0_Config@timerConfig+1,fsr2h
   296  0000E4  50DF               	movf	indf2,w,c
   297  0000E6  6E0F               	movwf	??_Timer0_Config^0,c
   298  0000E8  3A0F               	swapf	??_Timer0_Config^0,f,c
   299  0000EA  460F               	rlncf	??_Timer0_Config^0,f,c
   300  0000EC  460F               	rlncf	??_Timer0_Config^0,f,c
   301  0000EE  50D5               	movf	213,w,c	;volatile
   302  0000F0  180F               	xorwf	??_Timer0_Config^0,w,c
   303  0000F2  0BBF               	andlw	-65
   304  0000F4  180F               	xorwf	??_Timer0_Config^0,w,c
   305  0000F6  6ED5               	movwf	213,c	;volatile
   306                           
   307                           ;src/pic18f4520/timer/timer.c: 26:     T0CONbits.T0CS = timerConfig->timer_clk_src;
   308  0000F8  EE20 F001          	lfsr	2,1
   309  0000FC  500D               	movf	Timer0_Config@timerConfig^0,w,c
   310  0000FE  26D9               	addwf	fsr2l,f,c
   311  000100  500E               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   312  000102  22DA               	addwfc	fsr2h,f,c
   313  000104  50DF               	movf	indf2,w,c
   314  000106  6E0F               	movwf	??_Timer0_Config^0,c
   315  000108  3A0F               	swapf	??_Timer0_Config^0,f,c
   316  00010A  460F               	rlncf	??_Timer0_Config^0,f,c
   317  00010C  50D5               	movf	213,w,c	;volatile
   318  00010E  180F               	xorwf	??_Timer0_Config^0,w,c
   319  000110  0BDF               	andlw	-33
   320  000112  180F               	xorwf	??_Timer0_Config^0,w,c
   321  000114  6ED5               	movwf	213,c	;volatile
   322                           
   323                           ;src/pic18f4520/timer/timer.c: 34:     if(!(T0CONbits.PSA = timerConfig->timer_prescaler
      +                          _assign))
   324  000116  EE20 F003          	lfsr	2,3
   325  00011A  500D               	movf	Timer0_Config@timerConfig^0,w,c
   326  00011C  26D9               	addwf	fsr2l,f,c
   327  00011E  500E               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   328  000120  22DA               	addwfc	fsr2h,f,c
   329  000122  50DF               	movf	indf2,w,c
   330  000124  6E0F               	movwf	??_Timer0_Config^0,c
   331  000126  460F               	rlncf	??_Timer0_Config^0,f,c
   332  000128  460F               	rlncf	??_Timer0_Config^0,f,c
   333  00012A  460F               	rlncf	??_Timer0_Config^0,f,c
   334  00012C  50D5               	movf	213,w,c	;volatile
   335  00012E  180F               	xorwf	??_Timer0_Config^0,w,c
   336  000130  0BF7               	andlw	-9
   337  000132  180F               	xorwf	??_Timer0_Config^0,w,c
   338  000134  6ED5               	movwf	213,c	;volatile
   339  000136  30D5               	rrcf	213,w,c	;volatile
   340  000138  32E8               	rrcf	wreg,f,c
   341  00013A  32E8               	rrcf	wreg,f,c
   342  00013C  0B01               	andlw	1
   343  00013E  0900               	iorlw	0
   344  000140  A4D8               	btfss	status,2,c
   345  000142  EFA5  F000         	goto	u111
   346  000146  EFA7  F000         	goto	u110
   347  00014A                     u111:
   348  00014A  EFB4  F000         	goto	l1103
   349  00014E                     u110:
   350  00014E                     
   351                           ;src/pic18f4520/timer/timer.c: 35:     {;src/pic18f4520/timer/timer.c: 45:         T0CON
      +                          bits.T0PS = timerConfig->timer_prescaler_value;
   352  00014E  EE20 F004          	lfsr	2,4
   353  000152  500D               	movf	Timer0_Config@timerConfig^0,w,c
   354  000154  26D9               	addwf	fsr2l,f,c
   355  000156  500E               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   356  000158  22DA               	addwfc	fsr2h,f,c
   357  00015A  50DF               	movf	indf2,w,c
   358  00015C  6E0F               	movwf	??_Timer0_Config^0,c
   359  00015E  50D5               	movf	213,w,c	;volatile
   360  000160  180F               	xorwf	??_Timer0_Config^0,w,c
   361  000162  0BF8               	andlw	-8
   362  000164  180F               	xorwf	??_Timer0_Config^0,w,c
   363  000166  6ED5               	movwf	213,c	;volatile
   364  000168                     l1103:
   365                           
   366                           ;src/pic18f4520/timer/timer.c: 60:     INTCONbits.TMR0IE = 0x01;
   367  000168  8AF2               	bsf	242,5,c	;volatile
   368  00016A                     
   369                           ;src/pic18f4520/timer/timer.c: 66:     INTCON2bits.TMR0IP = 0x01;
   370  00016A  84F1               	bsf	241,2,c	;volatile
   371  00016C                     
   372                           ;src/pic18f4520/timer/timer.c: 69:     TMR0 = 0xD9D9;
   373  00016C  0ED9               	movlw	217
   374  00016E  6ED7               	movwf	215,c	;volatile
   375  000170  0ED9               	movlw	217
   376  000172  6ED6               	movwf	214,c	;volatile
   377  000174                     
   378                           ;src/pic18f4520/timer/timer.c: 71:     T0CONbits.TMR0ON = 0x01;
   379  000174  8ED5               	bsf	213,7,c	;volatile
   380  000176  0012               	return		;funcret
   381  000178                     __end_of_Timer0_Config:
   382                           	callstack 0
   383                           
   384 ;; *************** function _LCD_Init *****************
   385 ;; Defined at:
   386 ;;		line 9 in file "src/app/display_lcd/display_lcd.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   400 ;;      Params:         0       0       0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0       0       0
   402 ;;      Temps:          1       0       0       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; Hardware stack levels required when called: 2
   407 ;; This function calls:
   408 ;;		_LCD_Command
   409 ;;		_LCD_WriteByte
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text2
   416  000012                     __ptext2:
   417                           	callstack 0
   418  000012                     _LCD_Init:
   419                           	callstack 28
   420  000012                     
   421                           ;src/app/display_lcd/display_lcd.c: 11:     TRISB = 0x00;
   422  000012  0E00               	movlw	0
   423  000014  6E93               	movwf	147,c	;volatile
   424                           
   425                           ;src/app/display_lcd/display_lcd.c: 12:     TRISD = 0x00;
   426  000016  0E00               	movlw	0
   427  000018  6E95               	movwf	149,c	;volatile
   428  00001A  5081               	movf	129,w,c	;volatile
   429  00001C  0BFD               	andlw	253
   430  00001E  6E8A               	movwf	138,c	;volatile
   431  000020  5083               	movf	131,w,c	;volatile
   432  000022  0BFE               	andlw	254
   433  000024  6E8C               	movwf	140,c	;volatile
   434  000026  5083               	movf	131,w,c	;volatile
   435  000028  0902               	iorlw	2
   436  00002A  6E8C               	movwf	140,c	;volatile
   437  00002C  5083               	movf	131,w,c	;volatile
   438  00002E  0BFB               	andlw	251
   439  000030  6E8C               	movwf	140,c	;volatile
   440  000032  5083               	movf	131,w,c	;volatile
   441  000034  0BF7               	andlw	247
   442  000036  6E8C               	movwf	140,c	;volatile
   443  000038  5081               	movf	129,w,c	;volatile
   444  00003A  0901               	iorlw	1
   445  00003C  6E8A               	movwf	138,c	;volatile
   446  00003E                     
   447                           ;src/app/display_lcd/display_lcd.c: 22:     _delay((unsigned long)((1)*(10000000/4000.0)
      +                          ));
   448  00003E  0E04               	movlw	4
   449  000040  6E10               	movwf	??_LCD_Init^0,c
   450  000042  0E3E               	movlw	62
   451  000044                     u127:
   452  000044  2EE8               	decfsz	wreg,f,c
   453  000046  D7FE               	bra	u127
   454  000048  2E10               	decfsz	??_LCD_Init^0,f,c
   455  00004A  D7FC               	bra	u127
   456  00004C  5081               	movf	129,w,c	;volatile
   457  00004E  0BFE               	andlw	254
   458  000050  6E8A               	movwf	138,c	;volatile
   459  000052                     
   460                           ;src/app/display_lcd/display_lcd.c: 27:     LCD_Command(0b00100000);
   461  000052  0E20               	movlw	32
   462  000054  ECEA  F000         	call	_LCD_Command
   463  000058                     
   464                           ;src/app/display_lcd/display_lcd.c: 30:     if(0x01 == 0x01) LATB = (PORTB | (1 << 1)); 
      +                          else LATB = (PORTB & ~((1 << 1)));;
   465  000058  0E0E               	movlw	14
   466  00005A  ECEA  F000         	call	_LCD_Command
   467  00005E  5081               	movf	129,w,c	;volatile
   468  000060  0902               	iorlw	2
   469  000062  6E8A               	movwf	138,c	;volatile
   470  000064  5083               	movf	131,w,c	;volatile
   471  000066  0BFE               	andlw	254
   472  000068  6E8C               	movwf	140,c	;volatile
   473  00006A  5083               	movf	131,w,c	;volatile
   474  00006C  0BFD               	andlw	253
   475  00006E  6E8C               	movwf	140,c	;volatile
   476  000070  5083               	movf	131,w,c	;volatile
   477  000072  0904               	iorlw	4
   478  000074  6E8C               	movwf	140,c	;volatile
   479  000076  5083               	movf	131,w,c	;volatile
   480  000078  0BF7               	andlw	247
   481  00007A  6E8C               	movwf	140,c	;volatile
   482  00007C  5081               	movf	129,w,c	;volatile
   483  00007E  0901               	iorlw	1
   484  000080  6E8A               	movwf	138,c	;volatile
   485  000082                     
   486                           ;src/app/display_lcd/display_lcd.c: 38:     _delay((unsigned long)((10)*(10000000/4000.0
      +                          )));
   487  000082  0E21               	movlw	33
   488  000084  6E10               	movwf	??_LCD_Init^0,c
   489  000086  0E76               	movlw	118
   490  000088                     u137:
   491  000088  2EE8               	decfsz	wreg,f,c
   492  00008A  D7FE               	bra	u137
   493  00008C  2E10               	decfsz	??_LCD_Init^0,f,c
   494  00008E  D7FC               	bra	u137
   495  000090  D000               	nop2	
   496  000092  5081               	movf	129,w,c	;volatile
   497  000094  0BFE               	andlw	254
   498  000096  6E8A               	movwf	138,c	;volatile
   499  000098  5081               	movf	129,w,c	;volatile
   500  00009A  0902               	iorlw	2
   501  00009C  6E8A               	movwf	138,c	;volatile
   502  00009E  5083               	movf	131,w,c	;volatile
   503  0000A0  0BFE               	andlw	254
   504  0000A2  6E8C               	movwf	140,c	;volatile
   505  0000A4  5083               	movf	131,w,c	;volatile
   506  0000A6  0BFD               	andlw	253
   507  0000A8  6E8C               	movwf	140,c	;volatile
   508  0000AA  5083               	movf	131,w,c	;volatile
   509  0000AC  0BFB               	andlw	251
   510  0000AE  6E8C               	movwf	140,c	;volatile
   511  0000B0  5083               	movf	131,w,c	;volatile
   512  0000B2  0908               	iorlw	8
   513  0000B4  6E8C               	movwf	140,c	;volatile
   514  0000B6  5081               	movf	129,w,c	;volatile
   515  0000B8  0901               	iorlw	1
   516  0000BA  6E8A               	movwf	138,c	;volatile
   517  0000BC                     
   518                           ;src/app/display_lcd/display_lcd.c: 49:     _delay((unsigned long)((10)*(10000000/4000.0
      +                          )));
   519  0000BC  0E21               	movlw	33
   520  0000BE  6E10               	movwf	??_LCD_Init^0,c
   521  0000C0  0E76               	movlw	118
   522  0000C2                     u147:
   523  0000C2  2EE8               	decfsz	wreg,f,c
   524  0000C4  D7FE               	bra	u147
   525  0000C6  2E10               	decfsz	??_LCD_Init^0,f,c
   526  0000C8  D7FC               	bra	u147
   527  0000CA  D000               	nop2	
   528  0000CC  5081               	movf	129,w,c	;volatile
   529  0000CE  0BFE               	andlw	254
   530  0000D0  6E8A               	movwf	138,c	;volatile
   531  0000D2                     
   532                           ;src/app/display_lcd/display_lcd.c: 52:     LCD_WriteByte(0x4E);
   533  0000D2  0E4E               	movlw	78
   534  0000D4  ECBC  F000         	call	_LCD_WriteByte
   535  0000D8  0012               	return		;funcret
   536  0000DA                     __end_of_LCD_Init:
   537                           	callstack 0
   538                           
   539 ;; *************** function _LCD_WriteByte *****************
   540 ;; Defined at:
   541 ;;		line 79 in file "src/app/display_lcd/display_lcd.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  byte            1    wreg     unsigned char 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  byte            1    1[COMRAM] unsigned char 
   546 ;;  auxByte         1    2[COMRAM] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   556 ;;      Params:         0       0       0       0       0       0       0
   557 ;;      Locals:         2       0       0       0       0       0       0
   558 ;;      Temps:          1       0       0       0       0       0       0
   559 ;;      Totals:         3       0       0       0       0       0       0
   560 ;;Total ram usage:        3 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_LCD_Init
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text3
   571  000178                     __ptext3:
   572                           	callstack 0
   573  000178                     _LCD_WriteByte:
   574                           	callstack 28
   575                           
   576                           ;incstack = 0
   577                           ;LCD_WriteByte@byte stored from wreg
   578  000178  6E0E               	movwf	LCD_WriteByte@byte^0,c
   579  00017A  5081               	movf	129,w,c	;volatile
   580  00017C  0902               	iorlw	2
   581  00017E  6E8A               	movwf	138,c	;volatile
   582  000180  5081               	movf	129,w,c	;volatile
   583  000182  0901               	iorlw	1
   584  000184  6E8A               	movwf	138,c	;volatile
   585  000186                     
   586                           ;src/app/display_lcd/display_lcd.c: 84:     auxByte = byte >> 0x04;
   587  000186  380E               	swapf	LCD_WriteByte@byte^0,w,c
   588  000188  0B0F               	andlw	15
   589  00018A  6E0F               	movwf	LCD_WriteByte@auxByte^0,c
   590  00018C                     
   591                           ;src/app/display_lcd/display_lcd.c: 88:     if(0x01 == 0x01) LATB = (PORTB | (1 << 0)); 
      +                          else LATB = (PORTB & ~((1 << 0)));;
   592  00018C  C00F  FF83         	movff	LCD_WriteByte@auxByte,3971	;volatile
   593  000190  5081               	movf	129,w,c	;volatile
   594  000192  0901               	iorlw	1
   595  000194  6E8A               	movwf	138,c	;volatile
   596  000196                     
   597                           ;src/app/display_lcd/display_lcd.c: 89:     _delay((unsigned long)((10)*(10000000/4000.0
      +                          )));
   598  000196  0E21               	movlw	33
   599  000198  6E0D               	movwf	??_LCD_WriteByte^0,c
   600  00019A  0E76               	movlw	118
   601  00019C                     u157:
   602  00019C  2EE8               	decfsz	wreg,f,c
   603  00019E  D7FE               	bra	u157
   604  0001A0  2E0D               	decfsz	??_LCD_WriteByte^0,f,c
   605  0001A2  D7FC               	bra	u157
   606  0001A4  D000               	nop2	
   607  0001A6  5081               	movf	129,w,c	;volatile
   608  0001A8  0BFE               	andlw	254
   609  0001AA  6E8A               	movwf	138,c	;volatile
   610  0001AC                     
   611                           ;src/app/display_lcd/display_lcd.c: 93:     auxByte = (byte & 0x0F);
   612  0001AC  500E               	movf	LCD_WriteByte@byte^0,w,c
   613  0001AE  0B0F               	andlw	15
   614  0001B0  6E0F               	movwf	LCD_WriteByte@auxByte^0,c
   615  0001B2                     
   616                           ;src/app/display_lcd/display_lcd.c: 97:     if(0x01 == 0x01) LATB = (PORTB | (1 << 0)); 
      +                          else LATB = (PORTB & ~((1 << 0)));;
   617  0001B2  C00F  FF83         	movff	LCD_WriteByte@auxByte,3971	;volatile
   618  0001B6  5081               	movf	129,w,c	;volatile
   619  0001B8  0901               	iorlw	1
   620  0001BA  6E8A               	movwf	138,c	;volatile
   621  0001BC                     
   622                           ;src/app/display_lcd/display_lcd.c: 98:     _delay((unsigned long)((10)*(10000000/4000.0
      +                          )));
   623  0001BC  0E21               	movlw	33
   624  0001BE  6E0D               	movwf	??_LCD_WriteByte^0,c
   625  0001C0  0E76               	movlw	118
   626  0001C2                     u167:
   627  0001C2  2EE8               	decfsz	wreg,f,c
   628  0001C4  D7FE               	bra	u167
   629  0001C6  2E0D               	decfsz	??_LCD_WriteByte^0,f,c
   630  0001C8  D7FC               	bra	u167
   631  0001CA  D000               	nop2	
   632  0001CC  5081               	movf	129,w,c	;volatile
   633  0001CE  0BFE               	andlw	254
   634  0001D0  6E8A               	movwf	138,c	;volatile
   635  0001D2  0012               	return		;funcret
   636  0001D4                     __end_of_LCD_WriteByte:
   637                           	callstack 0
   638                           
   639 ;; *************** function _LCD_Command *****************
   640 ;; Defined at:
   641 ;;		line 55 in file "src/app/display_lcd/display_lcd.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  command         1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  command         1    1[COMRAM] unsigned char 
   646 ;;  commandAux      1    2[COMRAM] unsigned char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   656 ;;      Params:         0       0       0       0       0       0       0
   657 ;;      Locals:         2       0       0       0       0       0       0
   658 ;;      Temps:          1       0       0       0       0       0       0
   659 ;;      Totals:         3       0       0       0       0       0       0
   660 ;;Total ram usage:        3 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_LCD_Init
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text4
   671  0001D4                     __ptext4:
   672                           	callstack 0
   673  0001D4                     _LCD_Command:
   674                           	callstack 28
   675                           
   676                           ;incstack = 0
   677                           ;LCD_Command@command stored from wreg
   678  0001D4  6E0E               	movwf	LCD_Command@command^0,c
   679  0001D6  5081               	movf	129,w,c	;volatile
   680  0001D8  0BFD               	andlw	253
   681  0001DA  6E8A               	movwf	138,c	;volatile
   682  0001DC  5081               	movf	129,w,c	;volatile
   683  0001DE  0901               	iorlw	1
   684  0001E0  6E8A               	movwf	138,c	;volatile
   685  0001E2                     
   686                           ;src/app/display_lcd/display_lcd.c: 60:     commandAux = command >> 0x04;
   687  0001E2  380E               	swapf	LCD_Command@command^0,w,c
   688  0001E4  0B0F               	andlw	15
   689  0001E6  6E0F               	movwf	LCD_Command@commandAux^0,c
   690  0001E8                     
   691                           ;src/app/display_lcd/display_lcd.c: 64:     if(0x01 == 0x01) LATB = (PORTB | (1 << 0)); 
      +                          else LATB = (PORTB & ~((1 << 0)));;
   692  0001E8  C00F  FF83         	movff	LCD_Command@commandAux,3971	;volatile
   693  0001EC  5081               	movf	129,w,c	;volatile
   694  0001EE  0901               	iorlw	1
   695  0001F0  6E8A               	movwf	138,c	;volatile
   696  0001F2                     
   697                           ;src/app/display_lcd/display_lcd.c: 65:     _delay((unsigned long)((10)*(10000000/4000.0
      +                          )));
   698  0001F2  0E21               	movlw	33
   699  0001F4  6E0D               	movwf	??_LCD_Command^0,c
   700  0001F6  0E76               	movlw	118
   701  0001F8                     u177:
   702  0001F8  2EE8               	decfsz	wreg,f,c
   703  0001FA  D7FE               	bra	u177
   704  0001FC  2E0D               	decfsz	??_LCD_Command^0,f,c
   705  0001FE  D7FC               	bra	u177
   706  000200  D000               	nop2	
   707  000202  5081               	movf	129,w,c	;volatile
   708  000204  0BFE               	andlw	254
   709  000206  6E8A               	movwf	138,c	;volatile
   710  000208                     
   711                           ;src/app/display_lcd/display_lcd.c: 69:     commandAux = (command & 0x0F);
   712  000208  500E               	movf	LCD_Command@command^0,w,c
   713  00020A  0B0F               	andlw	15
   714  00020C  6E0F               	movwf	LCD_Command@commandAux^0,c
   715  00020E                     
   716                           ;src/app/display_lcd/display_lcd.c: 73:     if(0x01 == 0x01) LATB = (PORTB | (1 << 0)); 
      +                          else LATB = (PORTB & ~((1 << 0)));;
   717  00020E  C00F  FF83         	movff	LCD_Command@commandAux,3971	;volatile
   718  000212  5081               	movf	129,w,c	;volatile
   719  000214  0901               	iorlw	1
   720  000216  6E8A               	movwf	138,c	;volatile
   721  000218                     
   722                           ;src/app/display_lcd/display_lcd.c: 74:     _delay((unsigned long)((10)*(10000000/4000.0
      +                          )));
   723  000218  0E21               	movlw	33
   724  00021A  6E0D               	movwf	??_LCD_Command^0,c
   725  00021C  0E76               	movlw	118
   726  00021E                     u187:
   727  00021E  2EE8               	decfsz	wreg,f,c
   728  000220  D7FE               	bra	u187
   729  000222  2E0D               	decfsz	??_LCD_Command^0,f,c
   730  000224  D7FC               	bra	u187
   731  000226  D000               	nop2	
   732  000228  5081               	movf	129,w,c	;volatile
   733  00022A  0BFE               	andlw	254
   734  00022C  6E8A               	movwf	138,c	;volatile
   735  00022E  0012               	return		;funcret
   736  000230                     __end_of_LCD_Command:
   737                           	callstack 0
   738                           
   739 ;; *************** function _Interrupt_GlobalEnable *****************
   740 ;; Defined at:
   741 ;;		line 4 in file "src/pic18f4520/interrupt/interrupt.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		None
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   755 ;;      Params:         0       0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text5
   770  0002DA                     __ptext5:
   771                           	callstack 0
   772  0002DA                     _Interrupt_GlobalEnable:
   773                           	callstack 29
   774  0002DA                     
   775                           ;src/pic18f4520/interrupt/interrupt.c: 11:     RCONbits.IPEN = 0x01;
   776  0002DA  8ED0               	bsf	208,7,c	;volatile
   777                           
   778                           ;src/pic18f4520/interrupt/interrupt.c: 22:     INTCONbits.GIE_GIEH = 0x01;
   779  0002DC  8EF2               	bsf	242,7,c	;volatile
   780                           
   781                           ;src/pic18f4520/interrupt/interrupt.c: 33:     INTCONbits.PEIE_GIEL = 0x01;
   782  0002DE  8CF2               	bsf	242,6,c	;volatile
   783  0002E0  0012               	return		;funcret
   784  0002E2                     __end_of_Interrupt_GlobalEnable:
   785                           	callstack 0
   786                           
   787 ;; *************** function _TC0INT *****************
   788 ;; Defined at:
   789 ;;		line 85 in file "src/main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   803 ;;      Params:         0       0       0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		Interrupt level 2
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	intcode
   817  000008                     __pintcode:
   818                           	callstack 0
   819  000008                     _TC0INT:
   820                           	callstack 28
   821                           
   822                           ;incstack = 0
   823  000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   824  00000A  ED18  F001         	call	int_func,f	;refresh shadow registers
   825                           
   826                           	psect	intcode_body
   827  000230                     __pintcode_body:
   828                           	callstack 28
   829  000230                     int_func:
   830                           	callstack 28
   831  000230  0006               	pop		; remove dummy address from shadow register refresh
   832  000232                     
   833                           ;src/main.c: 87:      if (INTCONbits.TMR0IF == 0x01)
   834  000232  A4F2               	btfss	242,2,c	;volatile
   835  000234  EF1E  F001         	goto	i2u2_41
   836  000238  EF20  F001         	goto	i2u2_40
   837  00023C                     i2u2_41:
   838  00023C  EF2B  F001         	goto	i2l1041
   839  000240                     i2u2_40:
   840  000240                     
   841                           ;src/main.c: 88:      {;src/main.c: 90:       LATB = (PORTB ^ (1 << 2));;
   842  000240  5081               	movf	129,w,c	;volatile
   843  000242  0A04               	xorlw	4
   844  000244  6E8A               	movwf	138,c	;volatile
   845                           
   846                           ;src/main.c: 91:       LATB = (PORTB ^ (1 << 3));;
   847  000246  5081               	movf	129,w,c	;volatile
   848  000248  0A08               	xorlw	8
   849  00024A  6E8A               	movwf	138,c	;volatile
   850  00024C                     
   851                           ;src/main.c: 93:       TMR0 = 0xE17B;
   852  00024C  0EE1               	movlw	225
   853  00024E  6ED7               	movwf	215,c	;volatile
   854  000250  0E7B               	movlw	123
   855  000252  6ED6               	movwf	214,c	;volatile
   856  000254                     
   857                           ;src/main.c: 94:       INTCONbits.T0IF = 0x00;
   858  000254  94F2               	bcf	242,2,c	;volatile
   859  000256                     i2l1041:
   860                           
   861                           ;src/main.c: 97:     if(PIR1bits.RCIF)
   862  000256  AA9E               	btfss	158,5,c	;volatile
   863  000258  EF30  F001         	goto	i2u3_41
   864  00025C  EF32  F001         	goto	i2u3_40
   865  000260                     i2u3_41:
   866  000260  EF35  F001         	goto	i2l33
   867  000264                     i2u3_40:
   868  000264                     
   869                           ;src/main.c: 98:     {;src/main.c: 99:         count = RCREG;
   870  000264  CFAE F011          	movff	4014,_count	;volatile
   871                           
   872                           ;src/main.c: 101:         PIR1bits.RCIF = 0x00;
   873  000268  9A9E               	bcf	158,5,c	;volatile
   874  00026A                     i2l33:
   875  00026A  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   876  00026C  0011               	retfie		f
   877  00026E                     __end_of_TC0INT:
   878                           	callstack 0
   879  0000                     
   880                           	psect	rparam
   881  0000                     
   882                           	psect	temp
   883  000012                     btemp:
   884                           	callstack 0
   885  000012                     	ds	1
   886  0000                     int$flags	set	btemp
   887  0000                     wtemp8	set	btemp+1
   888  0000                     ttemp5	set	btemp+1
   889  0000                     ttemp6	set	btemp+4
   890  0000                     ttemp7	set	btemp+8
   891                           
   892                           	psect	idloc
   893                           
   894                           ;Config register IDLOC0 @ 0x200000
   895                           ;	unspecified, using default values
   896  200000                     	org	2097152
   897  200000  FF                 	db	255
   898                           
   899                           ;Config register IDLOC1 @ 0x200001
   900                           ;	unspecified, using default values
   901  200001                     	org	2097153
   902  200001  FF                 	db	255
   903                           
   904                           ;Config register IDLOC2 @ 0x200002
   905                           ;	unspecified, using default values
   906  200002                     	org	2097154
   907  200002  FF                 	db	255
   908                           
   909                           ;Config register IDLOC3 @ 0x200003
   910                           ;	unspecified, using default values
   911  200003                     	org	2097155
   912  200003  FF                 	db	255
   913                           
   914                           ;Config register IDLOC4 @ 0x200004
   915                           ;	unspecified, using default values
   916  200004                     	org	2097156
   917  200004  FF                 	db	255
   918                           
   919                           ;Config register IDLOC5 @ 0x200005
   920                           ;	unspecified, using default values
   921  200005                     	org	2097157
   922  200005  FF                 	db	255
   923                           
   924                           ;Config register IDLOC6 @ 0x200006
   925                           ;	unspecified, using default values
   926  200006                     	org	2097158
   927  200006  FF                 	db	255
   928                           
   929                           ;Config register IDLOC7 @ 0x200007
   930                           ;	unspecified, using default values
   931  200007                     	org	2097159
   932  200007  FF                 	db	255
   933                           
   934                           	psect	config
   935                           
   936                           ; Padding undefined space
   937  300000                     	org	3145728
   938  300000  FF                 	db	255
   939                           
   940                           ;Config register CONFIG1H @ 0x300001
   941                           ;	Oscillator Selection bits
   942                           ;	OSC = HS, HS oscillator
   943                           ;	Fail-Safe Clock Monitor Enable bit
   944                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   945                           ;	Internal/External Oscillator Switchover bit
   946                           ;	IESO = OFF, Oscillator Switchover mode disabled
   947  300001                     	org	3145729
   948  300001  02                 	db	2
   949                           
   950                           ;Config register CONFIG2L @ 0x300002
   951                           ;	Power-up Timer Enable bit
   952                           ;	PWRT = OFF, PWRT disabled
   953                           ;	Brown-out Reset Enable bits
   954                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   955                           ;	Brown Out Reset Voltage bits
   956                           ;	BORV = 3, Minimum setting
   957  300002                     	org	3145730
   958  300002  1F                 	db	31
   959                           
   960                           ;Config register CONFIG2H @ 0x300003
   961                           ;	Watchdog Timer Enable bit
   962                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   963                           ;	Watchdog Timer Postscale Select bits
   964                           ;	WDTPS = 32768, 1:32768
   965  300003                     	org	3145731
   966  300003  1E                 	db	30
   967                           
   968                           ; Padding undefined space
   969  300004                     	org	3145732
   970  300004  FF                 	db	255
   971                           
   972                           ;Config register CONFIG3H @ 0x300005
   973                           ;	CCP2 MUX bit
   974                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   975                           ;	PORTB A/D Enable bit
   976                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   977                           ;	Low-Power Timer1 Oscillator Enable bit
   978                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   979                           ;	MCLR Pin Enable bit
   980                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   981  300005                     	org	3145733
   982  300005  01                 	db	1
   983                           
   984                           ;Config register CONFIG4L @ 0x300006
   985                           ;	Stack Full/Underflow Reset Enable bit
   986                           ;	STVREN = ON, Stack full/underflow will cause Reset
   987                           ;	Single-Supply ICSP Enable bit
   988                           ;	LVP = OFF, Single-Supply ICSP disabled
   989                           ;	Extended Instruction Set Enable bit
   990                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   991                           ;	Background Debugger Enable bit
   992                           ;	DEBUG = 0x1, unprogrammed default
   993  300006                     	org	3145734
   994  300006  81                 	db	129
   995                           
   996                           ; Padding undefined space
   997  300007                     	org	3145735
   998  300007  FF                 	db	255
   999                           
  1000                           ;Config register CONFIG5L @ 0x300008
  1001                           ;	Code Protection bit
  1002                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1003                           ;	Code Protection bit
  1004                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1005                           ;	Code Protection bit
  1006                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1007                           ;	Code Protection bit
  1008                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1009  300008                     	org	3145736
  1010  300008  0F                 	db	15
  1011                           
  1012                           ;Config register CONFIG5H @ 0x300009
  1013                           ;	Boot Block Code Protection bit
  1014                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1015                           ;	Data EEPROM Code Protection bit
  1016                           ;	CPD = OFF, Data EEPROM not code-protected
  1017  300009                     	org	3145737
  1018  300009  C0                 	db	192
  1019                           
  1020                           ;Config register CONFIG6L @ 0x30000A
  1021                           ;	Write Protection bit
  1022                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1023                           ;	Write Protection bit
  1024                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1025                           ;	Write Protection bit
  1026                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1027                           ;	Write Protection bit
  1028                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1029  30000A                     	org	3145738
  1030  30000A  0F                 	db	15
  1031                           
  1032                           ;Config register CONFIG6H @ 0x30000B
  1033                           ;	Configuration Register Write Protection bit
  1034                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1035                           ;	Boot Block Write Protection bit
  1036                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1037                           ;	Data EEPROM Write Protection bit
  1038                           ;	WRTD = OFF, Data EEPROM not write-protected
  1039  30000B                     	org	3145739
  1040  30000B  E0                 	db	224
  1041                           
  1042                           ;Config register CONFIG7L @ 0x30000C
  1043                           ;	Table Read Protection bit
  1044                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1045                           ;	Table Read Protection bit
  1046                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1047                           ;	Table Read Protection bit
  1048                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1049                           ;	Table Read Protection bit
  1050                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1051  30000C                     	org	3145740
  1052  30000C  0F                 	db	15
  1053                           
  1054                           ;Config register CONFIG7H @ 0x30000D
  1055                           ;	Boot Block Table Read Protection bit
  1056                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1057  30000D                     	org	3145741
  1058  30000D  40                 	db	64
  1059                           tosu	equ	0xFFF
  1060                           tosh	equ	0xFFE
  1061                           tosl	equ	0xFFD
  1062                           stkptr	equ	0xFFC
  1063                           pclatu	equ	0xFFB
  1064                           pclath	equ	0xFFA
  1065                           pcl	equ	0xFF9
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           indf0	equ	0xFEF
  1073                           postinc0	equ	0xFEE
  1074                           postdec0	equ	0xFED
  1075                           preinc0	equ	0xFEC
  1076                           plusw0	equ	0xFEB
  1077                           fsr0h	equ	0xFEA
  1078                           fsr0l	equ	0xFE9
  1079                           wreg	equ	0xFE8
  1080                           indf1	equ	0xFE7
  1081                           postinc1	equ	0xFE6
  1082                           postdec1	equ	0xFE5
  1083                           preinc1	equ	0xFE4
  1084                           plusw1	equ	0xFE3
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           bsr	equ	0xFE0
  1088                           indf2	equ	0xFDF
  1089                           postinc2	equ	0xFDE
  1090                           postdec2	equ	0xFDD
  1091                           preinc2	equ	0xFDC
  1092                           plusw2	equ	0xFDB
  1093                           fsr2h	equ	0xFDA
  1094                           fsr2l	equ	0xFD9
  1095                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      4      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Timer0_Config@timerConfig	PTR struct . size(2) Largest target is 5
		 -> timerConfig(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_Command
    _LCD_Init->_LCD_WriteByte

Critical Paths under _TC0INT in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     284
             _Interrupt_GlobalEnable
                           _LCD_Init
                      _Timer0_Config
 ---------------------------------------------------------------------------------
 (1) _Timer0_Config                                        3     1      2     164
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     120
                                              3 COMRAM     1     1      0
                        _LCD_Command
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteByte                                        3     3      0      60
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      60
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_GlobalEnable                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TC0INT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_GlobalEnable
   _LCD_Init
     _LCD_Command
     _LCD_WriteByte
   _Timer0_Config

 _TC0INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      4      11       1       13.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      15        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 14 23:15:16 2021

                   ?_LCD_Command 000D                               l43 0280  
                             l46 029A                               l47 029A  
                             l39 0274                               l56 02E0  
                            l100 0176                              l130 0038  
                            l140 0070                              l124 0026  
                            l144 007C                              l163 00D8  
                            l156 00B0                              l148 0098  
                            l182 0180                              l158 00B6  
                            l167 01DC                              l184 0186  
                            l169 01E2                              l193 01D2  
                            l178 022E                              l901 0228  
                            l903 017A                              l921 01AC  
                            l913 0196                              l923 01B2  
                            l933 01CC                              l925 01B6  
                            l917 01A6                              l909 018C  
                            l935 02DA                              l919 01AC  
                            l951 0012                              l881 01F2  
                            l873 01D6                              l929 01BC  
                            l891 020E                              l955 001A  
                            l893 0212                              l885 0202  
                            l877 01E8                              l869 01D6  
                            l981 0058                              l973 003E  
                            l965 002C                              l887 0208  
                            l991 006A                              l959 0020  
                            l897 0218                              l889 0208  
                            l977 004C                              l969 0032  
                            l987 0064                              l979 0052  
                            l997 0076                              u110 014E  
                            u111 014A                              u127 0044  
                            u137 0088                              u147 00C2  
                            u157 019C                              u167 01C2  
                            u177 01F8                              u187 021E  
                            wreg 000FE8   __end_of_Interrupt_GlobalEnable 02E2  
                           l1001 0082                             l1011 009E  
                           l1005 0092                             l1101 014E  
                           l1031 00D2                             l1015 00A4  
                           l1103 0168                             l1111 026E  
                           l1025 00BC                             l1105 016A  
                           l1019 00AA                             l1107 016C  
                           l1123 0286                             l1029 00CC  
                           l1109 0174                             l1125 028A  
                           l1127 0296                             l1119 027A  
                           l1097 00DA                             l1099 00DC  
                           _LATB 000F8A                             _LATD 000F8C  
                           i2l33 026A                             _TMR0 000FD6  
                           _TRMT 007D61                             _main 026E  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0012                             start 000E  
                  _LCD_WriteByte 0178                     ___param_bank 000000  
               __end_of_LCD_Init 00DA                            ?_main 000D  
                          _RCREG 000FAE                            _SPBRG 000FAF  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TXREG 000FAD                            _count 0011  
                          tablat 000FF5            __end_of_Timer0_Config 0178  
                          ttemp5 0013                            ttemp6 0016  
                          ttemp7 001A                            status 000FD8  
                          wtemp8 0013                   ?_LCD_WriteByte 000D  
                __initialization 02A2                     __end_of_main 02A2  
                         ??_main 0011                    __activetblptr 000000  
                         _TC0INT 0008                           i2l1041 0256  
                         i2l1033 0232                           i2l1043 0264  
                         i2l1035 0240                           i2l1037 024C  
                         i2l1039 0254                           i2u2_40 0240  
                         i2u2_41 023C                           i2u3_40 0264  
                         i2u3_41 0260                           isa$std 000001  
           __size_of_LCD_Command 005C                     __pdataCOMRAM 0001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8               LCD_Command@command 000E  
                     __accesstop 0080          __end_of__initialization 02C4  
                      ?_LCD_Init 000D                  ??_LCD_WriteByte 000D  
                  ___rparam_used 000001                   __pcstackCOMRAM 000D  
                        ?_TC0INT 000D                       ??_LCD_Init 0010  
                __size_of_TC0INT 0266                          __Hparam 0000  
                        __Lparam 0000                          __pcinit 02A2  
                        __ramtop 0600                          __ptext0 026E  
                        __ptext1 00DA                          __ptext2 0012  
                        __ptext3 0178                          __ptext4 01D4  
                        __ptext5 02DA                        _T0CONbits 000FD5  
                 __pintcode_body 0230             end_of_initialization 02C4  
              LCD_WriteByte@byte 000E                          int_func 0230  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postinc0 000FEE           __size_of_Timer0_Config 009E  
       ??_Interrupt_GlobalEnable 000D                   __end_of_TC0INT 026E  
                      _TXSTAbits 000FAC                __size_of_LCD_Init 00C8  
                  ??_LCD_Command 000D                      _BAUDCONbits 000FB8  
                  __pidataCOMRAM 02CE              start_initialization 02A2  
                       ??_TC0INT 000D         Timer0_Config@timerConfig 000D  
                  _Timer0_Config 00DA            __end_of_LCD_WriteByte 01D4  
           LCD_WriteByte@auxByte 000F              __end_of_LCD_Command 0230  
__size_of_Interrupt_GlobalEnable 0008                      __pbssCOMRAM 0011  
                 ?_Timer0_Config 000D                        __pintcode 0008  
                       _LCD_Init 0012           _Interrupt_GlobalEnable 02DA  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
                       _RCONbits 000FD0                      _LCD_Command 01D4  
                ??_Timer0_Config 000F                      _INTCON2bits 000FF1  
                      copy_data0 02B6                         __Hrparam 0000  
                       __Lrparam 0000                    __size_of_main 0034  
                   _serialConfig 0001                         isa$xinst 000000  
                       int$flags 0012                       _INTCONbits 000FF2  
                       intlevel2 0000            LCD_Command@commandAux 000F  
                    _timerConfig 0008           __size_of_LCD_WriteByte 005C  
        ?_Interrupt_GlobalEnable 000D  
