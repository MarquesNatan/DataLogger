

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 02 12:17:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4520 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  00089A                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _serialConfig
    67  00089A  00                 	db	0
    68  00089B  00                 	db	0
    69  00089C  00                 	db	0
    70  00089D  2580               	dw	9600
    71  00089F  0000               	dw	0
    72                           
    73                           ;initializer for _global_timer_value
    74  0008A1  0001               	dw	1
    75  0008A3  0000               	dw	0
    76  0000                     _TMR0	set	4054
    77  0000                     _TRISC	set	3988
    78  0000                     _INTCON2bits	set	4081
    79  0000                     _T0CONbits	set	4053
    80  0000                     _TXREG	set	4013
    81  0000                     _PIE1bits	set	3997
    82  0000                     _RCSTAbits	set	4011
    83  0000                     _SPBRG	set	4015
    84  0000                     _TXSTAbits	set	4012
    85  0000                     _BAUDCONbits	set	4024
    86  0000                     _RCONbits	set	4048
    87  0000                     _PORTB	set	3969
    88  0000                     _LATB	set	3978
    89  0000                     _TRISB	set	3987
    90  0000                     _PORTD	set	3971
    91  0000                     _LATD	set	3980
    92  0000                     _TRISD	set	3989
    93  0000                     _RCREG	set	4014
    94  0000                     _PIR1bits	set	3998
    95  0000                     _INTCONbits	set	4082
    96  0000                     _TRMT	set	32097
    97                           
    98                           	psect	smallconst
    99  000600                     __psmallconst:
   100                           	callstack 0
   101  000600  00                 	db	0
   102  000601                     STR_1:
   103  000601  54                 	db	84	;'T'
   104  000602  45                 	db	69	;'E'
   105  000603  53                 	db	83	;'S'
   106  000604  54                 	db	84	;'T'
   107  000605  45                 	db	69	;'E'
   108  000606  20                 	db	32
   109  000607  41                 	db	65	;'A'
   110  000608  42                 	db	66	;'B'
   111  000609  43                 	db	67	;'C'
   112  00060A  00                 	db	0
   113  00060B  00                 	db	0	; dummy byte at the end
   114  0000                     
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118  00080A                     __pcinit:
   119                           	callstack 0
   120  00080A                     start_initialization:
   121                           	callstack 0
   122  00080A                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Initialize objects allocated to COMRAM (11 bytes)
   126                           ; load TBLPTR registers with __pidataCOMRAM
   127  00080A  0E9A               	movlw	low __pidataCOMRAM
   128  00080C  6EF6               	movwf	tblptrl,c
   129  00080E  0E08               	movlw	high __pidataCOMRAM
   130  000810  6EF7               	movwf	tblptrh,c
   131  000812  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   132  000814  6EF8               	movwf	tblptru,c
   133  000816  EE00  F023         	lfsr	0,__pdataCOMRAM
   134  00081A  EE10 F00B          	lfsr	1,11
   135  00081E                     copy_data0:
   136  00081E  0009               	tblrd		*+
   137  000820  CFF5 FFEE          	movff	tablat,postinc0
   138  000824  50E5               	movf	postdec1,w,c
   139  000826  50E1               	movf	fsr1l,w,c
   140  000828  E1FA               	bnz	copy_data0
   141                           
   142                           ; Clear objects allocated to COMRAM (16 bytes)
   143  00082A  EE00  F013         	lfsr	0,__pbssCOMRAM
   144  00082E  0E10               	movlw	16
   145  000830                     clear_0:
   146  000830  6AEE               	clrf	postinc0,c
   147  000832  06E8               	decf	wreg,f,c
   148  000834  E1FD               	bnz	clear_0
   149  000836                     end_of_initialization:
   150                           	callstack 0
   151  000836                     __end_of__initialization:
   152                           	callstack 0
   153  000836  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   154  000838  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   155  00083A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   156  00083C  6EF8               	movwf	tblptru,c
   157  00083E  0100               	movlb	0
   158  000840  EF47  F004         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161  000013                     __pbssCOMRAM:
   162                           	callstack 0
   163  000013                     _timerConfig:
   164                           	callstack 0
   165  000013                     	ds	5
   166  000018                     Timer0_WaitMS@timeStart:
   167                           	callstack 0
   168  000018                     	ds	4
   169  00001C                     _tickHook_func_prt:
   170                           	callstack 0
   171  00001C                     	ds	2
   172  00001E                     _humidity:
   173                           	callstack 0
   174  00001E                     	ds	2
   175  000020                     _temperature:
   176                           	callstack 0
   177  000020                     	ds	2
   178  000022                     _count:
   179                           	callstack 0
   180  000022                     	ds	1
   181                           
   182                           	psect	dataCOMRAM
   183  000023                     __pdataCOMRAM:
   184                           	callstack 0
   185  000023                     _serialConfig:
   186                           	callstack 0
   187  000023                     	ds	7
   188  00002A                     _global_timer_value:
   189                           	callstack 0
   190  00002A                     	ds	4
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	callstack 0
   195  000001                     Serial_Transmit@data:
   196                           	callstack 0
   197  000001                     tickHook_Execute@global_timer_value:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x0
   201  000001                     	ds	2
   202  000003                     ??_sendNibble:
   203  000003                     ??_Display_WriteByte:
   204  000003                     Display_SendByte@comm:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x2
   208  000003                     	ds	1
   209  000004                     ??_Display_SendByte:
   210  000004                     sendNibble@nibble:
   211                           	callstack 0
   212  000004                     Display_WriteByte@byte:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x3
   216  000004                     	ds	1
   217  000005                     Display_SendByte@byte:
   218                           	callstack 0
   219  000005                     Display_WriteByte@auxByte:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x4
   223  000005                     	ds	1
   224  000006                     Display_SendByte@auxByte:
   225                           	callstack 0
   226  000006                     Display_WriteString@string:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x5
   230  000006                     	ds	2
   231  000008                     Display_WriteString@length:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x7
   235  000008                     	ds	1
   236  000009                     ??_Display_WriteString:
   237                           
   238                           ; 1 bytes @ 0x8
   239  000009                     	ds	7
   240  000010                     Display_WriteString@auxLength:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xF
   244  000010                     	ds	1
   245  000011                     ??_DisplayLCD_Init:
   246                           
   247                           ; 1 bytes @ 0x10
   248  000011                     	ds	2
   249  000013                     
   250                           ; 1 bytes @ 0x12
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 57 in file "src/main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels required when called: 5
   276 ;; This function calls:
   277 ;;		_DisplayLCD_Init
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text0
   284  00088E                     __ptext0:
   285                           	callstack 0
   286  00088E                     _main:
   287                           	callstack 26
   288  00088E                     
   289                           ;src/main.c: 64:     DisplayLCD_Init();
   290  00088E  EC45  F003         	call	_DisplayLCD_Init	;wreg free
   291  000892                     l39:
   292  000892  EF49  F004         	goto	l39
   293  000896  EF07  F000         	goto	start
   294  00089A                     __end_of_main:
   295                           	callstack 0
   296                           
   297 ;; *************** function _DisplayLCD_Init *****************
   298 ;; Defined at:
   299 ;;		line 10 in file "src/app/display_lcd/display_lcd.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   313 ;;      Params:         0       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0
   315 ;;      Temps:          2       0       0       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 4
   320 ;; This function calls:
   321 ;;		_Display_SendByte
   322 ;;		_Display_WriteString
   323 ;;		_sendNibble
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text1
   330  00068A                     __ptext1:
   331                           	callstack 0
   332  00068A                     _DisplayLCD_Init:
   333                           	callstack 26
   334  00068A                     
   335                           ;src/app/display_lcd/display_lcd.c: 12:     _delay((unsigned long)((500)*(10000000UL/400
      +                          0.0)));
   336  00068A  0E07               	movlw	7
   337  00068C  6E12               	movwf	(??_DisplayLCD_Init+1)^0,c
   338  00068E  0E58               	movlw	88
   339  000690  6E11               	movwf	??_DisplayLCD_Init^0,c
   340  000692  0E5A               	movlw	90
   341  000694                     u317:
   342  000694  2EE8               	decfsz	wreg,f,c
   343  000696  D7FE               	bra	u317
   344  000698  2E11               	decfsz	??_DisplayLCD_Init^0,f,c
   345  00069A  D7FC               	bra	u317
   346  00069C  2E12               	decfsz	(??_DisplayLCD_Init+1)^0,f,c
   347  00069E  D7FA               	bra	u317
   348  0006A0                     
   349                           ;src/app/display_lcd/display_lcd.c: 13:     TRISB = 0x00;;
   350  0006A0  0E00               	movlw	0
   351  0006A2  6E93               	movwf	147,c	;volatile
   352  0006A4                     
   353                           ;src/app/display_lcd/display_lcd.c: 16:     sendNibble(0x20);
   354  0006A4  0E20               	movlw	32
   355  0006A6  EC22  F004         	call	_sendNibble
   356  0006AA                     
   357                           ;src/app/display_lcd/display_lcd.c: 17:     sendNibble(0x20);
   358  0006AA  0E20               	movlw	32
   359  0006AC  EC22  F004         	call	_sendNibble
   360  0006B0                     
   361                           ;src/app/display_lcd/display_lcd.c: 18:     sendNibble(0x30);
   362  0006B0  0E30               	movlw	48
   363  0006B2  EC22  F004         	call	_sendNibble
   364  0006B6                     
   365                           ;src/app/display_lcd/display_lcd.c: 25:     Display_SendByte((0b00000100 | 0b00000010 | 
      +                          0b00000000), 0);
   366  0006B6  0E00               	movlw	0
   367  0006B8  6E03               	movwf	Display_SendByte@comm^0,c
   368  0006BA  0E06               	movlw	6
   369  0006BC  EC06  F003         	call	_Display_SendByte
   370  0006C0                     
   371                           ;src/app/display_lcd/display_lcd.c: 33:     Display_SendByte((0b00001000 | 0b00000100 | 
      +                          0b00000010 | 0b00000001 ), 0);
   372  0006C0  0E00               	movlw	0
   373  0006C2  6E03               	movwf	Display_SendByte@comm^0,c
   374  0006C4  0E0F               	movlw	15
   375  0006C6  EC06  F003         	call	_Display_SendByte
   376  0006CA                     
   377                           ;src/app/display_lcd/display_lcd.c: 35:     Display_SendByte(0b00000001, 0);
   378  0006CA  0E00               	movlw	0
   379  0006CC  6E03               	movwf	Display_SendByte@comm^0,c
   380  0006CE  0E01               	movlw	1
   381  0006D0  EC06  F003         	call	_Display_SendByte
   382  0006D4                     
   383                           ;src/app/display_lcd/display_lcd.c: 37:    _delay((unsigned long)((2)*(10000000UL/4000.0
      +                          )));
   384  0006D4  0E07               	movlw	7
   385  0006D6  6E11               	movwf	??_DisplayLCD_Init^0,c
   386  0006D8  0E7D               	movlw	125
   387  0006DA                     u327:
   388  0006DA  2EE8               	decfsz	wreg,f,c
   389  0006DC  D7FE               	bra	u327
   390  0006DE  2E11               	decfsz	??_DisplayLCD_Init^0,f,c
   391  0006E0  D7FC               	bra	u327
   392  0006E2  F000               	nop	
   393  0006E4                     
   394                           ;src/app/display_lcd/display_lcd.c: 39:    Display_WriteString("TESTE ABC", sizeof("TEST
      +                          E ABC"));
   395  0006E4  0E01               	movlw	low STR_1
   396  0006E6  6E06               	movwf	Display_WriteString@string^0,c
   397  0006E8  0E06               	movlw	high STR_1
   398  0006EA  6E07               	movwf	(Display_WriteString@string+1)^0,c
   399  0006EC  0E0A               	movlw	10
   400  0006EE  6E08               	movwf	Display_WriteString@length^0,c
   401  0006F0  ECB0  F003         	call	_Display_WriteString	;wreg free
   402  0006F4  0012               	return		;funcret
   403  0006F6                     __end_of_DisplayLCD_Init:
   404                           	callstack 0
   405                           
   406 ;; *************** function _sendNibble *****************
   407 ;; Defined at:
   408 ;;		line 43 in file "src/app/display_lcd/display_lcd.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  nibble          1    wreg     unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  nibble          1    3[COMRAM] unsigned char 
   413 ;;  auxNibble       1    0        unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         1       0       0       0       0       0       0
   425 ;;      Temps:          1       0       0       0       0       0       0
   426 ;;      Totals:         2       0       0       0       0       0       0
   427 ;;Total ram usage:        2 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; Hardware stack levels required when called: 2
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_DisplayLCD_Init
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text2
   438  000844                     __ptext2:
   439                           	callstack 0
   440  000844                     _sendNibble:
   441                           	callstack 27
   442                           
   443                           ;incstack = 0
   444                           ;sendNibble@nibble stored from wreg
   445  000844  6E04               	movwf	sendNibble@nibble^0,c
   446  000846  5081               	movf	129,w,c	;volatile
   447  000848  0BF7               	andlw	247
   448  00084A  6E8A               	movwf	138,c	;volatile
   449  00084C                     
   450                           ;src/app/display_lcd/display_lcd.c: 50:     if(0x01 == 0x01) LATB = (PORTB | (1 << 2)); 
      +                          else LATB = (PORTB & ~((1 << 2)));;
   451  00084C  5081               	movf	129,w,c	;volatile
   452  00084E  0B0F               	andlw	15
   453  000850  1004               	iorwf	sendNibble@nibble^0,w,c
   454  000852  6E8A               	movwf	138,c	;volatile
   455  000854  5081               	movf	129,w,c	;volatile
   456  000856  0904               	iorlw	4
   457  000858  6E8A               	movwf	138,c	;volatile
   458  00085A                     
   459                           ;src/app/display_lcd/display_lcd.c: 51:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
   460  00085A  0E53               	movlw	83
   461  00085C                     u337:
   462  00085C  2EE8               	decfsz	wreg,f,c
   463  00085E  D7FE               	bra	u337
   464  000860  F000               	nop	
   465  000862  5081               	movf	129,w,c	;volatile
   466  000864  0BFB               	andlw	251
   467  000866  6E8A               	movwf	138,c	;volatile
   468  000868                     
   469                           ;src/app/display_lcd/display_lcd.c: 54:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
   470  000868  0E04               	movlw	4
   471  00086A  6E03               	movwf	??_sendNibble^0,c
   472  00086C  0E3E               	movlw	62
   473  00086E                     u347:
   474  00086E  2EE8               	decfsz	wreg,f,c
   475  000870  D7FE               	bra	u347
   476  000872  2E03               	decfsz	??_sendNibble^0,f,c
   477  000874  D7FC               	bra	u347
   478  000876  0012               	return		;funcret
   479  000878                     __end_of_sendNibble:
   480                           	callstack 0
   481                           
   482 ;; *************** function _Display_WriteString *****************
   483 ;; Defined at:
   484 ;;		line 109 in file "src/app/display_lcd/display_lcd.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  string          2    5[COMRAM] PTR unsigned char 
   487 ;;		 -> STR_1(10), 
   488 ;;  length          1    7[COMRAM] unsigned char 
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  auxLength       1   15[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   500 ;;      Params:         3       0       0       0       0       0       0
   501 ;;      Locals:         1       0       0       0       0       0       0
   502 ;;      Temps:          7       0       0       0       0       0       0
   503 ;;      Totals:        11       0       0       0       0       0       0
   504 ;;Total ram usage:       11 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; Hardware stack levels required when called: 3
   507 ;; This function calls:
   508 ;;		_Display_WriteByte
   509 ;; This function is called by:
   510 ;;		_DisplayLCD_Init
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text3
   515  000760                     __ptext3:
   516                           	callstack 0
   517  000760                     _Display_WriteString:
   518                           	callstack 26
   519  000760                     
   520                           ;src/app/display_lcd/display_lcd.c: 109: void Display_WriteString(char* string, uint8_t 
      +                          length);src/app/display_lcd/display_lcd.c: 110: {;src/app/display_lcd/display_lcd.c: 111
      +                          :     uint8_t auxLength = 0x00;
   521  000760  0E00               	movlw	0
   522  000762  6E10               	movwf	Display_WriteString@auxLength^0,c
   523                           
   524                           ;src/app/display_lcd/display_lcd.c: 112:     for(auxLength = 0; auxLength < length - 1; 
      +                          auxLength++)
   525  000764  0E00               	movlw	0
   526  000766  6E10               	movwf	Display_WriteString@auxLength^0,c
   527  000768  EFC5  F003         	goto	l1292
   528  00076C                     l1288:
   529                           
   530                           ;src/app/display_lcd/display_lcd.c: 113:     {;src/app/display_lcd/display_lcd.c: 114:  
      +                                 Display_WriteByte((uint8_t)string[auxLength]);
   531  00076C  5010               	movf	Display_WriteString@auxLength^0,w,c
   532  00076E  2406               	addwf	Display_WriteString@string^0,w,c
   533  000770  6E09               	movwf	??_Display_WriteString^0,c
   534  000772  0E00               	movlw	0
   535  000774  2007               	addwfc	(Display_WriteString@string+1)^0,w,c
   536  000776  6E0A               	movwf	(??_Display_WriteString+1)^0,c
   537  000778  C009  FFF6         	movff	??_Display_WriteString,tblptrl
   538  00077C  C00A  FFF7         	movff	??_Display_WriteString+1,tblptrh
   539  000780                     	if	0	;tblptru may be non-zero
   540  000780                     	endif
   541  000780                     	if	0	;tblptru may be non-zero
   542  000780                     	endif
   543  000780  0008               	tblrd		*
   544  000782  50F5               	movf	tablat,w,c
   545  000784  EC7B  F003         	call	_Display_WriteByte
   546  000788                     
   547                           ;src/app/display_lcd/display_lcd.c: 115:     }
   548  000788  2A10               	incf	Display_WriteString@auxLength^0,f,c
   549  00078A                     l1292:
   550  00078A  0EFF               	movlw	255
   551  00078C  6E09               	movwf	??_Display_WriteString^0,c
   552  00078E  0EFF               	movlw	255
   553  000790  6E0A               	movwf	(??_Display_WriteString+1)^0,c
   554  000792  5008               	movf	Display_WriteString@length^0,w,c
   555  000794  6E0B               	movwf	(??_Display_WriteString+2)^0,c
   556  000796  6A0C               	clrf	(??_Display_WriteString+3)^0,c
   557  000798  5009               	movf	??_Display_WriteString^0,w,c
   558  00079A  260B               	addwf	(??_Display_WriteString+2)^0,f,c
   559  00079C  500A               	movf	(??_Display_WriteString+1)^0,w,c
   560  00079E  220C               	addwfc	(??_Display_WriteString+3)^0,f,c
   561  0007A0  5010               	movf	Display_WriteString@auxLength^0,w,c
   562  0007A2  6E0D               	movwf	(??_Display_WriteString+4)^0,c
   563  0007A4  6A0E               	clrf	(??_Display_WriteString+5)^0,c
   564  0007A6  500B               	movf	(??_Display_WriteString+2)^0,w,c
   565  0007A8  5C0D               	subwf	(??_Display_WriteString+4)^0,w,c
   566  0007AA  500E               	movf	(??_Display_WriteString+5)^0,w,c
   567  0007AC  0A80               	xorlw	128
   568  0007AE  6E0F               	movwf	(??_Display_WriteString+6)^0,c
   569  0007B0  500C               	movf	(??_Display_WriteString+3)^0,w,c
   570  0007B2  0A80               	xorlw	128
   571  0007B4  580F               	subwfb	(??_Display_WriteString+6)^0,w,c
   572  0007B6  A0D8               	btfss	status,0,c
   573  0007B8  EFE0  F003         	goto	u261
   574  0007BC  EFE2  F003         	goto	u260
   575  0007C0                     u261:
   576  0007C0  EFB6  F003         	goto	l1288
   577  0007C4                     u260:
   578  0007C4  0012               	return		;funcret
   579  0007C6                     __end_of_Display_WriteString:
   580                           	callstack 0
   581                           
   582 ;; *************** function _Display_WriteByte *****************
   583 ;; Defined at:
   584 ;;		line 84 in file "src/app/display_lcd/display_lcd.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  byte            1    wreg     unsigned char 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  byte            1    3[COMRAM] unsigned char 
   589 ;;  auxByte         1    4[COMRAM] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   599 ;;      Params:         0       0       0       0       0       0       0
   600 ;;      Locals:         2       0       0       0       0       0       0
   601 ;;      Temps:          1       0       0       0       0       0       0
   602 ;;      Totals:         3       0       0       0       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 2
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_Display_WriteString
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text4
   614  0006F6                     __ptext4:
   615                           	callstack 0
   616  0006F6                     _Display_WriteByte:
   617                           	callstack 26
   618                           
   619                           ;incstack = 0
   620                           ;Display_WriteByte@byte stored from wreg
   621  0006F6  6E04               	movwf	Display_WriteByte@byte^0,c
   622  0006F8  5081               	movf	129,w,c	;volatile
   623  0006FA  0908               	iorlw	8
   624  0006FC  6E8A               	movwf	138,c	;volatile
   625  0006FE                     
   626                           ;src/app/display_lcd/display_lcd.c: 89:     auxByte = (byte & 0xF0);
   627  0006FE  5004               	movf	Display_WriteByte@byte^0,w,c
   628  000700  0BF0               	andlw	240
   629  000702  6E05               	movwf	Display_WriteByte@auxByte^0,c
   630                           
   631                           ;src/app/display_lcd/display_lcd.c: 90:     LATB = ((PORTB & 0x0F) | auxByte);;
   632  000704  5081               	movf	129,w,c	;volatile
   633  000706  0B0F               	andlw	15
   634  000708  1005               	iorwf	Display_WriteByte@auxByte^0,w,c
   635  00070A  6E8A               	movwf	138,c	;volatile
   636  00070C  5081               	movf	129,w,c	;volatile
   637  00070E  0BFB               	andlw	251
   638  000710  6E8A               	movwf	138,c	;volatile
   639  000712  5081               	movf	129,w,c	;volatile
   640  000714  0904               	iorlw	4
   641  000716  6E8A               	movwf	138,c	;volatile
   642  000718                     
   643                           ;src/app/display_lcd/display_lcd.c: 94:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
   644  000718  0E53               	movlw	83
   645  00071A                     u357:
   646  00071A  2EE8               	decfsz	wreg,f,c
   647  00071C  D7FE               	bra	u357
   648  00071E  F000               	nop	
   649  000720  5081               	movf	129,w,c	;volatile
   650  000722  0BFB               	andlw	251
   651  000724  6E8A               	movwf	138,c	;volatile
   652  000726                     
   653                           ;src/app/display_lcd/display_lcd.c: 98:     auxByte = (byte << 0x04);
   654  000726  3804               	swapf	Display_WriteByte@byte^0,w,c
   655  000728  0BF0               	andlw	240
   656  00072A  6E05               	movwf	Display_WriteByte@auxByte^0,c
   657                           
   658                           ;src/app/display_lcd/display_lcd.c: 99:     LATB = ((PORTB & 0x0F) | auxByte);;
   659  00072C  5081               	movf	129,w,c	;volatile
   660  00072E  0B0F               	andlw	15
   661  000730  1005               	iorwf	Display_WriteByte@auxByte^0,w,c
   662  000732  6E8A               	movwf	138,c	;volatile
   663  000734  5081               	movf	129,w,c	;volatile
   664  000736  0BFB               	andlw	251
   665  000738  6E8A               	movwf	138,c	;volatile
   666  00073A  5081               	movf	129,w,c	;volatile
   667  00073C  0904               	iorlw	4
   668  00073E  6E8A               	movwf	138,c	;volatile
   669  000740                     
   670                           ;src/app/display_lcd/display_lcd.c: 103:     _delay((unsigned long)((100)*(10000000UL/40
      +                          00000.0)));
   671  000740  0E53               	movlw	83
   672  000742                     u367:
   673  000742  2EE8               	decfsz	wreg,f,c
   674  000744  D7FE               	bra	u367
   675  000746  F000               	nop	
   676  000748  5081               	movf	129,w,c	;volatile
   677  00074A  0BFB               	andlw	251
   678  00074C  6E8A               	movwf	138,c	;volatile
   679  00074E                     
   680                           ;src/app/display_lcd/display_lcd.c: 106:     _delay((unsigned long)((2)*(10000000UL/4000
      +                          .0)));
   681  00074E  0E07               	movlw	7
   682  000750  6E03               	movwf	??_Display_WriteByte^0,c
   683  000752  0E7D               	movlw	125
   684  000754                     u377:
   685  000754  2EE8               	decfsz	wreg,f,c
   686  000756  D7FE               	bra	u377
   687  000758  2E03               	decfsz	??_Display_WriteByte^0,f,c
   688  00075A  D7FC               	bra	u377
   689  00075C  F000               	nop	
   690  00075E  0012               	return		;funcret
   691  000760                     __end_of_Display_WriteByte:
   692                           	callstack 0
   693                           
   694 ;; *************** function _Display_SendByte *****************
   695 ;; Defined at:
   696 ;;		line 57 in file "src/app/display_lcd/display_lcd.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  byte            1    wreg     unsigned char 
   699 ;;  comm            1    2[COMRAM] unsigned char 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  byte            1    4[COMRAM] unsigned char 
   702 ;;  auxByte         1    5[COMRAM] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   712 ;;      Params:         1       0       0       0       0       0       0
   713 ;;      Locals:         2       0       0       0       0       0       0
   714 ;;      Temps:          1       0       0       0       0       0       0
   715 ;;      Totals:         4       0       0       0       0       0       0
   716 ;;Total ram usage:        4 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 2
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_DisplayLCD_Init
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text5
   727  00060C                     __ptext5:
   728                           	callstack 0
   729  00060C                     _Display_SendByte:
   730                           	callstack 27
   731                           
   732                           ;incstack = 0
   733                           ;Display_SendByte@byte stored from wreg
   734  00060C  6E05               	movwf	Display_SendByte@byte^0,c
   735  00060E                     
   736                           ;src/app/display_lcd/display_lcd.c: 61:     if(comm == 0x01) LATB = (PORTB | (1 << 3)); 
      +                          else LATB = (PORTB & ~((1 << 3)));;
   737  00060E  0403               	decf	Display_SendByte@comm^0,w,c
   738  000610  A4D8               	btfss	status,2,c
   739  000612  EF0D  F003         	goto	u251
   740  000616  EF0F  F003         	goto	u250
   741  00061A                     u251:
   742  00061A  EF14  F003         	goto	l1256
   743  00061E                     u250:
   744  00061E  5081               	movf	129,w,c	;volatile
   745  000620  0908               	iorlw	8
   746  000622  6E8A               	movwf	138,c	;volatile
   747  000624  EF17  F003         	goto	l128
   748  000628                     l1256:
   749  000628  5081               	movf	129,w,c	;volatile
   750  00062A  0BF7               	andlw	247
   751  00062C  6E8A               	movwf	138,c	;volatile
   752  00062E                     l128:
   753                           
   754                           ;src/app/display_lcd/display_lcd.c: 63:     auxByte = (byte & 0xF0);
   755  00062E  5005               	movf	Display_SendByte@byte^0,w,c
   756  000630  0BF0               	andlw	240
   757  000632  6E06               	movwf	Display_SendByte@auxByte^0,c
   758                           
   759                           ;src/app/display_lcd/display_lcd.c: 65:     LATB = ((PORTB & 0x0F) | auxByte);;
   760  000634  5081               	movf	129,w,c	;volatile
   761  000636  0B0F               	andlw	15
   762  000638  1006               	iorwf	Display_SendByte@auxByte^0,w,c
   763  00063A  6E8A               	movwf	138,c	;volatile
   764  00063C  5081               	movf	129,w,c	;volatile
   765  00063E  0BFB               	andlw	251
   766  000640  6E8A               	movwf	138,c	;volatile
   767  000642  5081               	movf	129,w,c	;volatile
   768  000644  0904               	iorlw	4
   769  000646  6E8A               	movwf	138,c	;volatile
   770  000648                     
   771                           ;src/app/display_lcd/display_lcd.c: 69:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
   772  000648  0E53               	movlw	83
   773  00064A                     u387:
   774  00064A  2EE8               	decfsz	wreg,f,c
   775  00064C  D7FE               	bra	u387
   776  00064E  F000               	nop	
   777  000650  5081               	movf	129,w,c	;volatile
   778  000652  0BFB               	andlw	251
   779  000654  6E8A               	movwf	138,c	;volatile
   780  000656                     
   781                           ;src/app/display_lcd/display_lcd.c: 72:     auxByte = (byte << 0x04);
   782  000656  3805               	swapf	Display_SendByte@byte^0,w,c
   783  000658  0BF0               	andlw	240
   784  00065A  6E06               	movwf	Display_SendByte@auxByte^0,c
   785  00065C                     
   786                           ;src/app/display_lcd/display_lcd.c: 74:     LATB = auxByte;;
   787  00065C  C006  FF8A         	movff	Display_SendByte@auxByte,3978	;volatile
   788  000660  5081               	movf	129,w,c	;volatile
   789  000662  0BFB               	andlw	251
   790  000664  6E8A               	movwf	138,c	;volatile
   791  000666  5081               	movf	129,w,c	;volatile
   792  000668  0904               	iorlw	4
   793  00066A  6E8A               	movwf	138,c	;volatile
   794  00066C                     
   795                           ;src/app/display_lcd/display_lcd.c: 78:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
   796  00066C  0E53               	movlw	83
   797  00066E                     u397:
   798  00066E  2EE8               	decfsz	wreg,f,c
   799  000670  D7FE               	bra	u397
   800  000672  F000               	nop	
   801  000674  5081               	movf	129,w,c	;volatile
   802  000676  0BFB               	andlw	251
   803  000678  6E8A               	movwf	138,c	;volatile
   804  00067A                     
   805                           ;src/app/display_lcd/display_lcd.c: 81:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
   806  00067A  0E04               	movlw	4
   807  00067C  6E04               	movwf	??_Display_SendByte^0,c
   808  00067E  0E3E               	movlw	62
   809  000680                     u407:
   810  000680  2EE8               	decfsz	wreg,f,c
   811  000682  D7FE               	bra	u407
   812  000684  2E04               	decfsz	??_Display_SendByte^0,f,c
   813  000686  D7FC               	bra	u407
   814  000688  0012               	return		;funcret
   815  00068A                     __end_of_Display_SendByte:
   816                           	callstack 0
   817                           
   818 ;; *************** function _TC0INT *****************
   819 ;; Defined at:
   820 ;;		line 41 in file "src/main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   834 ;;      Params:         0       0       0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 1
   841 ;; This function calls:
   842 ;;		_Serial_Transmit
   843 ;;		_tickHook_Execute
   844 ;; This function is called by:
   845 ;;		Interrupt level 2
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	intcode
   850  000008                     __pintcode:
   851                           	callstack 0
   852  000008                     _TC0INT:
   853                           	callstack 26
   854                           
   855                           ;incstack = 0
   856  000008  822E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   857  00000A  EDE3  F003         	call	int_func,f	;refresh shadow registers
   858                           
   859                           	psect	intcode_body
   860  0007C6                     __pintcode_body:
   861                           	callstack 26
   862  0007C6                     int_func:
   863                           	callstack 26
   864  0007C6  0006               	pop		; remove dummy address from shadow register refresh
   865  0007C8                     
   866                           ;src/main.c: 42:     if (INTCONbits.TMR0IF == 0x01) {
   867  0007C8  A4F2               	btfss	242,2,c	;volatile
   868  0007CA  EFE9  F003         	goto	i2u28_41
   869  0007CE  EFEB  F003         	goto	i2u28_40
   870  0007D2                     i2u28_41:
   871  0007D2  EFF6  F003         	goto	i2l1326
   872  0007D6                     i2u28_40:
   873  0007D6                     
   874                           ;src/main.c: 43:         tickHook_Execute(&global_timer_value);
   875  0007D6  0E2A               	movlw	low _global_timer_value
   876  0007D8  6E01               	movwf	tickHook_Execute@global_timer_value^0,c
   877  0007DA  0E00               	movlw	high _global_timer_value
   878  0007DC  6E02               	movwf	(tickHook_Execute@global_timer_value+1)^0,c
   879  0007DE  EC53  F004         	call	_tickHook_Execute	;wreg free
   880  0007E2                     
   881                           ;src/main.c: 44:         TMR0 = 0xFB1E;
   882  0007E2  0EFB               	movlw	251
   883  0007E4  6ED7               	movwf	215,c	;volatile
   884  0007E6  0E1E               	movlw	30
   885  0007E8  6ED6               	movwf	214,c	;volatile
   886  0007EA                     
   887                           ;src/main.c: 45:         INTCONbits.T0IF = 0x00;
   888  0007EA  94F2               	bcf	242,2,c	;volatile
   889  0007EC                     i2l1326:
   890                           
   891                           ;src/main.c: 48:     if (PIR1bits.RCIF) {
   892  0007EC  AA9E               	btfss	158,5,c	;volatile
   893  0007EE  EFFB  F003         	goto	i2u29_41
   894  0007F2  EFFD  F003         	goto	i2u29_40
   895  0007F6                     i2u29_41:
   896  0007F6  EF03  F004         	goto	i2l34
   897  0007FA                     i2u29_40:
   898  0007FA                     
   899                           ;src/main.c: 49:         count = RCREG;
   900  0007FA  CFAE F022          	movff	4014,_count	;volatile
   901  0007FE                     
   902                           ;src/main.c: 50:         Serial_Transmit(count);
   903  0007FE  5022               	movf	_count^0,w,c
   904  000800  EC3C  F004         	call	_Serial_Transmit
   905  000804                     
   906                           ;src/main.c: 52:         PIR1bits.RCIF = 0x00;
   907  000804  9A9E               	bcf	158,5,c	;volatile
   908  000806                     i2l34:
   909  000806  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   910  000808  0011               	retfie		f
   911  00080A                     __end_of_TC0INT:
   912                           	callstack 0
   913                           
   914 ;; *************** function _tickHook_Execute *****************
   915 ;; Defined at:
   916 ;;		line 89 in file "src/pic18f4520/timer/timer.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  global_timer    2    0[COMRAM] PTR unsigned long 
   919 ;;		 -> global_timer_value(4), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   931 ;;      Params:         2       0       0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0
   934 ;;      Totals:         2       0       0       0       0       0       0
   935 ;;Total ram usage:        2 bytes
   936 ;; Hardware stack levels used: 1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_TC0INT
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text7
   945  0008A6                     __ptext7:
   946                           	callstack 0
   947  0008A6                     _tickHook_Execute:
   948                           	callstack 26
   949  0008A6  0012               	return		;funcret
   950  0008A8                     __end_of_tickHook_Execute:
   951                           	callstack 0
   952                           
   953 ;; *************** function _Serial_Transmit *****************
   954 ;; Defined at:
   955 ;;		line 132 in file "src/pic18f4520/serial/serial.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  data            1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  data            1    0[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   969 ;;      Params:         0       0       0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0
   972 ;;      Totals:         1       0       0       0       0       0       0
   973 ;;Total ram usage:        1 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_TC0INT
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text8
   983  000878                     __ptext8:
   984                           	callstack 0
   985  000878                     _Serial_Transmit:
   986                           	callstack 26
   987                           
   988                           ;incstack = 0
   989                           ;Serial_Transmit@data stored from wreg
   990  000878  6E01               	movwf	Serial_Transmit@data^0,c
   991  00087A                     
   992                           ;src/pic18f4520/serial/serial.c: 132: void Serial_Transmit(uint8_t data);src/pic18f4520/
      +                          serial/serial.c: 133: {;src/pic18f4520/serial/serial.c: 134:     TXREG = data;
   993  00087A  C001  FFAD         	movff	Serial_Transmit@data,4013	;volatile
   994  00087E                     i2l197:
   995  00087E  A2AC               	btfss	4012,1,c	;volatile
   996  000880  EF44  F004         	goto	i2u27_41
   997  000884  EF46  F004         	goto	i2u27_40
   998  000888                     i2u27_41:
   999  000888  EF3F  F004         	goto	i2l197
  1000  00088C                     i2u27_40:
  1001  00088C  0012               	return		;funcret
  1002  00088E                     __end_of_Serial_Transmit:
  1003                           	callstack 0
  1004                           
  1005                           	psect	rparam
  1006  0000                     
  1007                           	psect	temp
  1008  00002E                     btemp:
  1009                           	callstack 0
  1010  00002E                     	ds	1
  1011  0000                     int$flags	set	btemp
  1012  0000                     wtemp8	set	btemp+1
  1013  0000                     ttemp5	set	btemp+1
  1014  0000                     ttemp6	set	btemp+4
  1015  0000                     ttemp7	set	btemp+8
  1016                           
  1017                           	psect	idloc
  1018                           
  1019                           ;Config register IDLOC0 @ 0x200000
  1020                           ;	unspecified, using default values
  1021  200000                     	org	2097152
  1022  200000  FF                 	db	255
  1023                           
  1024                           ;Config register IDLOC1 @ 0x200001
  1025                           ;	unspecified, using default values
  1026  200001                     	org	2097153
  1027  200001  FF                 	db	255
  1028                           
  1029                           ;Config register IDLOC2 @ 0x200002
  1030                           ;	unspecified, using default values
  1031  200002                     	org	2097154
  1032  200002  FF                 	db	255
  1033                           
  1034                           ;Config register IDLOC3 @ 0x200003
  1035                           ;	unspecified, using default values
  1036  200003                     	org	2097155
  1037  200003  FF                 	db	255
  1038                           
  1039                           ;Config register IDLOC4 @ 0x200004
  1040                           ;	unspecified, using default values
  1041  200004                     	org	2097156
  1042  200004  FF                 	db	255
  1043                           
  1044                           ;Config register IDLOC5 @ 0x200005
  1045                           ;	unspecified, using default values
  1046  200005                     	org	2097157
  1047  200005  FF                 	db	255
  1048                           
  1049                           ;Config register IDLOC6 @ 0x200006
  1050                           ;	unspecified, using default values
  1051  200006                     	org	2097158
  1052  200006  FF                 	db	255
  1053                           
  1054                           ;Config register IDLOC7 @ 0x200007
  1055                           ;	unspecified, using default values
  1056  200007                     	org	2097159
  1057  200007  FF                 	db	255
  1058                           
  1059                           	psect	config
  1060                           
  1061                           ; Padding undefined space
  1062  300000                     	org	3145728
  1063  300000  FF                 	db	255
  1064                           
  1065                           ;Config register CONFIG1H @ 0x300001
  1066                           ;	Oscillator Selection bits
  1067                           ;	OSC = HS, HS oscillator
  1068                           ;	Fail-Safe Clock Monitor Enable bit
  1069                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1070                           ;	Internal/External Oscillator Switchover bit
  1071                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1072  300001                     	org	3145729
  1073  300001  02                 	db	2
  1074                           
  1075                           ;Config register CONFIG2L @ 0x300002
  1076                           ;	Power-up Timer Enable bit
  1077                           ;	PWRT = OFF, PWRT disabled
  1078                           ;	Brown-out Reset Enable bits
  1079                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1080                           ;	Brown Out Reset Voltage bits
  1081                           ;	BORV = 3, Minimum setting
  1082  300002                     	org	3145730
  1083  300002  1F                 	db	31
  1084                           
  1085                           ;Config register CONFIG2H @ 0x300003
  1086                           ;	Watchdog Timer Enable bit
  1087                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1088                           ;	Watchdog Timer Postscale Select bits
  1089                           ;	WDTPS = 32768, 1:32768
  1090  300003                     	org	3145731
  1091  300003  1E                 	db	30
  1092                           
  1093                           ; Padding undefined space
  1094  300004                     	org	3145732
  1095  300004  FF                 	db	255
  1096                           
  1097                           ;Config register CONFIG3H @ 0x300005
  1098                           ;	CCP2 MUX bit
  1099                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1100                           ;	PORTB A/D Enable bit
  1101                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1102                           ;	Low-Power Timer1 Oscillator Enable bit
  1103                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1104                           ;	MCLR Pin Enable bit
  1105                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1106  300005                     	org	3145733
  1107  300005  01                 	db	1
  1108                           
  1109                           ;Config register CONFIG4L @ 0x300006
  1110                           ;	Stack Full/Underflow Reset Enable bit
  1111                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1112                           ;	Single-Supply ICSP Enable bit
  1113                           ;	LVP = OFF, Single-Supply ICSP disabled
  1114                           ;	Extended Instruction Set Enable bit
  1115                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1116                           ;	Background Debugger Enable bit
  1117                           ;	DEBUG = 0x1, unprogrammed default
  1118  300006                     	org	3145734
  1119  300006  81                 	db	129
  1120                           
  1121                           ; Padding undefined space
  1122  300007                     	org	3145735
  1123  300007  FF                 	db	255
  1124                           
  1125                           ;Config register CONFIG5L @ 0x300008
  1126                           ;	Code Protection bit
  1127                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1128                           ;	Code Protection bit
  1129                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1130                           ;	Code Protection bit
  1131                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1132                           ;	Code Protection bit
  1133                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1134  300008                     	org	3145736
  1135  300008  0F                 	db	15
  1136                           
  1137                           ;Config register CONFIG5H @ 0x300009
  1138                           ;	Boot Block Code Protection bit
  1139                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1140                           ;	Data EEPROM Code Protection bit
  1141                           ;	CPD = OFF, Data EEPROM not code-protected
  1142  300009                     	org	3145737
  1143  300009  C0                 	db	192
  1144                           
  1145                           ;Config register CONFIG6L @ 0x30000A
  1146                           ;	Write Protection bit
  1147                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1148                           ;	Write Protection bit
  1149                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1150                           ;	Write Protection bit
  1151                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1152                           ;	Write Protection bit
  1153                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1154  30000A                     	org	3145738
  1155  30000A  0F                 	db	15
  1156                           
  1157                           ;Config register CONFIG6H @ 0x30000B
  1158                           ;	Configuration Register Write Protection bit
  1159                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1160                           ;	Boot Block Write Protection bit
  1161                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1162                           ;	Data EEPROM Write Protection bit
  1163                           ;	WRTD = OFF, Data EEPROM not write-protected
  1164  30000B                     	org	3145739
  1165  30000B  E0                 	db	224
  1166                           
  1167                           ;Config register CONFIG7L @ 0x30000C
  1168                           ;	Table Read Protection bit
  1169                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1170                           ;	Table Read Protection bit
  1171                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1172                           ;	Table Read Protection bit
  1173                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1174                           ;	Table Read Protection bit
  1175                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1176  30000C                     	org	3145740
  1177  30000C  0F                 	db	15
  1178                           
  1179                           ;Config register CONFIG7H @ 0x30000D
  1180                           ;	Boot Block Table Read Protection bit
  1181                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1182  30000D                     	org	3145741
  1183  30000D  40                 	db	64
  1184                           tosu	equ	0xFFF
  1185                           tosh	equ	0xFFE
  1186                           tosl	equ	0xFFD
  1187                           stkptr	equ	0xFFC
  1188                           pclatu	equ	0xFFB
  1189                           pclath	equ	0xFFA
  1190                           pcl	equ	0xFF9
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           prodh	equ	0xFF4
  1196                           prodl	equ	0xFF3
  1197                           indf0	equ	0xFEF
  1198                           postinc0	equ	0xFEE
  1199                           postdec0	equ	0xFED
  1200                           preinc0	equ	0xFEC
  1201                           plusw0	equ	0xFEB
  1202                           fsr0h	equ	0xFEA
  1203                           fsr0l	equ	0xFE9
  1204                           wreg	equ	0xFE8
  1205                           indf1	equ	0xFE7
  1206                           postinc1	equ	0xFE6
  1207                           postdec1	equ	0xFE5
  1208                           preinc1	equ	0xFE4
  1209                           plusw1	equ	0xFE3
  1210                           fsr1h	equ	0xFE2
  1211                           fsr1l	equ	0xFE1
  1212                           bsr	equ	0xFE0
  1213                           indf2	equ	0xFDF
  1214                           postinc2	equ	0xFDE
  1215                           postdec2	equ	0xFDD
  1216                           preinc2	equ	0xFDC
  1217                           plusw2	equ	0xFDB
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           status	equ	0xFD8

Data Sizes:
    Strings     10
    Constant    0
    Data        11
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Absolute function$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_Execute@global_timer_value	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt	PTR FTN(PTR unsigned long ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Display_WriteString@string	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_DisplayLCD_Init
    _DisplayLCD_Init->_Display_WriteString
    _Display_WriteString->_Display_WriteByte

Critical Paths under _TC0INT in COMRAM

    _TC0INT->_tickHook_Execute

Critical Paths under _main in BANK0

    None.

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     659
                    _DisplayLCD_Init
 ---------------------------------------------------------------------------------
 (1) _DisplayLCD_Init                                      2     2      0     659
                                             16 COMRAM     2     2      0
                   _Display_SendByte
                _Display_WriteString
                         _sendNibble
 ---------------------------------------------------------------------------------
 (2) _sendNibble                                           3     3      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Display_WriteString                                 11     8      3     303
                                              5 COMRAM    11     8      3
                  _Display_WriteByte
 ---------------------------------------------------------------------------------
 (3) _Display_WriteByte                                    3     3      0      60
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Display_SendByte                                     4     3      1     341
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TC0INT                                               0     0      0      98
                    _Serial_Transmit
                   _tickHook_Execute
 ---------------------------------------------------------------------------------
 (5) _tickHook_Execute                                     2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Serial_Transmit                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayLCD_Init
     _Display_SendByte
     _Display_WriteString
       _Display_WriteByte
     _sendNibble

 _TC0INT (ROOT)
   _Serial_Transmit
   _tickHook_Execute

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     12      2D       1       35.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      15        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 02 12:17:50 2021

               ??_Display_WriteByte 0003                                  l40 0892  
                                l39 0892                   ??_Serial_Transmit 0001  
                               l130 0642                                 l115 06F4  
                               l124 0876                                 l141 0688  
                               l134 0656                                 l151 0726  
                               l119 084C                                 l136 0666  
                               l128 062E                                 l153 073A  
                               l145 06FE                                 l147 0712  
                               l164 07C4                                 l158 075E  
                               l960 070C                                 l952 06F8  
                               l954 06F8                                 l980 0748  
                               l972 0734                                 l964 0718  
                               l982 074E                                 l976 0740  
                               l968 0720                                 l992 085A  
                               l984 0846                                 l996 0862  
                               l988 0846                                 l998 0868  
                               u250 061E                                 u251 061A  
                               u260 07C4                                 u261 07C0  
                               u317 0694                                 u407 0680  
                               u327 06DA                                 u337 085C  
                               u347 086E                                 u357 071A  
                               u367 0742                                 u377 0754  
                               u387 064A                                 u397 066E  
             ??_Display_WriteString 0009                                 wreg 000FE8  
         __end_of_Display_WriteByte 0760                                l1300 06A0  
                              l1310 06C0                                l1302 06A4  
                              l1312 06CA                                l1304 06AA  
                              l1250 060E                                l1314 06D4  
                              l1306 06B0                                l1260 063C  
                              l1252 060E                                l1316 06E4  
                              l1308 06B6                                l1270 065C  
                              l1254 061E                                l1334 088E  
                              l1264 0648                                l1256 0628  
                              l1282 0674                                l1274 0660  
                              l1290 0788                                l1284 067A  
                              l1268 0650                                l1292 078A  
                              l1278 066C                                l1286 0760  
                              l1288 076C                                l1298 068A  
                              STR_1 0601                                _LATB 000F8A  
                              _LATD 000F8C                                i2l34 0806  
                              _TMR0 000FD6                                _TRMT 007D61  
                              _main 088E                                fsr1l 000FE1  
                              btemp 002E                                start 000E  
                      ___param_bank 000000                               ?_main 0001  
                             i2l200 088C                               i2l229 08A6  
                             i2l197 087E                               _RCREG 000FAE  
                             _SPBRG 000FAF                               _PORTB 000F81  
                             _PORTD 000F83                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TXREG 000FAD                               _count 0022  
                             tablat 000FF5                               ttemp5 002F  
                             ttemp6 0032                               ttemp7 0036  
                             status 000FD8                               wtemp8 002F  
                   __initialization 080A                        __end_of_main 089A  
                   _DisplayLCD_Init 068A                              ??_main 0013  
                     __activetblptr 000002          __size_of_Display_WriteByte 006A  
                            _TC0INT 0008            __end_of_tickHook_Execute 08A8  
                            i2l1320 07D6                              i2l1330 07FE  
                            i2l1322 07E2                              i2l1332 0804  
                            i2l1324 07EA                              i2l1326 07EC  
                            i2l1318 07C8                              i2l1328 07FA  
                            i2l1294 08A6                              i2l1296 087A  
                            clear_0 0830                              isa$std 000001  
                      __pdataCOMRAM 0023                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                          __accesstop 0080  
           __end_of__initialization 0836                     _Serial_Transmit 0878  
                     ___rparam_used 000001           __size_of_Display_SendByte 007E  
                    __pcstackCOMRAM 0001             __end_of_DisplayLCD_Init 06F6  
                           ?_TC0INT 0001         __end_of_Display_WriteString 07C6  
                           i2u27_40 088C                             i2u27_41 0888  
                           i2u28_40 07D6                             i2u28_41 07D2  
                           i2u29_40 07FA                             i2u29_41 07F6  
           __end_of_Serial_Transmit 088E                     __size_of_TC0INT 0802  
                           __Hparam 0000                             __Lparam 0000  
                  ?_DisplayLCD_Init 0001                        __psmallconst 0600  
                           __pcinit 080A                             __ramtop 0600  
                           __ptext0 088E                             __ptext1 068A  
                           __ptext2 0844                             __ptext3 0760  
                           __ptext4 06F6                             __ptext5 060C  
                           __ptext7 08A6                             __ptext8 0878  
                         _T0CONbits 000FD5                Display_SendByte@comm 0003  
              Display_SendByte@byte 0005                      __pintcode_body 07C6  
                        _sendNibble 0844                end_of_initialization 0836  
                 ?_tickHook_Execute 0001                       __Lmediumconst 0000  
                           int_func 07C6                  ??_tickHook_Execute 0003  
                  _Display_SendByte 060C                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postinc0 000FEE  
           Display_SendByte@auxByte 0006               Display_WriteByte@byte 0004  
               Serial_Transmit@data 0001                    ?_Serial_Transmit 0001  
                    __end_of_TC0INT 080A                           _TXSTAbits 000FAC  
                       _BAUDCONbits 000FB8                       __pidataCOMRAM 089A  
               start_initialization 080A                         ?_sendNibble 0001  
                          ??_TC0INT 0003                         __pbssCOMRAM 0013  
         Display_WriteString@length 0008           Display_WriteString@string 0006  
                         __pintcode 0008                 __size_of_sendNibble 0034  
                       __smallconst 0600        __size_of_Display_WriteString 0066  
          __end_of_Display_SendByte 068A                            _PIE1bits 000F9D  
tickHook_Execute@global_timer_value 0001                            _PIR1bits 000F9E  
                          _RCONbits 000FD0           __size_of_tickHook_Execute 0002  
          __size_of_DisplayLCD_Init 006C                         _INTCON2bits 000FF1  
                         copy_data0 081E                            __Hrparam 0000  
                          __Lrparam 0000                    sendNibble@nibble 0004  
                      ??_sendNibble 0003                       __size_of_main 000C  
                      _serialConfig 0023                            _humidity 001E  
          __size_of_Serial_Transmit 0016                            isa$xinst 000000  
                          int$flags 002E                  __end_of_sendNibble 0878  
                        _INTCONbits 000FF2                   ??_DisplayLCD_Init 0011  
                          intlevel2 0000              Timer0_WaitMS@timeStart 0018  
               _Display_WriteString 0760                  _global_timer_value 002A  
                  _tickHook_Execute 08A6        Display_WriteString@auxLength 0010  
                       _temperature 0020                         _timerConfig 0013  
              ?_Display_WriteString 0006                   _tickHook_func_prt 001C  
          Display_WriteByte@auxByte 0005                   ?_Display_SendByte 0003  
                ??_Display_SendByte 0004                   _Display_WriteByte 06F6  
                ?_Display_WriteByte 0001  
