

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 05 00:14:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000E88                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _BLUETOOTH_PIN_COMM
    77  000E88  41                 	db	65
    78  000E89  54                 	db	84
    79  000E8A  2B                 	db	43
    80  000E8B  50                 	db	80
    81  000E8C  49                 	db	73
    82  000E8D  4E                 	db	78
    83  000E8E  58                 	db	88
    84  000E8F  59                 	db	89
    85  000E90  5A                 	db	90
    86  000E91  57                 	db	87
    87  000E92  00                 	db	0
    88                           
    89                           ;initializer for _BLUETOOTH_NAME_COMM
    90  000E93  41                 	db	65
    91  000E94  54                 	db	84
    92  000E95  2B                 	db	43
    93  000E96  4E                 	db	78
    94  000E97  41                 	db	65
    95  000E98  4D                 	db	77
    96  000E99  45                 	db	69
    97  000E9A  00                 	db	0
    98                           
    99                           ;initializer for _BLUETOOTH_BAUD_COMM
   100  000E9B  41                 	db	65
   101  000E9C  54                 	db	84
   102  000E9D  2B                 	db	43
   103  000E9E  42                 	db	66
   104  000E9F  41                 	db	65
   105  000EA0  55                 	db	85
   106  000EA1  44                 	db	68
   107  000EA2  00                 	db	0
   108                           
   109                           ;initializer for _serialConfig
   110  000EA3  00                 	db	0
   111  000EA4  00                 	db	0
   112  000EA5  00                 	db	0
   113  000EA6  2580               	dw	9600
   114  000EA8  0000               	dw	0
   115                           
   116                           ;initializer for _global_timer_value
   117  000EAA  0001               	dw	1
   118  000EAC  0000               	dw	0
   119  0000                     _TMR0	set	4054
   120  0000                     _INTCON2bits	set	4081
   121  0000                     _T0CONbits	set	4053
   122  0000                     _TXREG	set	4013
   123  0000                     _PIE1bits	set	3997
   124  0000                     _RCSTAbits	set	4011
   125  0000                     _SPBRG	set	4015
   126  0000                     _TXSTAbits	set	4012
   127  0000                     _BAUDCONbits	set	4024
   128  0000                     _RCONbits	set	4048
   129  0000                     _TRISC	set	3988
   130  0000                     _PORTD	set	3971
   131  0000                     _LATD	set	3980
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISB	set	3987
   134  0000                     _PORTB	set	3969
   135  0000                     _LATB	set	3978
   136  0000                     _RCREG	set	4014
   137  0000                     _PIR1bits	set	3998
   138  0000                     _INTCONbits	set	4082
   139  0000                     _TRMT	set	32097
   140                           
   141                           	psect	smallconst
   142  000600                     __psmallconst:
   143                           	callstack 0
   144  000600  00                 	db	0
   145  000601  41                 	db	65	;'A'
   146  000602  43                 	db	67	;'C'
   147  000603  41                 	db	65	;'A'
   148  000604  42                 	db	66	;'B'
   149  000605  4F                 	db	79	;'O'
   150  000606  55                 	db	85	;'U'
   151  000607  20                 	db	32
   152  000608  45                 	db	69	;'E'
   153  000609  53                 	db	83	;'S'
   154  00060A  53                 	db	83	;'S'
   155  00060B  41                 	db	65	;'A'
   156  00060C  20                 	db	32
   157  00060D  50                 	db	80	;'P'
   158  00060E  4F                 	db	79	;'O'
   159  00060F  48                 	db	72	;'H'
   160  000610  41                 	db	65	;'A'
   161  000611  00                 	db	0
   162  000612  53                 	db	83	;'S'
   163  000613  54                 	db	84	;'T'
   164  000614  41                 	db	65	;'A'
   165  000615  52                 	db	82	;'R'
   166  000616  54                 	db	84	;'T'
   167  000617  5F                 	db	95	;'_'
   168  000618  42                 	db	66	;'B'
   169  000619  4C                 	db	76	;'L'
   170  00061A  55                 	db	85	;'U'
   171  00061B  45                 	db	69	;'E'
   172  00061C  54                 	db	84	;'T'
   173  00061D  4F                 	db	79	;'O'
   174  00061E  4F                 	db	79	;'O'
   175  00061F  54                 	db	84	;'T'
   176  000620  48                 	db	72	;'H'
   177  000621  00                 	db	0
   178  000622  44                 	db	68	;'D'
   179  000623  48                 	db	72	;'H'
   180  000624  54                 	db	84	;'T'
   181  000625  31                 	db	49	;'1'
   182  000626  31                 	db	49	;'1'
   183  000627  20                 	db	32
   184  000628  54                 	db	84	;'T'
   185  000629  49                 	db	73	;'I'
   186  00062A  4D                 	db	77	;'M'
   187  00062B  45                 	db	69	;'E'
   188  00062C  4F                 	db	79	;'O'
   189  00062D  55                 	db	85	;'U'
   190  00062E  54                 	db	84	;'T'
   191  00062F  00                 	db	0
   192  000630  44                 	db	68	;'D'
   193  000631  48                 	db	72	;'H'
   194  000632  54                 	db	84	;'T'
   195  000633  31                 	db	49	;'1'
   196  000634  31                 	db	49	;'1'
   197  000635  20                 	db	32
   198  000636  4F                 	db	79	;'O'
   199  000637  4B                 	db	75	;'K'
   200  000638  00                 	db	0
   201  000639  31                 	db	49	;'1'
   202  00063A  00                 	db	0
   203  00063B  32                 	db	50	;'2'
   204  00063C  00                 	db	0
   205  00063D  33                 	db	51	;'3'
   206  00063E  00                 	db	0
   207  00063F                     STR_4:
   208  00063F  34                 	db	52	;'4'
   209  000640  00                 	db	0
   210  000641  35                 	db	53	;'5'
   211  000642  00                 	db	0
   212  000643  36                 	db	54	;'6'
   213  000644  00                 	db	0
   214  000645  37                 	db	55	;'7'
   215  000646  00                 	db	0
   216  000647  38                 	db	56	;'8'
   217  000648  00                 	db	0
   218  000649  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           ; #config settings
   221                           
   222                           	psect	cinit
   223  000DE4                     __pcinit:
   224                           	callstack 0
   225  000DE4                     start_initialization:
   226                           	callstack 0
   227  000DE4                     __initialization:
   228                           	callstack 0
   229                           
   230                           ; Initialize objects allocated to COMRAM (38 bytes)
   231                           ; load TBLPTR registers with __pidataCOMRAM
   232  000DE4  0E88               	movlw	low __pidataCOMRAM
   233  000DE6  6EF6               	movwf	tblptrl,c
   234  000DE8  0E0E               	movlw	high __pidataCOMRAM
   235  000DEA  6EF7               	movwf	tblptrh,c
   236  000DEC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   237  000DEE  6EF8               	movwf	tblptru,c
   238  000DF0  EE00  F029         	lfsr	0,__pdataCOMRAM
   239  000DF4  EE10 F026          	lfsr	1,38
   240  000DF8                     copy_data0:
   241  000DF8  0009               	tblrd		*+
   242  000DFA  CFF5 FFEE          	movff	tablat,postinc0
   243  000DFE  50E5               	movf	postdec1,w,c
   244  000E00  50E1               	movf	fsr1l,w,c
   245  000E02  E1FA               	bnz	copy_data0
   246                           
   247                           ; Clear objects allocated to COMRAM (22 bytes)
   248  000E04  EE00  F04F         	lfsr	0,__pbssCOMRAM
   249  000E08  0E16               	movlw	22
   250  000E0A                     clear_0:
   251  000E0A  6AEE               	clrf	postinc0,c
   252  000E0C  06E8               	decf	wreg,f,c
   253  000E0E  E1FD               	bnz	clear_0
   254  000E10                     end_of_initialization:
   255                           	callstack 0
   256  000E10                     __end_of__initialization:
   257                           	callstack 0
   258  000E10  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   259  000E12  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   260  000E14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261  000E16  6EF8               	movwf	tblptru,c
   262  000E18  0100               	movlb	0
   263  000E1A  EF9E  F005         	goto	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMRAM
   266  00004F                     __pbssCOMRAM:
   267                           	callstack 0
   268  00004F                     Timer0_WaitMS@timeStart:
   269                           	callstack 0
   270  00004F                     	ds	4
   271  000053                     _tickHook_func_prt:
   272                           	callstack 0
   273  000053                     	ds	2
   274  000055                     _TimeIsElapsed:
   275                           	callstack 0
   276  000055                     	ds	1
   277  000056                     _UserConnected:
   278                           	callstack 0
   279  000056                     	ds	1
   280  000057                     _i:
   281                           	callstack 0
   282  000057                     	ds	1
   283  000058                     _count:
   284                           	callstack 0
   285  000058                     	ds	1
   286  000059                     _timerConfig:
   287                           	callstack 0
   288  000059                     	ds	5
   289  00005E                     _vector:
   290                           	callstack 0
   291  00005E                     	ds	3
   292  000061                     _humidity:
   293                           	callstack 0
   294  000061                     	ds	2
   295  000063                     _temperature:
   296                           	callstack 0
   297  000063                     	ds	2
   298                           
   299                           	psect	dataCOMRAM
   300  000029                     __pdataCOMRAM:
   301                           	callstack 0
   302  000029                     _BLUETOOTH_PIN_COMM:
   303                           	callstack 0
   304  000029                     	ds	11
   305  000034                     _BLUETOOTH_NAME_COMM:
   306                           	callstack 0
   307  000034                     	ds	8
   308  00003C                     _BLUETOOTH_BAUD_COMM:
   309                           	callstack 0
   310  00003C                     	ds	8
   311  000044                     _serialConfig:
   312                           	callstack 0
   313  000044                     	ds	7
   314  00004B                     _global_timer_value:
   315                           	callstack 0
   316  00004B                     	ds	4
   317                           
   318                           	psect	cstackBANK0
   319  000080                     __pcstackBANK0:
   320                           	callstack 0
   321  000080                     Serial_1_Config@error_8LOW:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x0
   325  000080                     	ds	1
   326  000081                     Serial_1_Config@error_16HIGH:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x1
   330  000081                     	ds	1
   331  000082                     Serial_1_Config@brg8LOW:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x2
   335  000082                     	ds	1
   336  000083                     Serial_1_Config@brg8HIGH:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340  000083                     	ds	1
   341  000084                     Serial_1_Config@brg16HIGH:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x4
   345  000084                     	ds	1
   346  000085                     Serial_1_Config@error_8HIGH:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x5
   350  000085                     	ds	1
   351  000086                     Serial_1_Config@error_min:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x6
   355  000086                     	ds	1
   356                           
   357                           	psect	cstackCOMRAM
   358  000001                     __pcstackCOMRAM:
   359                           	callstack 0
   360  000001                     ??_Display_WriteByte:
   361  000001                     User_SetState@state:
   362                           	callstack 0
   363  000001                     i2Display_SendByte@comm:
   364                           	callstack 0
   365  000001                     tickHook_func@timer_value:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x0
   369  000001                     	ds	1
   370  000002                     ??i2_Display_SendByte:
   371  000002                     Display_WriteByte@byte:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x1
   375  000002                     	ds	1
   376  000003                     Display_WriteByte@auxByte:
   377                           	callstack 0
   378  000003                     i2Display_SendByte@byte:
   379                           	callstack 0
   380  000003                     tickHook_Execute@global_timer_value:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384  000003                     	ds	1
   385  000004                     i2Display_SendByte@auxByte:
   386                           	callstack 0
   387  000004                     Display_WriteString@string:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x3
   391  000004                     	ds	1
   392  000005                     
   393                           ; 1 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     Display_WriteString@length:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  000006                     	ds	1
   400  000007                     Display_WriteString@address:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x6
   404  000007                     	ds	1
   405  000008                     ??_Display_WriteString:
   406                           
   407                           ; 1 bytes @ 0x7
   408  000008                     	ds	2
   409  00000A                     Display_WriteString@auxLength:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x9
   413  00000A                     	ds	1
   414  00000B                     ??_TC0INT:
   415                           
   416                           ; 1 bytes @ 0xA
   417  00000B                     	ds	11
   418  000016                     ??_sendNibble:
   419  000016                     ?___lldiv:
   420                           	callstack 0
   421  000016                     Display_SendByte@comm:
   422                           	callstack 0
   423  000016                     Timer0_Config@timerConfig:
   424                           	callstack 0
   425  000016                     Timer0_SetTickHook@tickFunc:
   426                           	callstack 0
   427  000016                     ___lldiv@dividend:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x15
   431  000016                     	ds	1
   432  000017                     ??_Display_SendByte:
   433  000017                     sendNibble@nibble:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x16
   437  000017                     	ds	1
   438  000018                     ??_Timer0_Config:
   439  000018                     Display_SendByte@byte:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x17
   443  000018                     	ds	1
   444  000019                     Display_SendByte@auxByte:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x18
   448  000019                     	ds	1
   449  00001A                     ??_DisplayLCD_Init:
   450  00001A                     ___lldiv@divisor:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x19
   454  00001A                     	ds	4
   455  00001E                     ___lldiv@quotient:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0x1D
   459  00001E                     	ds	4
   460  000022                     ___lldiv@counter:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x21
   464  000022                     	ds	1
   465  000023                     Serial_1_Config@serialConfig:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x22
   469  000023                     	ds	2
   470  000025                     ??_Serial_1_Config:
   471                           
   472                           ; 1 bytes @ 0x24
   473  000025                     	ds	4
   474  000029                     
   475                           ; 1 bytes @ 0x28
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 81 in file "src/main.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  i               2    0        int 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   495 ;;      Params:         0       0       0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels required when called: 5
   501 ;; This function calls:
   502 ;;		_DisplayLCD_Init
   503 ;;		_Interrupt_GlobalEnable
   504 ;;		_Serial_1_Config
   505 ;;		_Timer0_Config
   506 ;;		_Timer0_SetTickHook
   507 ;;		_User_GetState
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text0
   514  000B3C                     __ptext0:
   515                           	callstack 0
   516  000B3C                     _main:
   517                           	callstack 26
   518  000B3C                     
   519                           ;src/main.c: 83:     Interrupt_GlobalEnable();
   520  000B3C  EC66  F007         	call	_Interrupt_GlobalEnable	;wreg free
   521  000B40                     
   522                           ;src/main.c: 84:     Timer0_Config(&timerConfig);
   523  000B40  0E59               	movlw	low _timerConfig
   524  000B42  6E16               	movwf	Timer0_Config@timerConfig^0,c
   525  000B44  0E00               	movlw	high _timerConfig
   526  000B46  6E17               	movwf	(Timer0_Config@timerConfig+1)^0,c
   527  000B48  EC4F  F005         	call	_Timer0_Config	;wreg free
   528  000B4C                     
   529                           ;src/main.c: 85:     Timer0_SetTickHook(tickHook_func);
   530  000B4C  0EAE               	movlw	low _tickHook_func
   531  000B4E  6E16               	movwf	Timer0_SetTickHook@tickFunc^0,c
   532  000B50  0E0E               	movlw	high _tickHook_func
   533  000B52  6E17               	movwf	(Timer0_SetTickHook@tickFunc+1)^0,c
   534  000B54  EC61  F007         	call	_Timer0_SetTickHook	;wreg free
   535  000B58                     
   536                           ;src/main.c: 88:     if(0x00 == 0x00) TRISB = (TRISB & (~(1 << 0))); else TRISB = (TRISB
      +                           | (1 << 0));;
   537  000B58  0E44               	movlw	low _serialConfig
   538  000B5A  6E23               	movwf	Serial_1_Config@serialConfig^0,c
   539  000B5C  0E00               	movlw	high _serialConfig
   540  000B5E  6E24               	movwf	(Serial_1_Config@serialConfig+1)^0,c
   541  000B60  EC25  F003         	call	_Serial_1_Config	;wreg free
   542  000B64  5093               	movf	147,w,c	;volatile
   543  000B66  0BFE               	andlw	254
   544  000B68  6E93               	movwf	147,c	;volatile
   545  000B6A  5093               	movf	147,w,c	;volatile
   546  000B6C  0BFD               	andlw	253
   547  000B6E  6E93               	movwf	147,c	;volatile
   548  000B70  5081               	movf	129,w,c	;volatile
   549  000B72  0BFE               	andlw	254
   550  000B74  6E8A               	movwf	138,c	;volatile
   551  000B76  5081               	movf	129,w,c	;volatile
   552  000B78  0BFD               	andlw	253
   553  000B7A  6E8A               	movwf	138,c	;volatile
   554  000B7C                     
   555                           ;src/main.c: 95:     DisplayLCD_Init();
   556  000B7C  EC99  F006         	call	_DisplayLCD_Init	;wreg free
   557  000B80                     l88:
   558                           
   559                           ;src/main.c: 100:         {;src/main.c: 101:             if(0x01 == 0x01) LATB = (PORTB 
      +                          | (1 << 0)); else LATB = (PORTB & ~((1 << 0)));;
   560  000B80  EC6E  F007         	call	_User_GetState	;wreg free
   561  000B84  0900               	iorlw	0
   562  000B86  A4D8               	btfss	status,2,c
   563  000B88  EFC8  F005         	goto	u771
   564  000B8C  EFCA  F005         	goto	u770
   565  000B90                     u771:
   566  000B90  EFD2  F005         	goto	l2089
   567  000B94                     u770:
   568  000B94  5081               	movf	129,w,c	;volatile
   569  000B96  0901               	iorlw	1
   570  000B98  6E8A               	movwf	138,c	;volatile
   571  000B9A  5081               	movf	129,w,c	;volatile
   572  000B9C  0BFD               	andlw	253
   573  000B9E  6E8A               	movwf	138,c	;volatile
   574  000BA0  EFC0  F005         	goto	l88
   575  000BA4                     l2089:
   576  000BA4  EC6E  F007         	call	_User_GetState	;wreg free
   577  000BA8  06E8               	decf	wreg,f,c
   578  000BAA  A4D8               	btfss	status,2,c
   579  000BAC  EFDA  F005         	goto	u781
   580  000BB0  EFDC  F005         	goto	u780
   581  000BB4                     u781:
   582  000BB4  EFC0  F005         	goto	l88
   583  000BB8                     u780:
   584  000BB8  5081               	movf	129,w,c	;volatile
   585  000BBA  0BFE               	andlw	254
   586  000BBC  6E8A               	movwf	138,c	;volatile
   587  000BBE  5081               	movf	129,w,c	;volatile
   588  000BC0  0902               	iorlw	2
   589  000BC2  6E8A               	movwf	138,c	;volatile
   590  000BC4  EFC0  F005         	goto	l88
   591  000BC8  EF07  F000         	goto	start
   592  000BCC                     __end_of_main:
   593                           	callstack 0
   594                           
   595 ;; *************** function _User_GetState *****************
   596 ;; Defined at:
   597 ;;		line 56 in file "src/app/bluetooth-hc-06/bluetooth_hc_06.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      _Bool 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   611 ;;      Params:         0       0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 3
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text1
   626  000EDC                     __ptext1:
   627                           	callstack 0
   628  000EDC                     _User_GetState:
   629                           	callstack 27
   630  000EDC                     
   631                           ;src/app/bluetooth-hc-06/bluetooth_hc_06.c: 58:     return UserConnected;
   632  000EDC  5056               	movf	_UserConnected^0,w,c
   633  000EDE  0012               	return		;funcret
   634  000EE0                     __end_of_User_GetState:
   635                           	callstack 0
   636                           
   637 ;; *************** function _Timer0_SetTickHook *****************
   638 ;; Defined at:
   639 ;;		line 84 in file "src/pic18f4520/timer/timer.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  tickFunc        2   21[COMRAM] PTR FTN(PTR unsigned lon
   642 ;;		 -> tickHook_func(1), 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:         2       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0
   657 ;;      Totals:         2       0       0       0       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 3
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text2
   669  000EC2                     __ptext2:
   670                           	callstack 0
   671  000EC2                     _Timer0_SetTickHook:
   672                           	callstack 27
   673  000EC2                     
   674                           ;src/pic18f4520/timer/timer.c: 84: void Timer0_SetTickHook(void (*tickFunc)(uint32_t*));
      +                          src/pic18f4520/timer/timer.c: 85: {;src/pic18f4520/timer/timer.c: 86:     tickHook_func_
      +                          prt = tickFunc;
   675  000EC2  C016  F053         	movff	Timer0_SetTickHook@tickFunc,_tickHook_func_prt
   676  000EC6  C017  F054         	movff	Timer0_SetTickHook@tickFunc+1,_tickHook_func_prt+1
   677  000ECA  0012               	return		;funcret
   678  000ECC                     __end_of_Timer0_SetTickHook:
   679                           	callstack 0
   680                           
   681 ;; *************** function _Timer0_Config *****************
   682 ;; Defined at:
   683 ;;		line 7 in file "src/pic18f4520/timer/timer.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  timerConfig     2   21[COMRAM] PTR struct .
   686 ;;		 -> timerConfig(5), 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   698 ;;      Params:         2       0       0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0
   700 ;;      Temps:          1       0       0       0       0       0       0
   701 ;;      Totals:         3       0       0       0       0       0       0
   702 ;;Total ram usage:        3 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 3
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text3
   713  000A9E                     __ptext3:
   714                           	callstack 0
   715  000A9E                     _Timer0_Config:
   716                           	callstack 27
   717  000A9E                     
   718                           ;src/pic18f4520/timer/timer.c: 7: void Timer0_Config( timer_config_t* timerConfig );src/
      +                          pic18f4520/timer/timer.c: 8: {;src/pic18f4520/timer/timer.c: 14:     T0CONbits.TMR0ON = 
      +                          0x00;
   719  000A9E  9ED5               	bcf	213,7,c	;volatile
   720  000AA0                     
   721                           ;src/pic18f4520/timer/timer.c: 22:     T0CONbits.T08BIT = timerConfig->timer_length;
   722  000AA0  C016  FFD9         	movff	Timer0_Config@timerConfig,fsr2l
   723  000AA4  C017  FFDA         	movff	Timer0_Config@timerConfig+1,fsr2h
   724  000AA8  50DF               	movf	indf2,w,c
   725  000AAA  6E18               	movwf	??_Timer0_Config^0,c
   726  000AAC  3A18               	swapf	??_Timer0_Config^0,f,c
   727  000AAE  4618               	rlncf	??_Timer0_Config^0,f,c
   728  000AB0  4618               	rlncf	??_Timer0_Config^0,f,c
   729  000AB2  50D5               	movf	213,w,c	;volatile
   730  000AB4  1818               	xorwf	??_Timer0_Config^0,w,c
   731  000AB6  0BBF               	andlw	-65
   732  000AB8  1818               	xorwf	??_Timer0_Config^0,w,c
   733  000ABA  6ED5               	movwf	213,c	;volatile
   734                           
   735                           ;src/pic18f4520/timer/timer.c: 29:     T0CONbits.T0CS = timerConfig->timer_clk_src;
   736  000ABC  EE20 F001          	lfsr	2,1
   737  000AC0  5016               	movf	Timer0_Config@timerConfig^0,w,c
   738  000AC2  26D9               	addwf	fsr2l,f,c
   739  000AC4  5017               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   740  000AC6  22DA               	addwfc	fsr2h,f,c
   741  000AC8  50DF               	movf	indf2,w,c
   742  000ACA  6E18               	movwf	??_Timer0_Config^0,c
   743  000ACC  3A18               	swapf	??_Timer0_Config^0,f,c
   744  000ACE  4618               	rlncf	??_Timer0_Config^0,f,c
   745  000AD0  50D5               	movf	213,w,c	;volatile
   746  000AD2  1818               	xorwf	??_Timer0_Config^0,w,c
   747  000AD4  0BDF               	andlw	-33
   748  000AD6  1818               	xorwf	??_Timer0_Config^0,w,c
   749  000AD8  6ED5               	movwf	213,c	;volatile
   750                           
   751                           ;src/pic18f4520/timer/timer.c: 37:     if(!(T0CONbits.PSA = timerConfig->timer_prescaler
      +                          _assign))
   752  000ADA  EE20 F003          	lfsr	2,3
   753  000ADE  5016               	movf	Timer0_Config@timerConfig^0,w,c
   754  000AE0  26D9               	addwf	fsr2l,f,c
   755  000AE2  5017               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   756  000AE4  22DA               	addwfc	fsr2h,f,c
   757  000AE6  50DF               	movf	indf2,w,c
   758  000AE8  6E18               	movwf	??_Timer0_Config^0,c
   759  000AEA  4618               	rlncf	??_Timer0_Config^0,f,c
   760  000AEC  4618               	rlncf	??_Timer0_Config^0,f,c
   761  000AEE  4618               	rlncf	??_Timer0_Config^0,f,c
   762  000AF0  50D5               	movf	213,w,c	;volatile
   763  000AF2  1818               	xorwf	??_Timer0_Config^0,w,c
   764  000AF4  0BF7               	andlw	-9
   765  000AF6  1818               	xorwf	??_Timer0_Config^0,w,c
   766  000AF8  6ED5               	movwf	213,c	;volatile
   767  000AFA  30D5               	rrcf	213,w,c	;volatile
   768  000AFC  32E8               	rrcf	wreg,f,c
   769  000AFE  32E8               	rrcf	wreg,f,c
   770  000B00  0B01               	andlw	1
   771  000B02  0900               	iorlw	0
   772  000B04  A4D8               	btfss	status,2,c
   773  000B06  EF87  F005         	goto	u501
   774  000B0A  EF89  F005         	goto	u500
   775  000B0E                     u501:
   776  000B0E  EF96  F005         	goto	l1777
   777  000B12                     u500:
   778  000B12                     
   779                           ;src/pic18f4520/timer/timer.c: 38:     {;src/pic18f4520/timer/timer.c: 48:         T0CON
      +                          bits.T0PS = timerConfig->timer_prescaler_value;
   780  000B12  EE20 F004          	lfsr	2,4
   781  000B16  5016               	movf	Timer0_Config@timerConfig^0,w,c
   782  000B18  26D9               	addwf	fsr2l,f,c
   783  000B1A  5017               	movf	(Timer0_Config@timerConfig+1)^0,w,c
   784  000B1C  22DA               	addwfc	fsr2h,f,c
   785  000B1E  50DF               	movf	indf2,w,c
   786  000B20  6E18               	movwf	??_Timer0_Config^0,c
   787  000B22  50D5               	movf	213,w,c	;volatile
   788  000B24  1818               	xorwf	??_Timer0_Config^0,w,c
   789  000B26  0BF8               	andlw	-8
   790  000B28  1818               	xorwf	??_Timer0_Config^0,w,c
   791  000B2A  6ED5               	movwf	213,c	;volatile
   792  000B2C                     l1777:
   793                           
   794                           ;src/pic18f4520/timer/timer.c: 63:     INTCONbits.TMR0IE = 0x01;
   795  000B2C  8AF2               	bsf	242,5,c	;volatile
   796  000B2E                     
   797                           ;src/pic18f4520/timer/timer.c: 69:     INTCON2bits.TMR0IP = 0x01;
   798  000B2E  84F1               	bsf	241,2,c	;volatile
   799  000B30                     
   800                           ;src/pic18f4520/timer/timer.c: 73:     TMR0 = 0xFB1E;
   801  000B30  0EFB               	movlw	251
   802  000B32  6ED7               	movwf	215,c	;volatile
   803  000B34  0E1E               	movlw	30
   804  000B36  6ED6               	movwf	214,c	;volatile
   805  000B38                     
   806                           ;src/pic18f4520/timer/timer.c: 76:     T0CONbits.TMR0ON = 0x01;
   807  000B38  8ED5               	bsf	213,7,c	;volatile
   808  000B3A  0012               	return		;funcret
   809  000B3C                     __end_of_Timer0_Config:
   810                           	callstack 0
   811                           
   812 ;; *************** function _Serial_1_Config *****************
   813 ;; Defined at:
   814 ;;		line 6 in file "src/pic18f4520/serial/serial.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  serialConfig    2   34[COMRAM] PTR struct .
   817 ;;		 -> serialConfig(7), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  error_min       1    6[BANK0 ] unsigned char 
   820 ;;  error_8HIGH     1    5[BANK0 ] unsigned char 
   821 ;;  brg16HIGH       1    4[BANK0 ] unsigned char 
   822 ;;  brg8HIGH        1    3[BANK0 ] unsigned char 
   823 ;;  brg8LOW         1    2[BANK0 ] unsigned char 
   824 ;;  error_16HIGH    1    1[BANK0 ] unsigned char 
   825 ;;  error_8LOW      1    0[BANK0 ] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   835 ;;      Params:         2       0       0       0       0       0       0
   836 ;;      Locals:         0       7       0       0       0       0       0
   837 ;;      Temps:          4       0       0       0       0       0       0
   838 ;;      Totals:         6       7       0       0       0       0       0
   839 ;;Total ram usage:       13 bytes
   840 ;; Hardware stack levels used: 1
   841 ;; Hardware stack levels required when called: 4
   842 ;; This function calls:
   843 ;;		___lldiv
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text4
   850  00064A                     __ptext4:
   851                           	callstack 0
   852  00064A                     _Serial_1_Config:
   853                           	callstack 26
   854  00064A                     
   855                           ;src/pic18f4520/serial/serial.c: 29:     uint8_t brg8LOW;;src/pic18f4520/serial/serial.c
      +                          : 30:     uint8_t brg8HIGH;;src/pic18f4520/serial/serial.c: 31:     uint8_t brg16HIGH;;s
      +                          rc/pic18f4520/serial/serial.c: 34:     uint8_t error_8LOW;;src/pic18f4520/serial/serial.
      +                          c: 35:     uint8_t error_8HIGH;;src/pic18f4520/serial/serial.c: 36:     uint8_t error_16
      +                          HIGH;;src/pic18f4520/serial/serial.c: 38:     uint8_t error_min;;src/pic18f4520/serial/s
      +                          erial.c: 41:     brg8LOW = (10000000UL/(serialConfig->serial_desired_baud * 64));
   856  00064A  0E80               	movlw	128
   857  00064C  6E16               	movwf	___lldiv@dividend^0,c
   858  00064E  0E96               	movlw	150
   859  000650  6E17               	movwf	(___lldiv@dividend+1)^0,c
   860  000652  0E98               	movlw	152
   861  000654  6E18               	movwf	(___lldiv@dividend+2)^0,c
   862  000656  0E00               	movlw	0
   863  000658  6E19               	movwf	(___lldiv@dividend+3)^0,c
   864  00065A  EE20 F003          	lfsr	2,3
   865  00065E  5023               	movf	Serial_1_Config@serialConfig^0,w,c
   866  000660  26D9               	addwf	fsr2l,f,c
   867  000662  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   868  000664  22DA               	addwfc	fsr2h,f,c
   869  000666  CFDE F025          	movff	postinc2,??_Serial_1_Config
   870  00066A  CFDE F026          	movff	postinc2,??_Serial_1_Config+1
   871  00066E  CFDE F027          	movff	postinc2,??_Serial_1_Config+2
   872  000672  CFDE F028          	movff	postinc2,??_Serial_1_Config+3
   873  000676  0E06               	movlw	6
   874  000678                     u715:
   875  000678  90D8               	bcf	status,0,c
   876  00067A  3625               	rlcf	??_Serial_1_Config^0,f,c
   877  00067C  3626               	rlcf	(??_Serial_1_Config+1)^0,f,c
   878  00067E  3627               	rlcf	(??_Serial_1_Config+2)^0,f,c
   879  000680  3628               	rlcf	(??_Serial_1_Config+3)^0,f,c
   880  000682  2EE8               	decfsz	wreg,f,c
   881  000684  EF3C  F003         	goto	u715
   882  000688  C025  F01A         	movff	??_Serial_1_Config,___lldiv@divisor
   883  00068C  C026  F01B         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
   884  000690  C027  F01C         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
   885  000694  C028  F01D         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
   886  000698  ECFD  F004         	call	___lldiv	;wreg free
   887  00069C  5016               	movf	?___lldiv^0,w,c
   888  00069E  0100               	movlb	0	; () banked
   889  0006A0  6F82               	movwf	Serial_1_Config@brg8LOW& (0+255),b
   890                           
   891                           ;src/pic18f4520/serial/serial.c: 42:     brg8HIGH = (10000000UL/(serialConfig->serial_de
      +                          sired_baud * 16));
   892  0006A2  0E80               	movlw	128
   893  0006A4  6E16               	movwf	___lldiv@dividend^0,c
   894  0006A6  0E96               	movlw	150
   895  0006A8  6E17               	movwf	(___lldiv@dividend+1)^0,c
   896  0006AA  0E98               	movlw	152
   897  0006AC  6E18               	movwf	(___lldiv@dividend+2)^0,c
   898  0006AE  0E00               	movlw	0
   899  0006B0  6E19               	movwf	(___lldiv@dividend+3)^0,c
   900  0006B2  EE20 F003          	lfsr	2,3
   901  0006B6  5023               	movf	Serial_1_Config@serialConfig^0,w,c
   902  0006B8  26D9               	addwf	fsr2l,f,c
   903  0006BA  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   904  0006BC  22DA               	addwfc	fsr2h,f,c
   905  0006BE  CFDE F025          	movff	postinc2,??_Serial_1_Config
   906  0006C2  CFDE F026          	movff	postinc2,??_Serial_1_Config+1
   907  0006C6  CFDE F027          	movff	postinc2,??_Serial_1_Config+2
   908  0006CA  CFDE F028          	movff	postinc2,??_Serial_1_Config+3
   909  0006CE  0E04               	movlw	4
   910  0006D0                     u725:
   911  0006D0  90D8               	bcf	status,0,c
   912  0006D2  3625               	rlcf	??_Serial_1_Config^0,f,c
   913  0006D4  3626               	rlcf	(??_Serial_1_Config+1)^0,f,c
   914  0006D6  3627               	rlcf	(??_Serial_1_Config+2)^0,f,c
   915  0006D8  3628               	rlcf	(??_Serial_1_Config+3)^0,f,c
   916  0006DA  2EE8               	decfsz	wreg,f,c
   917  0006DC  EF68  F003         	goto	u725
   918  0006E0  C025  F01A         	movff	??_Serial_1_Config,___lldiv@divisor
   919  0006E4  C026  F01B         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
   920  0006E8  C027  F01C         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
   921  0006EC  C028  F01D         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
   922  0006F0  ECFD  F004         	call	___lldiv	;wreg free
   923  0006F4  5016               	movf	?___lldiv^0,w,c
   924  0006F6  0100               	movlb	0	; () banked
   925  0006F8  6F83               	movwf	Serial_1_Config@brg8HIGH& (0+255),b
   926                           
   927                           ;src/pic18f4520/serial/serial.c: 43:     brg16HIGH = (10000000UL/(serialConfig->serial_d
      +                          esired_baud * 4));
   928  0006FA  0E80               	movlw	128
   929  0006FC  6E16               	movwf	___lldiv@dividend^0,c
   930  0006FE  0E96               	movlw	150
   931  000700  6E17               	movwf	(___lldiv@dividend+1)^0,c
   932  000702  0E98               	movlw	152
   933  000704  6E18               	movwf	(___lldiv@dividend+2)^0,c
   934  000706  0E00               	movlw	0
   935  000708  6E19               	movwf	(___lldiv@dividend+3)^0,c
   936  00070A  EE20 F003          	lfsr	2,3
   937  00070E  5023               	movf	Serial_1_Config@serialConfig^0,w,c
   938  000710  26D9               	addwf	fsr2l,f,c
   939  000712  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   940  000714  22DA               	addwfc	fsr2h,f,c
   941  000716  CFDE F025          	movff	postinc2,??_Serial_1_Config
   942  00071A  CFDE F026          	movff	postinc2,??_Serial_1_Config+1
   943  00071E  CFDE F027          	movff	postinc2,??_Serial_1_Config+2
   944  000722  CFDE F028          	movff	postinc2,??_Serial_1_Config+3
   945  000726  0E02               	movlw	2
   946  000728                     u735:
   947  000728  90D8               	bcf	status,0,c
   948  00072A  3625               	rlcf	??_Serial_1_Config^0,f,c
   949  00072C  3626               	rlcf	(??_Serial_1_Config+1)^0,f,c
   950  00072E  3627               	rlcf	(??_Serial_1_Config+2)^0,f,c
   951  000730  3628               	rlcf	(??_Serial_1_Config+3)^0,f,c
   952  000732  2EE8               	decfsz	wreg,f,c
   953  000734  EF94  F003         	goto	u735
   954  000738  C025  F01A         	movff	??_Serial_1_Config,___lldiv@divisor
   955  00073C  C026  F01B         	movff	??_Serial_1_Config+1,___lldiv@divisor+1
   956  000740  C027  F01C         	movff	??_Serial_1_Config+2,___lldiv@divisor+2
   957  000744  C028  F01D         	movff	??_Serial_1_Config+3,___lldiv@divisor+3
   958  000748  ECFD  F004         	call	___lldiv	;wreg free
   959  00074C  5016               	movf	?___lldiv^0,w,c
   960  00074E  0100               	movlb	0	; () banked
   961  000750  6F84               	movwf	Serial_1_Config@brg16HIGH& (0+255),b
   962  000752                     
   963                           ; BSR set to: 0
   964                           ;src/pic18f4520/serial/serial.c: 46:     error_8LOW = (10000000UL/(brg8LOW * 64)) - seri
      +                          alConfig->serial_desired_baud;
   965  000752  EE20 F003          	lfsr	2,3
   966  000756  5023               	movf	Serial_1_Config@serialConfig^0,w,c
   967  000758  26D9               	addwf	fsr2l,f,c
   968  00075A  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
   969  00075C  22DA               	addwfc	fsr2h,f,c
   970  00075E  50DF               	movf	indf2,w,c
   971  000760  6E25               	movwf	??_Serial_1_Config^0,c
   972  000762  0E80               	movlw	128
   973  000764  6E16               	movwf	___lldiv@dividend^0,c
   974  000766  0E96               	movlw	150
   975  000768  6E17               	movwf	(___lldiv@dividend+1)^0,c
   976  00076A  0E98               	movlw	152
   977  00076C  6E18               	movwf	(___lldiv@dividend+2)^0,c
   978  00076E  0E00               	movlw	0
   979  000770  6E19               	movwf	(___lldiv@dividend+3)^0,c
   980  000772  5182               	movf	Serial_1_Config@brg8LOW& (0+255),w,b
   981  000774  0D40               	mullw	64
   982  000776  CFF3 F026          	movff	prodl,??_Serial_1_Config+1
   983  00077A  CFF4 F027          	movff	prodh,??_Serial_1_Config+2
   984  00077E  C026  F01A         	movff	??_Serial_1_Config+1,___lldiv@divisor
   985  000782  C027  F01B         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
   986  000786  0E00               	movlw	0
   987  000788  BE1B               	btfsc	(___lldiv@divisor+1)^0,7,c
   988  00078A  0EFF               	movlw	-1
   989  00078C  6E1C               	movwf	(___lldiv@divisor+2)^0,c
   990  00078E  6E1D               	movwf	(___lldiv@divisor+3)^0,c
   991  000790  ECFD  F004         	call	___lldiv	;wreg free
   992  000794  5025               	movf	??_Serial_1_Config^0,w,c
   993  000796  5C16               	subwf	?___lldiv^0,w,c
   994  000798  0100               	movlb	0	; () banked
   995  00079A  6F80               	movwf	Serial_1_Config@error_8LOW& (0+255),b
   996  00079C                     
   997                           ; BSR set to: 0
   998                           ;src/pic18f4520/serial/serial.c: 47:     error_8HIGH = (10000000UL/(brg8HIGH * 16)) - se
      +                          rialConfig->serial_desired_baud;
   999  00079C  EE20 F003          	lfsr	2,3
  1000  0007A0  5023               	movf	Serial_1_Config@serialConfig^0,w,c
  1001  0007A2  26D9               	addwf	fsr2l,f,c
  1002  0007A4  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1003  0007A6  22DA               	addwfc	fsr2h,f,c
  1004  0007A8  50DF               	movf	indf2,w,c
  1005  0007AA  6E25               	movwf	??_Serial_1_Config^0,c
  1006  0007AC  0E80               	movlw	128
  1007  0007AE  6E16               	movwf	___lldiv@dividend^0,c
  1008  0007B0  0E96               	movlw	150
  1009  0007B2  6E17               	movwf	(___lldiv@dividend+1)^0,c
  1010  0007B4  0E98               	movlw	152
  1011  0007B6  6E18               	movwf	(___lldiv@dividend+2)^0,c
  1012  0007B8  0E00               	movlw	0
  1013  0007BA  6E19               	movwf	(___lldiv@dividend+3)^0,c
  1014  0007BC  5183               	movf	Serial_1_Config@brg8HIGH& (0+255),w,b
  1015  0007BE  0D10               	mullw	16
  1016  0007C0  CFF3 F026          	movff	prodl,??_Serial_1_Config+1
  1017  0007C4  CFF4 F027          	movff	prodh,??_Serial_1_Config+2
  1018  0007C8  C026  F01A         	movff	??_Serial_1_Config+1,___lldiv@divisor
  1019  0007CC  C027  F01B         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
  1020  0007D0  0E00               	movlw	0
  1021  0007D2  BE1B               	btfsc	(___lldiv@divisor+1)^0,7,c
  1022  0007D4  0EFF               	movlw	-1
  1023  0007D6  6E1C               	movwf	(___lldiv@divisor+2)^0,c
  1024  0007D8  6E1D               	movwf	(___lldiv@divisor+3)^0,c
  1025  0007DA  ECFD  F004         	call	___lldiv	;wreg free
  1026  0007DE  5025               	movf	??_Serial_1_Config^0,w,c
  1027  0007E0  5C16               	subwf	?___lldiv^0,w,c
  1028  0007E2  0100               	movlb	0	; () banked
  1029  0007E4  6F85               	movwf	Serial_1_Config@error_8HIGH& (0+255),b
  1030  0007E6                     
  1031                           ; BSR set to: 0
  1032                           ;src/pic18f4520/serial/serial.c: 48:     error_16HIGH = (10000000UL/(brg16HIGH * 4)) - s
      +                          erialConfig->serial_desired_baud;
  1033  0007E6  EE20 F003          	lfsr	2,3
  1034  0007EA  5023               	movf	Serial_1_Config@serialConfig^0,w,c
  1035  0007EC  26D9               	addwf	fsr2l,f,c
  1036  0007EE  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1037  0007F0  22DA               	addwfc	fsr2h,f,c
  1038  0007F2  50DF               	movf	indf2,w,c
  1039  0007F4  6E25               	movwf	??_Serial_1_Config^0,c
  1040  0007F6  0E80               	movlw	128
  1041  0007F8  6E16               	movwf	___lldiv@dividend^0,c
  1042  0007FA  0E96               	movlw	150
  1043  0007FC  6E17               	movwf	(___lldiv@dividend+1)^0,c
  1044  0007FE  0E98               	movlw	152
  1045  000800  6E18               	movwf	(___lldiv@dividend+2)^0,c
  1046  000802  0E00               	movlw	0
  1047  000804  6E19               	movwf	(___lldiv@dividend+3)^0,c
  1048  000806  5184               	movf	Serial_1_Config@brg16HIGH& (0+255),w,b
  1049  000808  0D04               	mullw	4
  1050  00080A  CFF3 F026          	movff	prodl,??_Serial_1_Config+1
  1051  00080E  CFF4 F027          	movff	prodh,??_Serial_1_Config+2
  1052  000812  C026  F01A         	movff	??_Serial_1_Config+1,___lldiv@divisor
  1053  000816  C027  F01B         	movff	??_Serial_1_Config+2,___lldiv@divisor+1
  1054  00081A  0E00               	movlw	0
  1055  00081C  BE1B               	btfsc	(___lldiv@divisor+1)^0,7,c
  1056  00081E  0EFF               	movlw	-1
  1057  000820  6E1C               	movwf	(___lldiv@divisor+2)^0,c
  1058  000822  6E1D               	movwf	(___lldiv@divisor+3)^0,c
  1059  000824  ECFD  F004         	call	___lldiv	;wreg free
  1060  000828  5025               	movf	??_Serial_1_Config^0,w,c
  1061  00082A  5C16               	subwf	?___lldiv^0,w,c
  1062  00082C  0100               	movlb	0	; () banked
  1063  00082E  6F81               	movwf	Serial_1_Config@error_16HIGH& (0+255),b
  1064  000830                     
  1065                           ; BSR set to: 0
  1066                           ;src/pic18f4520/serial/serial.c: 51:     error_min = error_8LOW;
  1067  000830  C080  F086         	movff	Serial_1_Config@error_8LOW,Serial_1_Config@error_min
  1068  000834                     
  1069                           ; BSR set to: 0
  1070                           ;src/pic18f4520/serial/serial.c: 53:     BAUDCONbits.BRG16 = 0x00;
  1071  000834  96B8               	bcf	184,3,c	;volatile
  1072  000836                     
  1073                           ; BSR set to: 0
  1074                           ;src/pic18f4520/serial/serial.c: 54:     TXSTAbits.BRGH = 0x00;
  1075  000836  94AC               	bcf	172,2,c	;volatile
  1076  000838                     
  1077                           ; BSR set to: 0
  1078                           ;src/pic18f4520/serial/serial.c: 56:     SPBRG = (brg8LOW - 1);
  1079  000838  0582               	decf	Serial_1_Config@brg8LOW& (0+255),w,b
  1080  00083A  6EAF               	movwf	175,c	;volatile
  1081  00083C                     
  1082                           ; BSR set to: 0
  1083                           ;src/pic18f4520/serial/serial.c: 58:     if(error_8HIGH < error_min)
  1084  00083C  5186               	movf	Serial_1_Config@error_min& (0+255),w,b
  1085  00083E  5D85               	subwf	Serial_1_Config@error_8HIGH& (0+255),w,b
  1086  000840  B0D8               	btfsc	status,0,c
  1087  000842  EF25  F004         	goto	u741
  1088  000846  EF27  F004         	goto	u740
  1089  00084A                     u741:
  1090  00084A  EF2D  F004         	goto	l367
  1091  00084E                     u740:
  1092  00084E                     
  1093                           ; BSR set to: 0
  1094                           ;src/pic18f4520/serial/serial.c: 59:     {;src/pic18f4520/serial/serial.c: 60:         e
      +                          rror_min = error_8HIGH;
  1095  00084E  C085  F086         	movff	Serial_1_Config@error_8HIGH,Serial_1_Config@error_min
  1096                           
  1097                           ;src/pic18f4520/serial/serial.c: 62:         BAUDCONbits.BRG16 = 0x00;
  1098  000852  96B8               	bcf	184,3,c	;volatile
  1099                           
  1100                           ;src/pic18f4520/serial/serial.c: 63:         TXSTAbits.BRGH = 0x01;
  1101  000854  84AC               	bsf	172,2,c	;volatile
  1102  000856                     
  1103                           ; BSR set to: 0
  1104                           ;src/pic18f4520/serial/serial.c: 65:         SPBRG = (brg8HIGH - 1);
  1105  000856  0583               	decf	Serial_1_Config@brg8HIGH& (0+255),w,b
  1106  000858  6EAF               	movwf	175,c	;volatile
  1107  00085A                     l367:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;src/pic18f4520/serial/serial.c: 67:     if(error_16HIGH < error_min)
  1111  00085A  5186               	movf	Serial_1_Config@error_min& (0+255),w,b
  1112  00085C  5D81               	subwf	Serial_1_Config@error_16HIGH& (0+255),w,b
  1113  00085E  B0D8               	btfsc	status,0,c
  1114  000860  EF34  F004         	goto	u751
  1115  000864  EF36  F004         	goto	u750
  1116  000868                     u751:
  1117  000868  EF3A  F004         	goto	l2047
  1118  00086C                     u750:
  1119  00086C                     
  1120                           ; BSR set to: 0
  1121                           ;src/pic18f4520/serial/serial.c: 68:     {;src/pic18f4520/serial/serial.c: 69:         B
      +                          AUDCONbits.BRG16 = 0x01;
  1122  00086C  86B8               	bsf	184,3,c	;volatile
  1123                           
  1124                           ;src/pic18f4520/serial/serial.c: 70:         TXSTAbits.BRGH = 0x01;
  1125  00086E  84AC               	bsf	172,2,c	;volatile
  1126  000870                     
  1127                           ; BSR set to: 0
  1128                           ;src/pic18f4520/serial/serial.c: 72:         SPBRG = (brg16HIGH - 1);
  1129  000870  0584               	decf	Serial_1_Config@brg16HIGH& (0+255),w,b
  1130  000872  6EAF               	movwf	175,c	;volatile
  1131  000874                     l2047:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;src/pic18f4520/serial/serial.c: 80:     TXSTAbits.SYNC = serialConfig->serial_op_mode;
  1135  000874  EE20 F002          	lfsr	2,2
  1136  000878  5023               	movf	Serial_1_Config@serialConfig^0,w,c
  1137  00087A  26D9               	addwf	fsr2l,f,c
  1138  00087C  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1139  00087E  22DA               	addwfc	fsr2h,f,c
  1140  000880  50DF               	movf	indf2,w,c
  1141  000882  6E25               	movwf	??_Serial_1_Config^0,c
  1142  000884  3A25               	swapf	??_Serial_1_Config^0,f,c
  1143  000886  50AC               	movf	172,w,c	;volatile
  1144  000888  1825               	xorwf	??_Serial_1_Config^0,w,c
  1145  00088A  0BEF               	andlw	-17
  1146  00088C  1825               	xorwf	??_Serial_1_Config^0,w,c
  1147  00088E  6EAC               	movwf	172,c	;volatile
  1148  000890                     
  1149                           ; BSR set to: 0
  1150                           ;src/pic18f4520/serial/serial.c: 86:     RCSTAbits.SPEN = 0x01;
  1151  000890  8EAB               	bsf	171,7,c	;volatile
  1152  000892                     
  1153                           ; BSR set to: 0
  1154                           ;src/pic18f4520/serial/serial.c: 100:     if(serialConfig->serial_data_length == SERIAL_
      +                          DATA_LENGTH_9)
  1155  000892  EE20 F001          	lfsr	2,1
  1156  000896  5023               	movf	Serial_1_Config@serialConfig^0,w,c
  1157  000898  26D9               	addwf	fsr2l,f,c
  1158  00089A  5024               	movf	(Serial_1_Config@serialConfig+1)^0,w,c
  1159  00089C  22DA               	addwfc	fsr2h,f,c
  1160  00089E  04DE               	decf	postinc2,w,c
  1161  0008A0  A4D8               	btfss	status,2,c
  1162  0008A2  EF55  F004         	goto	u761
  1163  0008A6  EF57  F004         	goto	u760
  1164  0008AA                     u761:
  1165  0008AA  EF5B  F004         	goto	l369
  1166  0008AE                     u760:
  1167  0008AE                     
  1168                           ; BSR set to: 0
  1169                           ;src/pic18f4520/serial/serial.c: 101:     {;src/pic18f4520/serial/serial.c: 102:        
      +                           TXSTAbits.TX9 = 0x01;
  1170  0008AE  8CAC               	bsf	172,6,c	;volatile
  1171                           
  1172                           ;src/pic18f4520/serial/serial.c: 103:         RCSTAbits.RC9 = 0x01;
  1173  0008B0  8CAB               	bsf	171,6,c	;volatile
  1174                           
  1175                           ;src/pic18f4520/serial/serial.c: 104:     }else
  1176  0008B2  EF5D  F004         	goto	l370
  1177  0008B6                     l369:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;src/pic18f4520/serial/serial.c: 105:     {;src/pic18f4520/serial/serial.c: 106:        
      +                           TXSTAbits.TX9 = 0x00;
  1181  0008B6  9CAC               	bcf	172,6,c	;volatile
  1182                           
  1183                           ;src/pic18f4520/serial/serial.c: 107:         RCSTAbits.RC9 = 0x00;
  1184  0008B8  9CAB               	bcf	171,6,c	;volatile
  1185  0008BA                     l370:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;src/pic18f4520/serial/serial.c: 123:     TXSTAbits.TXEN = 0x01;
  1189  0008BA  8AAC               	bsf	172,5,c	;volatile
  1190                           
  1191                           ;src/pic18f4520/serial/serial.c: 124:     RCSTAbits.CREN = 0x01;
  1192  0008BC  88AB               	bsf	171,4,c	;volatile
  1193                           
  1194                           ;src/pic18f4520/serial/serial.c: 126:     PIE1bits.RCIE = 0x01;
  1195  0008BE  8A9D               	bsf	157,5,c	;volatile
  1196  0008C0                     
  1197                           ; BSR set to: 0
  1198  0008C0  0012               	return		;funcret
  1199  0008C2                     __end_of_Serial_1_Config:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function ___lldiv *****************
  1203 ;; Defined at:
  1204 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  dividend        4   21[COMRAM] unsigned long 
  1207 ;;  divisor         4   25[COMRAM] unsigned long 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  quotient        4   29[COMRAM] unsigned long 
  1210 ;;  counter         1   33[COMRAM] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  4   21[COMRAM] unsigned long 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1220 ;;      Params:         8       0       0       0       0       0       0
  1221 ;;      Locals:         5       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0
  1223 ;;      Totals:        13       0       0       0       0       0       0
  1224 ;;Total ram usage:       13 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 3
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_Serial_1_Config
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text5
  1235  0009FA                     __ptext5:
  1236                           	callstack 0
  1237  0009FA                     ___lldiv:
  1238                           	callstack 26
  1239  0009FA  0E00               	movlw	0
  1240  0009FC  6E1E               	movwf	___lldiv@quotient^0,c
  1241  0009FE  0E00               	movlw	0
  1242  000A00  6E1F               	movwf	(___lldiv@quotient+1)^0,c
  1243  000A02  0E00               	movlw	0
  1244  000A04  6E20               	movwf	(___lldiv@quotient+2)^0,c
  1245  000A06  0E00               	movlw	0
  1246  000A08  6E21               	movwf	(___lldiv@quotient+3)^0,c
  1247  000A0A  501A               	movf	___lldiv@divisor^0,w,c
  1248  000A0C  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
  1249  000A0E  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
  1250  000A10  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
  1251  000A12  B4D8               	btfsc	status,2,c
  1252  000A14  EF0E  F005         	goto	u681
  1253  000A18  EF10  F005         	goto	u680
  1254  000A1C                     u681:
  1255  000A1C  EF46  F005         	goto	l458
  1256  000A20                     u680:
  1257  000A20  0E01               	movlw	1
  1258  000A22  6E22               	movwf	___lldiv@counter^0,c
  1259  000A24  EF1A  F005         	goto	l2007
  1260  000A28                     l2005:
  1261  000A28  90D8               	bcf	status,0,c
  1262  000A2A  361A               	rlcf	___lldiv@divisor^0,f,c
  1263  000A2C  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
  1264  000A2E  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
  1265  000A30  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
  1266  000A32  2A22               	incf	___lldiv@counter^0,f,c
  1267  000A34                     l2007:
  1268  000A34  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
  1269  000A36  EF1F  F005         	goto	u691
  1270  000A3A  EF21  F005         	goto	u690
  1271  000A3E                     u691:
  1272  000A3E  EF14  F005         	goto	l2005
  1273  000A42                     u690:
  1274  000A42                     l2009:
  1275  000A42  90D8               	bcf	status,0,c
  1276  000A44  361E               	rlcf	___lldiv@quotient^0,f,c
  1277  000A46  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
  1278  000A48  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
  1279  000A4A  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
  1280  000A4C  501A               	movf	___lldiv@divisor^0,w,c
  1281  000A4E  5C16               	subwf	___lldiv@dividend^0,w,c
  1282  000A50  501B               	movf	(___lldiv@divisor+1)^0,w,c
  1283  000A52  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
  1284  000A54  501C               	movf	(___lldiv@divisor+2)^0,w,c
  1285  000A56  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
  1286  000A58  501D               	movf	(___lldiv@divisor+3)^0,w,c
  1287  000A5A  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
  1288  000A5C  A0D8               	btfss	status,0,c
  1289  000A5E  EF33  F005         	goto	u701
  1290  000A62  EF35  F005         	goto	u700
  1291  000A66                     u701:
  1292  000A66  EF3E  F005         	goto	l2017
  1293  000A6A                     u700:
  1294  000A6A  501A               	movf	___lldiv@divisor^0,w,c
  1295  000A6C  5E16               	subwf	___lldiv@dividend^0,f,c
  1296  000A6E  501B               	movf	(___lldiv@divisor+1)^0,w,c
  1297  000A70  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
  1298  000A72  501C               	movf	(___lldiv@divisor+2)^0,w,c
  1299  000A74  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
  1300  000A76  501D               	movf	(___lldiv@divisor+3)^0,w,c
  1301  000A78  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
  1302  000A7A  801E               	bsf	___lldiv@quotient^0,0,c
  1303  000A7C                     l2017:
  1304  000A7C  90D8               	bcf	status,0,c
  1305  000A7E  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
  1306  000A80  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
  1307  000A82  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
  1308  000A84  321A               	rrcf	___lldiv@divisor^0,f,c
  1309  000A86  2E22               	decfsz	___lldiv@counter^0,f,c
  1310  000A88  EF21  F005         	goto	l2009
  1311  000A8C                     l458:
  1312  000A8C  C01E  F016         	movff	___lldiv@quotient,?___lldiv
  1313  000A90  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
  1314  000A94  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
  1315  000A98  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
  1316  000A9C  0012               	return		;funcret
  1317  000A9E                     __end_of___lldiv:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _Interrupt_GlobalEnable *****************
  1321 ;; Defined at:
  1322 ;;		line 4 in file "src/pic18f4520/interrupt/interrupt.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		None
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1336 ;;      Params:         0       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; Hardware stack levels required when called: 3
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text6
  1351  000ECC                     __ptext6:
  1352                           	callstack 0
  1353  000ECC                     _Interrupt_GlobalEnable:
  1354                           	callstack 27
  1355  000ECC                     
  1356                           ;src/pic18f4520/interrupt/interrupt.c: 11:     RCONbits.IPEN = 0x01;
  1357  000ECC  8ED0               	bsf	208,7,c	;volatile
  1358                           
  1359                           ;src/pic18f4520/interrupt/interrupt.c: 22:     INTCONbits.GIE_GIEH = 0x01;
  1360  000ECE  8EF2               	bsf	242,7,c	;volatile
  1361                           
  1362                           ;src/pic18f4520/interrupt/interrupt.c: 33:     INTCONbits.PEIE_GIEL = 0x01;
  1363  000ED0  8CF2               	bsf	242,6,c	;volatile
  1364  000ED2  0012               	return		;funcret
  1365  000ED4                     __end_of_Interrupt_GlobalEnable:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _DisplayLCD_Init *****************
  1369 ;; Defined at:
  1370 ;;		line 10 in file "src/app/display_lcd/display_lcd.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1384 ;;      Params:         0       0       0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0
  1386 ;;      Temps:          1       0       0       0       0       0       0
  1387 ;;      Totals:         1       0       0       0       0       0       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 4
  1391 ;; This function calls:
  1392 ;;		_Display_SendByte
  1393 ;;		_sendNibble
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;;		_StartSystem
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text7
  1401  000D32                     __ptext7:
  1402                           	callstack 0
  1403  000D32                     _DisplayLCD_Init:
  1404                           	callstack 26
  1405  000D32                     
  1406                           ;src/app/display_lcd/display_lcd.c: 13:     _delay((unsigned long)((20)*(10000000UL/4000
      +                          .0)));
  1407  000D32  0E41               	movlw	65
  1408  000D34  6E1A               	movwf	??_DisplayLCD_Init^0,c
  1409  000D36  0EEE               	movlw	238
  1410  000D38                     u797:
  1411  000D38  2EE8               	decfsz	wreg,f,c
  1412  000D3A  D7FE               	bra	u797
  1413  000D3C  2E1A               	decfsz	??_DisplayLCD_Init^0,f,c
  1414  000D3E  D7FC               	bra	u797
  1415  000D40  D000               	nop2	
  1416  000D42                     
  1417                           ;src/app/display_lcd/display_lcd.c: 16:     TRISB = 0x00;;
  1418  000D42  0E00               	movlw	0
  1419  000D44  6E93               	movwf	147,c	;volatile
  1420  000D46                     
  1421                           ;src/app/display_lcd/display_lcd.c: 19:     sendNibble(0x20);
  1422  000D46  0E20               	movlw	32
  1423  000D48  EC2A  F007         	call	_sendNibble
  1424  000D4C                     
  1425                           ;src/app/display_lcd/display_lcd.c: 20:     sendNibble(0x20);
  1426  000D4C  0E20               	movlw	32
  1427  000D4E  EC2A  F007         	call	_sendNibble
  1428  000D52                     
  1429                           ;src/app/display_lcd/display_lcd.c: 21:     sendNibble(0x30);
  1430  000D52  0E30               	movlw	48
  1431  000D54  EC2A  F007         	call	_sendNibble
  1432  000D58                     
  1433                           ;src/app/display_lcd/display_lcd.c: 24:     Display_SendByte((0b00100000 | 0b00000000 | 
      +                          0b00001000 | 0b00000100), 0);
  1434  000D58  0E00               	movlw	0
  1435  000D5A  6E16               	movwf	Display_SendByte@comm^0,c
  1436  000D5C  0E2C               	movlw	44
  1437  000D5E  ECE6  F005         	call	_Display_SendByte
  1438  000D62                     
  1439                           ;src/app/display_lcd/display_lcd.c: 27:     Display_SendByte((0b00000100 | 0b00000010 | 
      +                          0b00000000), 0);
  1440  000D62  0E00               	movlw	0
  1441  000D64  6E16               	movwf	Display_SendByte@comm^0,c
  1442  000D66  0E06               	movlw	6
  1443  000D68  ECE6  F005         	call	_Display_SendByte
  1444  000D6C                     
  1445                           ;src/app/display_lcd/display_lcd.c: 31:     Display_SendByte((0b00001000 | 0b00000100 | 
      +                          0b00000010 | 0b00000001 ), 0);
  1446  000D6C  0E00               	movlw	0
  1447  000D6E  6E16               	movwf	Display_SendByte@comm^0,c
  1448  000D70  0E0F               	movlw	15
  1449  000D72  ECE6  F005         	call	_Display_SendByte
  1450  000D76                     
  1451                           ;src/app/display_lcd/display_lcd.c: 34:     Display_SendByte(0b00000001, 0);
  1452  000D76  0E00               	movlw	0
  1453  000D78  6E16               	movwf	Display_SendByte@comm^0,c
  1454  000D7A  0E01               	movlw	1
  1455  000D7C  ECE6  F005         	call	_Display_SendByte
  1456  000D80                     
  1457                           ;src/app/display_lcd/display_lcd.c: 35:    _delay((unsigned long)((2)*(10000000UL/4000.0
      +                          )));
  1458  000D80  0E07               	movlw	7
  1459  000D82  6E1A               	movwf	??_DisplayLCD_Init^0,c
  1460  000D84  0E7D               	movlw	125
  1461  000D86                     u807:
  1462  000D86  2EE8               	decfsz	wreg,f,c
  1463  000D88  D7FE               	bra	u807
  1464  000D8A  2E1A               	decfsz	??_DisplayLCD_Init^0,f,c
  1465  000D8C  D7FC               	bra	u807
  1466  000D8E  F000               	nop	
  1467  000D90  0012               	return		;funcret
  1468  000D92                     __end_of_DisplayLCD_Init:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _sendNibble *****************
  1472 ;; Defined at:
  1473 ;;		line 43 in file "src/app/display_lcd/display_lcd.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  nibble          1    wreg     unsigned char 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  nibble          1   22[COMRAM] unsigned char 
  1478 ;;  auxNibble       1    0        unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1488 ;;      Params:         0       0       0       0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0       0       0
  1490 ;;      Temps:          1       0       0       0       0       0       0
  1491 ;;      Totals:         2       0       0       0       0       0       0
  1492 ;;Total ram usage:        2 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 3
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_DisplayLCD_Init
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text8
  1503  000E54                     __ptext8:
  1504                           	callstack 0
  1505  000E54                     _sendNibble:
  1506                           	callstack 26
  1507                           
  1508                           ;incstack = 0
  1509                           ;sendNibble@nibble stored from wreg
  1510  000E54  6E17               	movwf	sendNibble@nibble^0,c
  1511  000E56  5081               	movf	129,w,c	;volatile
  1512  000E58  0BF7               	andlw	247
  1513  000E5A  6E8A               	movwf	138,c	;volatile
  1514  000E5C                     
  1515                           ;src/app/display_lcd/display_lcd.c: 50:     if(0x01 == 0x01) LATB = (PORTB | (1 << 2)); 
      +                          else LATB = (PORTB & ~((1 << 2)));;
  1516  000E5C  5081               	movf	129,w,c	;volatile
  1517  000E5E  0B0F               	andlw	15
  1518  000E60  1017               	iorwf	sendNibble@nibble^0,w,c
  1519  000E62  6E8A               	movwf	138,c	;volatile
  1520  000E64  5081               	movf	129,w,c	;volatile
  1521  000E66  0904               	iorlw	4
  1522  000E68  6E8A               	movwf	138,c	;volatile
  1523  000E6A                     
  1524                           ;src/app/display_lcd/display_lcd.c: 51:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1525  000E6A  0E53               	movlw	83
  1526  000E6C                     u817:
  1527  000E6C  2EE8               	decfsz	wreg,f,c
  1528  000E6E  D7FE               	bra	u817
  1529  000E70  F000               	nop	
  1530  000E72  5081               	movf	129,w,c	;volatile
  1531  000E74  0BFB               	andlw	251
  1532  000E76  6E8A               	movwf	138,c	;volatile
  1533  000E78                     
  1534                           ;src/app/display_lcd/display_lcd.c: 54:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  1535  000E78  0E04               	movlw	4
  1536  000E7A  6E16               	movwf	??_sendNibble^0,c
  1537  000E7C  0E3E               	movlw	62
  1538  000E7E                     u827:
  1539  000E7E  2EE8               	decfsz	wreg,f,c
  1540  000E80  D7FE               	bra	u827
  1541  000E82  2E16               	decfsz	??_sendNibble^0,f,c
  1542  000E84  D7FC               	bra	u827
  1543  000E86  0012               	return		;funcret
  1544  000E88                     __end_of_sendNibble:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _Display_SendByte *****************
  1548 ;; Defined at:
  1549 ;;		line 57 in file "src/app/display_lcd/display_lcd.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  byte            1    wreg     unsigned char 
  1552 ;;  comm            1   21[COMRAM] unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  byte            1   23[COMRAM] unsigned char 
  1555 ;;  auxByte         1   24[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1565 ;;      Params:         1       0       0       0       0       0       0
  1566 ;;      Locals:         2       0       0       0       0       0       0
  1567 ;;      Temps:          1       0       0       0       0       0       0
  1568 ;;      Totals:         4       0       0       0       0       0       0
  1569 ;;Total ram usage:        4 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 3
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_DisplayLCD_Init
  1576 ;;		_StartSystem
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text9
  1581  000BCC                     __ptext9:
  1582                           	callstack 0
  1583  000BCC                     _Display_SendByte:
  1584                           	callstack 26
  1585                           
  1586                           ;incstack = 0
  1587                           ;Display_SendByte@byte stored from wreg
  1588  000BCC  6E18               	movwf	Display_SendByte@byte^0,c
  1589  000BCE                     
  1590                           ;src/app/display_lcd/display_lcd.c: 61:     if(comm == 0x01) LATB = (PORTB | (1 << 3)); 
      +                          else LATB = (PORTB & ~((1 << 3)));;
  1591  000BCE  0416               	decf	Display_SendByte@comm^0,w,c
  1592  000BD0  A4D8               	btfss	status,2,c
  1593  000BD2  EFED  F005         	goto	u421
  1594  000BD6  EFEF  F005         	goto	u420
  1595  000BDA                     u421:
  1596  000BDA  EFF4  F005         	goto	l1673
  1597  000BDE                     u420:
  1598  000BDE  5081               	movf	129,w,c	;volatile
  1599  000BE0  0908               	iorlw	8
  1600  000BE2  6E8A               	movwf	138,c	;volatile
  1601  000BE4  EFF7  F005         	goto	l225
  1602  000BE8                     l1673:
  1603  000BE8  5081               	movf	129,w,c	;volatile
  1604  000BEA  0BF7               	andlw	247
  1605  000BEC  6E8A               	movwf	138,c	;volatile
  1606  000BEE                     l225:
  1607                           
  1608                           ;src/app/display_lcd/display_lcd.c: 63:     auxByte = (byte & 0xF0);
  1609  000BEE  5018               	movf	Display_SendByte@byte^0,w,c
  1610  000BF0  0BF0               	andlw	240
  1611  000BF2  6E19               	movwf	Display_SendByte@auxByte^0,c
  1612                           
  1613                           ;src/app/display_lcd/display_lcd.c: 65:     LATB = ((PORTB & 0x0F) | auxByte);;
  1614  000BF4  5081               	movf	129,w,c	;volatile
  1615  000BF6  0B0F               	andlw	15
  1616  000BF8  1019               	iorwf	Display_SendByte@auxByte^0,w,c
  1617  000BFA  6E8A               	movwf	138,c	;volatile
  1618  000BFC  5081               	movf	129,w,c	;volatile
  1619  000BFE  0BFB               	andlw	251
  1620  000C00  6E8A               	movwf	138,c	;volatile
  1621  000C02  5081               	movf	129,w,c	;volatile
  1622  000C04  0904               	iorlw	4
  1623  000C06  6E8A               	movwf	138,c	;volatile
  1624  000C08                     
  1625                           ;src/app/display_lcd/display_lcd.c: 69:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1626  000C08  0E53               	movlw	83
  1627  000C0A                     u837:
  1628  000C0A  2EE8               	decfsz	wreg,f,c
  1629  000C0C  D7FE               	bra	u837
  1630  000C0E  F000               	nop	
  1631  000C10  5081               	movf	129,w,c	;volatile
  1632  000C12  0BFB               	andlw	251
  1633  000C14  6E8A               	movwf	138,c	;volatile
  1634  000C16                     
  1635                           ;src/app/display_lcd/display_lcd.c: 72:     auxByte = (byte << 0x04);
  1636  000C16  3818               	swapf	Display_SendByte@byte^0,w,c
  1637  000C18  0BF0               	andlw	240
  1638  000C1A  6E19               	movwf	Display_SendByte@auxByte^0,c
  1639  000C1C                     
  1640                           ;src/app/display_lcd/display_lcd.c: 74:     LATB = auxByte;;
  1641  000C1C  C019  FF8A         	movff	Display_SendByte@auxByte,3978	;volatile
  1642  000C20  5081               	movf	129,w,c	;volatile
  1643  000C22  0BFB               	andlw	251
  1644  000C24  6E8A               	movwf	138,c	;volatile
  1645  000C26  5081               	movf	129,w,c	;volatile
  1646  000C28  0904               	iorlw	4
  1647  000C2A  6E8A               	movwf	138,c	;volatile
  1648  000C2C                     
  1649                           ;src/app/display_lcd/display_lcd.c: 78:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1650  000C2C  0E53               	movlw	83
  1651  000C2E                     u847:
  1652  000C2E  2EE8               	decfsz	wreg,f,c
  1653  000C30  D7FE               	bra	u847
  1654  000C32  F000               	nop	
  1655  000C34  5081               	movf	129,w,c	;volatile
  1656  000C36  0BFB               	andlw	251
  1657  000C38  6E8A               	movwf	138,c	;volatile
  1658  000C3A                     
  1659                           ;src/app/display_lcd/display_lcd.c: 81:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  1660  000C3A  0E04               	movlw	4
  1661  000C3C  6E17               	movwf	??_Display_SendByte^0,c
  1662  000C3E  0E3E               	movlw	62
  1663  000C40                     u857:
  1664  000C40  2EE8               	decfsz	wreg,f,c
  1665  000C42  D7FE               	bra	u857
  1666  000C44  2E17               	decfsz	??_Display_SendByte^0,f,c
  1667  000C46  D7FC               	bra	u857
  1668  000C48  0012               	return		;funcret
  1669  000C4A                     __end_of_Display_SendByte:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function _TC0INT *****************
  1673 ;; Defined at:
  1674 ;;		line 43 in file "src/main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         0       0       0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0
  1690 ;;      Temps:         11       0       0       0       0       0       0
  1691 ;;      Totals:        11       0       0       0       0       0       0
  1692 ;;Total ram usage:       11 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 2
  1695 ;; This function calls:
  1696 ;;		_Display_WriteString
  1697 ;;		_User_SetState
  1698 ;;		_tickHook_Execute
  1699 ;;		i2_Display_SendByte
  1700 ;; This function is called by:
  1701 ;;		Interrupt level 2
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	intcode
  1706  000008                     __pintcode:
  1707                           	callstack 0
  1708  000008                     _TC0INT:
  1709                           	callstack 26
  1710                           
  1711                           ;incstack = 0
  1712  000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1713  00000A  ED61  F004         	call	int_func,f	;refresh shadow registers
  1714                           
  1715                           	psect	intcode_body
  1716  0008C2                     __pintcode_body:
  1717                           	callstack 26
  1718  0008C2                     int_func:
  1719                           	callstack 26
  1720  0008C2  0006               	pop		; remove dummy address from shadow register refresh
  1721  0008C4  CFFA F00C          	movff	pclath,??_TC0INT+1
  1722  0008C8  CFFB F00D          	movff	pclatu,??_TC0INT+2
  1723  0008CC  CFE9 F00E          	movff	fsr0l,??_TC0INT+3
  1724  0008D0  CFEA F00F          	movff	fsr0h,??_TC0INT+4
  1725  0008D4  CFD9 F010          	movff	fsr2l,??_TC0INT+5
  1726  0008D8  CFDA F011          	movff	fsr2h,??_TC0INT+6
  1727  0008DC  CFF6 F012          	movff	tblptrl,??_TC0INT+7
  1728  0008E0  CFF7 F013          	movff	tblptrh,??_TC0INT+8
  1729  0008E4  CFF8 F014          	movff	tblptru,??_TC0INT+9
  1730  0008E8  CFF5 F015          	movff	tablat,??_TC0INT+10
  1731  0008EC                     
  1732                           ;src/main.c: 46:     if (INTCONbits.TMR0IF == 0x01) {
  1733  0008EC  A4F2               	btfss	242,2,c	;volatile
  1734  0008EE  EF7B  F004         	goto	i2u58_41
  1735  0008F2  EF7D  F004         	goto	i2u58_40
  1736  0008F6                     i2u58_41:
  1737  0008F6  EF88  F004         	goto	i2l1885
  1738  0008FA                     i2u58_40:
  1739  0008FA                     
  1740                           ;src/main.c: 47:         tickHook_Execute(&global_timer_value);
  1741  0008FA  0E4B               	movlw	low _global_timer_value
  1742  0008FC  6E03               	movwf	tickHook_Execute@global_timer_value^0,c
  1743  0008FE  0E00               	movlw	high _global_timer_value
  1744  000900  6E04               	movwf	(tickHook_Execute@global_timer_value+1)^0,c
  1745  000902  EC0F  F007         	call	_tickHook_Execute	;wreg free
  1746  000906                     
  1747                           ;src/main.c: 48:         TMR0 = 0xFB1E;
  1748  000906  0EFB               	movlw	251
  1749  000908  6ED7               	movwf	215,c	;volatile
  1750  00090A  0E1E               	movlw	30
  1751  00090C  6ED6               	movwf	214,c	;volatile
  1752  00090E                     
  1753                           ;src/main.c: 49:         INTCONbits.T0IF = 0x00;
  1754  00090E  94F2               	bcf	242,2,c	;volatile
  1755  000910                     i2l1885:
  1756                           
  1757                           ;src/main.c: 53:     if (PIR1bits.RCIF) {
  1758  000910  AA9E               	btfss	158,5,c	;volatile
  1759  000912  EF8D  F004         	goto	i2u59_41
  1760  000916  EF8F  F004         	goto	i2u59_40
  1761  00091A                     i2u59_41:
  1762  00091A  EFE7  F004         	goto	i2l75
  1763  00091E                     i2u59_40:
  1764  00091E                     
  1765                           ;src/main.c: 54:         count = RCREG;
  1766  00091E  CFAE F058          	movff	4014,_count	;volatile
  1767  000922                     
  1768                           ;src/main.c: 55:         vector[i] = count;
  1769  000922  0E5E               	movlw	low _vector
  1770  000924  2457               	addwf	_i^0,w,c
  1771  000926  6ED9               	movwf	fsr2l,c
  1772  000928  6ADA               	clrf	fsr2h,c
  1773  00092A  0E00               	movlw	high _vector
  1774  00092C  22DA               	addwfc	fsr2h,f,c
  1775  00092E  C058  FFDF         	movff	_count,indf2
  1776  000932                     
  1777                           ;src/main.c: 56:         if(count != 0x3E)
  1778  000932  0E3E               	movlw	62
  1779  000934  1858               	xorwf	_count^0,w,c
  1780  000936  B4D8               	btfsc	status,2,c
  1781  000938  EFA0  F004         	goto	i2u60_41
  1782  00093C  EFA2  F004         	goto	i2u60_40
  1783  000940                     i2u60_41:
  1784  000940  EFAD  F004         	goto	i2l1897
  1785  000944                     i2u60_40:
  1786  000944                     
  1787                           ;src/main.c: 57:         {;src/main.c: 58:             vector[i] = count;
  1788  000944  0E5E               	movlw	low _vector
  1789  000946  2457               	addwf	_i^0,w,c
  1790  000948  6ED9               	movwf	fsr2l,c
  1791  00094A  6ADA               	clrf	fsr2h,c
  1792  00094C  0E00               	movlw	high _vector
  1793  00094E  22DA               	addwfc	fsr2h,f,c
  1794  000950  C058  FFDF         	movff	_count,indf2
  1795  000954                     
  1796                           ;src/main.c: 59:             i++;
  1797  000954  2A57               	incf	_i^0,f,c
  1798                           
  1799                           ;src/main.c: 60:         }else
  1800  000956  EFE6  F004         	goto	i2l1923
  1801  00095A                     i2l1897:
  1802                           
  1803                           ;src/main.c: 61:         {;src/main.c: 62:             Display_SendByte(0b00000001, 0);
  1804  00095A  0E00               	movlw	0
  1805  00095C  6E01               	movwf	i2Display_SendByte@comm^0,c
  1806  00095E  0E01               	movlw	1
  1807  000960  EC25  F006         	call	i2_Display_SendByte
  1808  000964                     
  1809                           ;src/main.c: 63:             _delay((unsigned long)((5)*(10000000UL/4000.0)));
  1810  000964  0E11               	movlw	17
  1811  000966  6E0B               	movwf	??_TC0INT^0,c
  1812  000968  0E3A               	movlw	58
  1813  00096A                     i2u86_47:
  1814  00096A  2EE8               	decfsz	wreg,f,c
  1815  00096C  D7FE               	bra	i2u86_47
  1816  00096E  2E0B               	decfsz	??_TC0INT^0,f,c
  1817  000970  D7FC               	bra	i2u86_47
  1818  000972  D000               	nop2	
  1819  000974                     
  1820                           ;src/main.c: 64:             Display_WriteString(vector, sizeof(vector), 0);
  1821  000974  0E5E               	movlw	low _vector
  1822  000976  6E04               	movwf	Display_WriteString@string^0,c
  1823  000978  0E00               	movlw	high _vector
  1824  00097A  6E05               	movwf	(Display_WriteString@string+1)^0,c
  1825  00097C  0E03               	movlw	3
  1826  00097E  6E06               	movwf	Display_WriteString@length^0,c
  1827  000980  0E00               	movlw	0
  1828  000982  6E07               	movwf	Display_WriteString@address^0,c
  1829  000984  ECC9  F006         	call	_Display_WriteString	;wreg free
  1830  000988                     
  1831                           ;src/main.c: 66:             {;src/main.c: 67:                 if(0x01 == 0x01) LATB = (
      +                          PORTB | (1 << 0)); else LATB = (PORTB & ~((1 << 0)));;
  1832  000988  0E43               	movlw	67
  1833  00098A  185F               	xorwf	(_vector+1)^0,w,c
  1834  00098C  A4D8               	btfss	status,2,c
  1835  00098E  EFCB  F004         	goto	i2u61_41
  1836  000992  EFCD  F004         	goto	i2u61_40
  1837  000996                     i2u61_41:
  1838  000996  EFD5  F004         	goto	i2l1911
  1839  00099A                     i2u61_40:
  1840  00099A  5081               	movf	129,w,c	;volatile
  1841  00099C  0901               	iorlw	1
  1842  00099E  6E8A               	movwf	138,c	;volatile
  1843  0009A0                     
  1844                           ;src/main.c: 68:                 User_SetState(1);
  1845  0009A0  0E01               	movlw	1
  1846  0009A2  EC6A  F007         	call	_User_SetState
  1847                           
  1848                           ;src/main.c: 69:             }else if(vector[1] == 0x44)
  1849  0009A6  EFE4  F004         	goto	i2l1921
  1850  0009AA                     i2l1911:
  1851  0009AA  0E44               	movlw	68
  1852  0009AC  185F               	xorwf	(_vector+1)^0,w,c
  1853  0009AE  A4D8               	btfss	status,2,c
  1854  0009B0  EFDC  F004         	goto	i2u62_41
  1855  0009B4  EFDE  F004         	goto	i2u62_40
  1856  0009B8                     i2u62_41:
  1857  0009B8  EFE4  F004         	goto	i2l1921
  1858  0009BC                     i2u62_40:
  1859  0009BC  5081               	movf	129,w,c	;volatile
  1860  0009BE  0BFE               	andlw	254
  1861  0009C0  6E8A               	movwf	138,c	;volatile
  1862  0009C2                     
  1863                           ;src/main.c: 72:                 User_SetState(0);
  1864  0009C2  0E00               	movlw	0
  1865  0009C4  EC6A  F007         	call	_User_SetState
  1866  0009C8                     i2l1921:
  1867                           
  1868                           ;src/main.c: 74:             i = 0;
  1869  0009C8  0E00               	movlw	0
  1870  0009CA  6E57               	movwf	_i^0,c
  1871  0009CC                     i2l1923:
  1872                           
  1873                           ;src/main.c: 76:         PIR1bits.RCIF = 0x00;
  1874  0009CC  9A9E               	bcf	158,5,c	;volatile
  1875  0009CE                     i2l75:
  1876  0009CE  C015  FFF5         	movff	??_TC0INT+10,tablat
  1877  0009D2  C014  FFF8         	movff	??_TC0INT+9,tblptru
  1878  0009D6  C013  FFF7         	movff	??_TC0INT+8,tblptrh
  1879  0009DA  C012  FFF6         	movff	??_TC0INT+7,tblptrl
  1880  0009DE  C011  FFDA         	movff	??_TC0INT+6,fsr2h
  1881  0009E2  C010  FFD9         	movff	??_TC0INT+5,fsr2l
  1882  0009E6  C00F  FFEA         	movff	??_TC0INT+4,fsr0h
  1883  0009EA  C00E  FFE9         	movff	??_TC0INT+3,fsr0l
  1884  0009EE  C00D  FFFB         	movff	??_TC0INT+2,pclatu
  1885  0009F2  C00C  FFFA         	movff	??_TC0INT+1,pclath
  1886  0009F6  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1887  0009F8  0011               	retfie		f
  1888  0009FA                     __end_of_TC0INT:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function i2_Display_SendByte *****************
  1892 ;; Defined at:
  1893 ;;		line 57 in file "src/app/display_lcd/display_lcd.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  byte            1    wreg     unsigned char 
  1896 ;;  comm            1    0[COMRAM] unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  byte            1    2[COMRAM] unsigned char 
  1899 ;;  auxByte         1    3[COMRAM] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         1       0       0       0       0       0       0
  1910 ;;      Locals:         2       0       0       0       0       0       0
  1911 ;;      Temps:          1       0       0       0       0       0       0
  1912 ;;      Totals:         4       0       0       0       0       0       0
  1913 ;;Total ram usage:        4 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_TC0INT
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text11
  1923  000C4A                     __ptext11:
  1924                           	callstack 0
  1925  000C4A                     i2_Display_SendByte:
  1926                           	callstack 27
  1927                           
  1928                           ;incstack = 0
  1929                           ;i2Display_SendByte@byte stored from wreg
  1930  000C4A  6E03               	movwf	i2Display_SendByte@byte^0,c
  1931  000C4C                     
  1932                           ;src/app/display_lcd/display_lcd.c: 61:     if(comm == 0x01) LATB = (PORTB | (1 << 3)); 
      +                          else LATB = (PORTB & ~((1 << 3)));;
  1933  000C4C  0401               	decf	i2Display_SendByte@comm^0,w,c
  1934  000C4E  A4D8               	btfss	status,2,c
  1935  000C50  EF2C  F006         	goto	i2u57_41
  1936  000C54  EF2E  F006         	goto	i2u57_40
  1937  000C58                     i2u57_41:
  1938  000C58  EF33  F006         	goto	i2l1847
  1939  000C5C                     i2u57_40:
  1940  000C5C  5081               	movf	129,w,c	;volatile
  1941  000C5E  0908               	iorlw	8
  1942  000C60  6E8A               	movwf	138,c	;volatile
  1943  000C62  EF36  F006         	goto	i2l225
  1944  000C66                     i2l1847:
  1945  000C66  5081               	movf	129,w,c	;volatile
  1946  000C68  0BF7               	andlw	247
  1947  000C6A  6E8A               	movwf	138,c	;volatile
  1948  000C6C                     i2l225:
  1949                           
  1950                           ;src/app/display_lcd/display_lcd.c: 63:     auxByte = (byte & 0xF0);
  1951  000C6C  5003               	movf	i2Display_SendByte@byte^0,w,c
  1952  000C6E  0BF0               	andlw	240
  1953  000C70  6E04               	movwf	i2Display_SendByte@auxByte^0,c
  1954                           
  1955                           ;src/app/display_lcd/display_lcd.c: 65:     LATB = ((PORTB & 0x0F) | auxByte);;
  1956  000C72  5081               	movf	129,w,c	;volatile
  1957  000C74  0B0F               	andlw	15
  1958  000C76  1004               	iorwf	i2Display_SendByte@auxByte^0,w,c
  1959  000C78  6E8A               	movwf	138,c	;volatile
  1960  000C7A  5081               	movf	129,w,c	;volatile
  1961  000C7C  0BFB               	andlw	251
  1962  000C7E  6E8A               	movwf	138,c	;volatile
  1963  000C80  5081               	movf	129,w,c	;volatile
  1964  000C82  0904               	iorlw	4
  1965  000C84  6E8A               	movwf	138,c	;volatile
  1966  000C86                     
  1967                           ;src/app/display_lcd/display_lcd.c: 69:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1968  000C86  0E53               	movlw	83
  1969  000C88                     i2u87_47:
  1970  000C88  2EE8               	decfsz	wreg,f,c
  1971  000C8A  D7FE               	bra	i2u87_47
  1972  000C8C  F000               	nop	
  1973  000C8E  5081               	movf	129,w,c	;volatile
  1974  000C90  0BFB               	andlw	251
  1975  000C92  6E8A               	movwf	138,c	;volatile
  1976  000C94                     
  1977                           ;src/app/display_lcd/display_lcd.c: 72:     auxByte = (byte << 0x04);
  1978  000C94  3803               	swapf	i2Display_SendByte@byte^0,w,c
  1979  000C96  0BF0               	andlw	240
  1980  000C98  6E04               	movwf	i2Display_SendByte@auxByte^0,c
  1981  000C9A                     
  1982                           ;src/app/display_lcd/display_lcd.c: 74:     LATB = auxByte;;
  1983  000C9A  C004  FF8A         	movff	i2Display_SendByte@auxByte,3978	;volatile
  1984  000C9E  5081               	movf	129,w,c	;volatile
  1985  000CA0  0BFB               	andlw	251
  1986  000CA2  6E8A               	movwf	138,c	;volatile
  1987  000CA4  5081               	movf	129,w,c	;volatile
  1988  000CA6  0904               	iorlw	4
  1989  000CA8  6E8A               	movwf	138,c	;volatile
  1990  000CAA                     
  1991                           ;src/app/display_lcd/display_lcd.c: 78:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  1992  000CAA  0E53               	movlw	83
  1993  000CAC                     i2u88_47:
  1994  000CAC  2EE8               	decfsz	wreg,f,c
  1995  000CAE  D7FE               	bra	i2u88_47
  1996  000CB0  F000               	nop	
  1997  000CB2  5081               	movf	129,w,c	;volatile
  1998  000CB4  0BFB               	andlw	251
  1999  000CB6  6E8A               	movwf	138,c	;volatile
  2000  000CB8                     
  2001                           ;src/app/display_lcd/display_lcd.c: 81:     _delay((unsigned long)((1)*(10000000UL/4000.
      +                          0)));
  2002  000CB8  0E04               	movlw	4
  2003  000CBA  6E02               	movwf	??i2_Display_SendByte^0,c
  2004  000CBC  0E3E               	movlw	62
  2005  000CBE                     i2u89_47:
  2006  000CBE  2EE8               	decfsz	wreg,f,c
  2007  000CC0  D7FE               	bra	i2u89_47
  2008  000CC2  2E02               	decfsz	??i2_Display_SendByte^0,f,c
  2009  000CC4  D7FC               	bra	i2u89_47
  2010  000CC6  0012               	return		;funcret
  2011  000CC8                     __end_ofi2_Display_SendByte:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _tickHook_Execute *****************
  2015 ;; Defined at:
  2016 ;;		line 89 in file "src/pic18f4520/timer/timer.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  global_timer    2    2[COMRAM] PTR unsigned long 
  2019 ;;		 -> global_timer_value(4), 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         2       0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0
  2034 ;;      Totals:         2       0       0       0       0       0       0
  2035 ;;Total ram usage:        2 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 1
  2038 ;; This function calls:
  2039 ;;		Absolute function
  2040 ;;		_tickHook_func
  2041 ;; This function is called by:
  2042 ;;		_TC0INT
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text12
  2047  000E1E                     __ptext12:
  2048                           	callstack 0
  2049  000E1E                     _tickHook_Execute:
  2050                           	callstack 26
  2051  000E1E                     
  2052                           ;src/pic18f4520/timer/timer.c: 89: void tickHook_Execute(uint32_t* global_timer_value);s
      +                          rc/pic18f4520/timer/timer.c: 90: {;src/pic18f4520/timer/timer.c: 91:     if(tickHook_fun
      +                          c_prt != ((void*)0))
  2053  000E1E  5053               	movf	_tickHook_func_prt^0,w,c
  2054  000E20  1054               	iorwf	(_tickHook_func_prt+1)^0,w,c
  2055  000E22  B4D8               	btfsc	status,2,c
  2056  000E24  EF16  F007         	goto	i2u46_41
  2057  000E28  EF18  F007         	goto	i2u46_40
  2058  000E2C                     i2u46_41:
  2059  000E2C  EF29  F007         	goto	i2l415
  2060  000E30                     i2u46_40:
  2061  000E30                     
  2062                           ;src/pic18f4520/timer/timer.c: 92:     {;src/pic18f4520/timer/timer.c: 93:         tickH
      +                          ook_func_prt(global_timer_value);
  2063  000E30  C003  F001         	movff	tickHook_Execute@global_timer_value,tickHook_func@timer_value
  2064  000E34  C004  F002         	movff	tickHook_Execute@global_timer_value+1,tickHook_func@timer_value+1
  2065  000E38  D802               	call	i2u47_48
  2066  000E3A  EF29  F007         	goto	i2u47_49
  2067  000E3E                     i2u47_48:
  2068  000E3E  0005               	push	
  2069  000E40  6EFA               	movwf	pclath,c
  2070  000E42  5053               	movf	_tickHook_func_prt^0,w,c
  2071  000E44  6EFD               	movwf	tosl,c
  2072  000E46  5054               	movf	(_tickHook_func_prt+1)^0,w,c
  2073  000E48  6EFE               	movwf	tosh,c
  2074  000E4A  50F8               	movf	tblptru,w,c
  2075  000E4C  6EFF               	movwf	tosu,c
  2076  000E4E  50FA               	movf	pclath,w,c
  2077  000E50  0012               	return		;indir
  2078  000E52                     i2u47_49:
  2079  000E52                     i2l415:
  2080  000E52  0012               	return		;funcret
  2081  000E54                     __end_of_tickHook_Execute:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _tickHook_func *****************
  2085 ;; Defined at:
  2086 ;;		line 39 in file "src/main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  timer_value     2    0[COMRAM] PTR unsigned long 
  2089 ;;		 -> global_timer_value(4), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2101 ;;      Params:         2       0       0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0
  2104 ;;      Totals:         2       0       0       0       0       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;;		_tickHook_Execute
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text13
  2116  000EAE                     __ptext13:
  2117                           	callstack 0
  2118  000EAE                     _tickHook_func:
  2119                           	callstack 26
  2120  000EAE                     
  2121                           ;src/main.c: 40:     (*timer_value)++;
  2122  000EAE  C001  FFD9         	movff	tickHook_func@timer_value,fsr2l
  2123  000EB2  C002  FFDA         	movff	tickHook_func@timer_value+1,fsr2h
  2124  000EB6  2ADE               	incf	postinc2,f,c
  2125  000EB8  0E00               	movlw	0
  2126  000EBA  22DE               	addwfc	postinc2,f,c
  2127  000EBC  22DE               	addwfc	postinc2,f,c
  2128  000EBE  22DE               	addwfc	postinc2,f,c
  2129  000EC0  0012               	return		;funcret
  2130  000EC2                     __end_of_tickHook_func:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _User_SetState *****************
  2134 ;; Defined at:
  2135 ;;		line 61 in file "src/app/bluetooth-hc-06/bluetooth_hc_06.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  state           1    wreg     _Bool 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  state           1    0[COMRAM] _Bool 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      _Bool 
  2142 ;; Registers used:
  2143 ;;		wreg
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       0       0       0       0       0       0
  2150 ;;      Locals:         1       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0
  2152 ;;      Totals:         1       0       0       0       0       0       0
  2153 ;;Total ram usage:        1 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_TC0INT
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text14
  2163  000ED4                     __ptext14:
  2164                           	callstack 0
  2165  000ED4                     _User_SetState:
  2166                           	callstack 27
  2167                           
  2168                           ;incstack = 0
  2169                           ;User_SetState@state stored from wreg
  2170  000ED4  6E01               	movwf	User_SetState@state^0,c
  2171  000ED6                     
  2172                           ;src/app/bluetooth-hc-06/bluetooth_hc_06.c: 61: _Bool User_SetState( _Bool state );src/a
      +                          pp/bluetooth-hc-06/bluetooth_hc_06.c: 62: {;src/app/bluetooth-hc-06/bluetooth_hc_06.c: 6
      +                          3:     UserConnected = state;
  2173  000ED6  C001  F056         	movff	User_SetState@state,_UserConnected
  2174  000EDA  0012               	return		;funcret
  2175  000EDC                     __end_of_User_SetState:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _Display_WriteString *****************
  2179 ;; Defined at:
  2180 ;;		line 109 in file "src/app/display_lcd/display_lcd.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  string          2    3[COMRAM] PTR unsigned char 
  2183 ;;		 -> STR_13(14), STR_12(9), STR_11(17), STR_10(16), 
  2184 ;;		 -> vector(3), 
  2185 ;;  length          1    5[COMRAM] unsigned char 
  2186 ;;  address         1    6[COMRAM] unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  auxLength       1    9[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2198 ;;      Params:         4       0       0       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0       0       0
  2200 ;;      Temps:          2       0       0       0       0       0       0
  2201 ;;      Totals:         7       0       0       0       0       0       0
  2202 ;;Total ram usage:        7 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 1
  2205 ;; This function calls:
  2206 ;;		_Display_WriteByte
  2207 ;; This function is called by:
  2208 ;;		_TC0INT
  2209 ;;		_StartSystem
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text15
  2214  000D92                     __ptext15:
  2215                           	callstack 0
  2216  000D92                     _Display_WriteString:
  2217                           	callstack 26
  2218  000D92                     
  2219                           ;src/app/display_lcd/display_lcd.c: 109: void Display_WriteString(char* string, uint8_t 
      +                          length, uint8_t address);src/app/display_lcd/display_lcd.c: 110: {;src/app/display_lcd/d
      +                          isplay_lcd.c: 111:     uint8_t auxLength = 0x00;
  2220  000D92  0E00               	movlw	0
  2221  000D94  6E0A               	movwf	Display_WriteString@auxLength^0,c
  2222                           
  2223                           ;src/app/display_lcd/display_lcd.c: 114:     for(auxLength = 0; auxLength < length; auxL
      +                          ength++)
  2224  000D96  0E00               	movlw	0
  2225  000D98  6E0A               	movwf	Display_WriteString@auxLength^0,c
  2226  000D9A  EFE8  F006         	goto	i2l1767
  2227  000D9E                     i2l1763:
  2228                           
  2229                           ;src/app/display_lcd/display_lcd.c: 115:     {;src/app/display_lcd/display_lcd.c: 116:  
      +                                 Display_WriteByte((uint8_t)string[auxLength]);
  2230  000D9E  500A               	movf	Display_WriteString@auxLength^0,w,c
  2231  000DA0  2404               	addwf	Display_WriteString@string^0,w,c
  2232  000DA2  6E08               	movwf	??_Display_WriteString^0,c
  2233  000DA4  0E00               	movlw	0
  2234  000DA6  2005               	addwfc	(Display_WriteString@string+1)^0,w,c
  2235  000DA8  6E09               	movwf	(??_Display_WriteString+1)^0,c
  2236  000DAA  C008  FFF6         	movff	??_Display_WriteString,tblptrl
  2237  000DAE  C009  FFF7         	movff	??_Display_WriteString+1,tblptrh
  2238  000DB2  6AF8               	clrf	tblptru,c
  2239  000DB4  0E05               	movlw	(high __ramtop+-1)
  2240  000DB6  64F7               	cpfsgt	tblptrh,c
  2241  000DB8  D003               	bra	i2u48_47
  2242  000DBA  0008               	tblrd		*
  2243  000DBC  50F5               	movf	tablat,w,c
  2244  000DBE  D005               	bra	i2u48_40
  2245  000DC0                     i2u48_47:
  2246  000DC0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2247  000DC4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2248  000DC8  50EF               	movf	indf0,w,c
  2249  000DCA                     i2u48_40:
  2250  000DCA  EC64  F006         	call	_Display_WriteByte
  2251  000DCE                     
  2252                           ;src/app/display_lcd/display_lcd.c: 117:     }
  2253  000DCE  2A0A               	incf	Display_WriteString@auxLength^0,f,c
  2254  000DD0                     i2l1767:
  2255  000DD0  5006               	movf	Display_WriteString@length^0,w,c
  2256  000DD2  5C0A               	subwf	Display_WriteString@auxLength^0,w,c
  2257  000DD4  A0D8               	btfss	status,0,c
  2258  000DD6  EFEF  F006         	goto	i2u49_41
  2259  000DDA  EFF1  F006         	goto	i2u49_40
  2260  000DDE                     i2u49_41:
  2261  000DDE  EFCF  F006         	goto	i2l1763
  2262  000DE2                     i2u49_40:
  2263  000DE2  0012               	return		;funcret
  2264  000DE4                     __end_of_Display_WriteString:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _Display_WriteByte *****************
  2268 ;; Defined at:
  2269 ;;		line 84 in file "src/app/display_lcd/display_lcd.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  byte            1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  byte            1    1[COMRAM] unsigned char 
  2274 ;;  auxByte         1    2[COMRAM] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2284 ;;      Params:         0       0       0       0       0       0       0
  2285 ;;      Locals:         2       0       0       0       0       0       0
  2286 ;;      Temps:          1       0       0       0       0       0       0
  2287 ;;      Totals:         3       0       0       0       0       0       0
  2288 ;;Total ram usage:        3 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_Display_WriteString
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text16
  2298  000CC8                     __ptext16:
  2299                           	callstack 0
  2300  000CC8                     _Display_WriteByte:
  2301                           	callstack 26
  2302                           
  2303                           ;incstack = 0
  2304                           ;Display_WriteByte@byte stored from wreg
  2305  000CC8  6E02               	movwf	Display_WriteByte@byte^0,c
  2306  000CCA  5081               	movf	129,w,c	;volatile
  2307  000CCC  0908               	iorlw	8
  2308  000CCE  6E8A               	movwf	138,c	;volatile
  2309  000CD0                     
  2310                           ;src/app/display_lcd/display_lcd.c: 89:     auxByte = (byte & 0xF0);
  2311  000CD0  5002               	movf	Display_WriteByte@byte^0,w,c
  2312  000CD2  0BF0               	andlw	240
  2313  000CD4  6E03               	movwf	Display_WriteByte@auxByte^0,c
  2314                           
  2315                           ;src/app/display_lcd/display_lcd.c: 90:     LATB = ((PORTB & 0x0F) | auxByte);;
  2316  000CD6  5081               	movf	129,w,c	;volatile
  2317  000CD8  0B0F               	andlw	15
  2318  000CDA  1003               	iorwf	Display_WriteByte@auxByte^0,w,c
  2319  000CDC  6E8A               	movwf	138,c	;volatile
  2320  000CDE  5081               	movf	129,w,c	;volatile
  2321  000CE0  0BFB               	andlw	251
  2322  000CE2  6E8A               	movwf	138,c	;volatile
  2323  000CE4  5081               	movf	129,w,c	;volatile
  2324  000CE6  0904               	iorlw	4
  2325  000CE8  6E8A               	movwf	138,c	;volatile
  2326  000CEA                     
  2327                           ;src/app/display_lcd/display_lcd.c: 94:     _delay((unsigned long)((100)*(10000000UL/400
      +                          0000.0)));
  2328  000CEA  0E53               	movlw	83
  2329  000CEC                     i2u90_47:
  2330  000CEC  2EE8               	decfsz	wreg,f,c
  2331  000CEE  D7FE               	bra	i2u90_47
  2332  000CF0  F000               	nop	
  2333  000CF2  5081               	movf	129,w,c	;volatile
  2334  000CF4  0BFB               	andlw	251
  2335  000CF6  6E8A               	movwf	138,c	;volatile
  2336  000CF8                     
  2337                           ;src/app/display_lcd/display_lcd.c: 98:     auxByte = (byte << 0x04);
  2338  000CF8  3802               	swapf	Display_WriteByte@byte^0,w,c
  2339  000CFA  0BF0               	andlw	240
  2340  000CFC  6E03               	movwf	Display_WriteByte@auxByte^0,c
  2341                           
  2342                           ;src/app/display_lcd/display_lcd.c: 99:     LATB = ((PORTB & 0x0F) | auxByte);;
  2343  000CFE  5081               	movf	129,w,c	;volatile
  2344  000D00  0B0F               	andlw	15
  2345  000D02  1003               	iorwf	Display_WriteByte@auxByte^0,w,c
  2346  000D04  6E8A               	movwf	138,c	;volatile
  2347  000D06  5081               	movf	129,w,c	;volatile
  2348  000D08  0BFB               	andlw	251
  2349  000D0A  6E8A               	movwf	138,c	;volatile
  2350  000D0C  5081               	movf	129,w,c	;volatile
  2351  000D0E  0904               	iorlw	4
  2352  000D10  6E8A               	movwf	138,c	;volatile
  2353  000D12                     
  2354                           ;src/app/display_lcd/display_lcd.c: 103:     _delay((unsigned long)((100)*(10000000UL/40
      +                          00000.0)));
  2355  000D12  0E53               	movlw	83
  2356  000D14                     i2u91_47:
  2357  000D14  2EE8               	decfsz	wreg,f,c
  2358  000D16  D7FE               	bra	i2u91_47
  2359  000D18  F000               	nop	
  2360  000D1A  5081               	movf	129,w,c	;volatile
  2361  000D1C  0BFB               	andlw	251
  2362  000D1E  6E8A               	movwf	138,c	;volatile
  2363  000D20                     
  2364                           ;src/app/display_lcd/display_lcd.c: 106:     _delay((unsigned long)((2)*(10000000UL/4000
      +                          .0)));
  2365  000D20  0E07               	movlw	7
  2366  000D22  6E01               	movwf	??_Display_WriteByte^0,c
  2367  000D24  0E7D               	movlw	125
  2368  000D26                     i2u92_47:
  2369  000D26  2EE8               	decfsz	wreg,f,c
  2370  000D28  D7FE               	bra	i2u92_47
  2371  000D2A  2E01               	decfsz	??_Display_WriteByte^0,f,c
  2372  000D2C  D7FC               	bra	i2u92_47
  2373  000D2E  F000               	nop	
  2374  000D30  0012               	return		;funcret
  2375  000D32                     __end_of_Display_WriteByte:
  2376                           	callstack 0
  2377                           
  2378                           	psect	text17
  2379  000000                     __ptext17:
  2380                           	callstack 0
  2381  000000                     
  2382                           	psect	rparam
  2383  0000                     
  2384                           	psect	temp
  2385  000065                     btemp:
  2386                           	callstack 0
  2387  000065                     	ds	1
  2388  0000                     int$flags	set	btemp
  2389  0000                     wtemp8	set	btemp+1
  2390  0000                     ttemp5	set	btemp+1
  2391  0000                     ttemp6	set	btemp+4
  2392  0000                     ttemp7	set	btemp+8
  2393                           
  2394                           	psect	idloc
  2395                           
  2396                           ;Config register IDLOC0 @ 0x200000
  2397                           ;	unspecified, using default values
  2398  200000                     	org	2097152
  2399  200000  FF                 	db	255
  2400                           
  2401                           ;Config register IDLOC1 @ 0x200001
  2402                           ;	unspecified, using default values
  2403  200001                     	org	2097153
  2404  200001  FF                 	db	255
  2405                           
  2406                           ;Config register IDLOC2 @ 0x200002
  2407                           ;	unspecified, using default values
  2408  200002                     	org	2097154
  2409  200002  FF                 	db	255
  2410                           
  2411                           ;Config register IDLOC3 @ 0x200003
  2412                           ;	unspecified, using default values
  2413  200003                     	org	2097155
  2414  200003  FF                 	db	255
  2415                           
  2416                           ;Config register IDLOC4 @ 0x200004
  2417                           ;	unspecified, using default values
  2418  200004                     	org	2097156
  2419  200004  FF                 	db	255
  2420                           
  2421                           ;Config register IDLOC5 @ 0x200005
  2422                           ;	unspecified, using default values
  2423  200005                     	org	2097157
  2424  200005  FF                 	db	255
  2425                           
  2426                           ;Config register IDLOC6 @ 0x200006
  2427                           ;	unspecified, using default values
  2428  200006                     	org	2097158
  2429  200006  FF                 	db	255
  2430                           
  2431                           ;Config register IDLOC7 @ 0x200007
  2432                           ;	unspecified, using default values
  2433  200007                     	org	2097159
  2434  200007  FF                 	db	255
  2435                           
  2436                           	psect	config
  2437                           
  2438                           ; Padding undefined space
  2439  300000                     	org	3145728
  2440  300000  FF                 	db	255
  2441                           
  2442                           ;Config register CONFIG1H @ 0x300001
  2443                           ;	Oscillator Selection bits
  2444                           ;	OSC = HS, HS oscillator
  2445                           ;	Fail-Safe Clock Monitor Enable bit
  2446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2447                           ;	Internal/External Oscillator Switchover bit
  2448                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2449  300001                     	org	3145729
  2450  300001  02                 	db	2
  2451                           
  2452                           ;Config register CONFIG2L @ 0x300002
  2453                           ;	Power-up Timer Enable bit
  2454                           ;	PWRT = OFF, PWRT disabled
  2455                           ;	Brown-out Reset Enable bits
  2456                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2457                           ;	Brown Out Reset Voltage bits
  2458                           ;	BORV = 3, Minimum setting
  2459  300002                     	org	3145730
  2460  300002  1F                 	db	31
  2461                           
  2462                           ;Config register CONFIG2H @ 0x300003
  2463                           ;	Watchdog Timer Enable bit
  2464                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2465                           ;	Watchdog Timer Postscale Select bits
  2466                           ;	WDTPS = 32768, 1:32768
  2467  300003                     	org	3145731
  2468  300003  1E                 	db	30
  2469                           
  2470                           ; Padding undefined space
  2471  300004                     	org	3145732
  2472  300004  FF                 	db	255
  2473                           
  2474                           ;Config register CONFIG3H @ 0x300005
  2475                           ;	CCP2 MUX bit
  2476                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2477                           ;	PORTB A/D Enable bit
  2478                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2479                           ;	Low-Power Timer1 Oscillator Enable bit
  2480                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2481                           ;	MCLR Pin Enable bit
  2482                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2483  300005                     	org	3145733
  2484  300005  81                 	db	129
  2485                           
  2486                           ;Config register CONFIG4L @ 0x300006
  2487                           ;	Stack Full/Underflow Reset Enable bit
  2488                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2489                           ;	Single-Supply ICSP Enable bit
  2490                           ;	LVP = OFF, Single-Supply ICSP disabled
  2491                           ;	Extended Instruction Set Enable bit
  2492                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2493                           ;	Background Debugger Enable bit
  2494                           ;	DEBUG = 0x1, unprogrammed default
  2495  300006                     	org	3145734
  2496  300006  81                 	db	129
  2497                           
  2498                           ; Padding undefined space
  2499  300007                     	org	3145735
  2500  300007  FF                 	db	255
  2501                           
  2502                           ;Config register CONFIG5L @ 0x300008
  2503                           ;	Code Protection bit
  2504                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2505                           ;	Code Protection bit
  2506                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2507                           ;	Code Protection bit
  2508                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2509                           ;	Code Protection bit
  2510                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2511  300008                     	org	3145736
  2512  300008  0F                 	db	15
  2513                           
  2514                           ;Config register CONFIG5H @ 0x300009
  2515                           ;	Boot Block Code Protection bit
  2516                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2517                           ;	Data EEPROM Code Protection bit
  2518                           ;	CPD = OFF, Data EEPROM not code-protected
  2519  300009                     	org	3145737
  2520  300009  C0                 	db	192
  2521                           
  2522                           ;Config register CONFIG6L @ 0x30000A
  2523                           ;	Write Protection bit
  2524                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2525                           ;	Write Protection bit
  2526                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2527                           ;	Write Protection bit
  2528                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2529                           ;	Write Protection bit
  2530                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2531  30000A                     	org	3145738
  2532  30000A  0F                 	db	15
  2533                           
  2534                           ;Config register CONFIG6H @ 0x30000B
  2535                           ;	Configuration Register Write Protection bit
  2536                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2537                           ;	Boot Block Write Protection bit
  2538                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2539                           ;	Data EEPROM Write Protection bit
  2540                           ;	WRTD = OFF, Data EEPROM not write-protected
  2541  30000B                     	org	3145739
  2542  30000B  E0                 	db	224
  2543                           
  2544                           ;Config register CONFIG7L @ 0x30000C
  2545                           ;	Table Read Protection bit
  2546                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2547                           ;	Table Read Protection bit
  2548                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2549                           ;	Table Read Protection bit
  2550                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2551                           ;	Table Read Protection bit
  2552                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2553  30000C                     	org	3145740
  2554  30000C  0F                 	db	15
  2555                           
  2556                           ;Config register CONFIG7H @ 0x30000D
  2557                           ;	Boot Block Table Read Protection bit
  2558                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2559  30000D                     	org	3145741
  2560  30000D  40                 	db	64
  2561                           tosu	equ	0xFFF
  2562                           tosh	equ	0xFFE
  2563                           tosl	equ	0xFFD
  2564                           stkptr	equ	0xFFC
  2565                           pclatu	equ	0xFFB
  2566                           pclath	equ	0xFFA
  2567                           pcl	equ	0xFF9
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           indf0	equ	0xFEF
  2575                           postinc0	equ	0xFEE
  2576                           postdec0	equ	0xFED
  2577                           preinc0	equ	0xFEC
  2578                           plusw0	equ	0xFEB
  2579                           fsr0h	equ	0xFEA
  2580                           fsr0l	equ	0xFE9
  2581                           wreg	equ	0xFE8
  2582                           indf1	equ	0xFE7
  2583                           postinc1	equ	0xFE6
  2584                           postdec1	equ	0xFE5
  2585                           preinc1	equ	0xFE4
  2586                           plusw1	equ	0xFE3
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           bsr	equ	0xFE0
  2590                           indf2	equ	0xFDF
  2591                           postinc2	equ	0xFDE
  2592                           postdec2	equ	0xFDD
  2593                           preinc2	equ	0xFDC
  2594                           plusw2	equ	0xFDB
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        38
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40     100
    BANK0           128      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Absolute function$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickFunc$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    tickHook_func_prt$0	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    tickHook_Execute@global_timer_value	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 

    Timer0_SetTickHook@tickFunc	PTR FTN(PTR unsigned long ,)void  size(2) Largest target is 1
		 -> tickHook_func(), 

    tickHook_func_prt	PTR FTN(PTR unsigned long ,)void  size(2) Largest target is 1
		 -> Absolute function(), tickHook_func(), 

    Timer0_Config@timerConfig	PTR struct . size(2) Largest target is 5
		 -> timerConfig(COMRAM[5]), 

    Serial_1_Config@serialConfig	PTR struct . size(2) Largest target is 7
		 -> serialConfig(COMRAM[7]), 

    Display_WriteString@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[17]), STR_10(CODE[16]), 
		 -> vector(COMRAM[3]), 

    sp__DHT11_GetHum	PTR unsigned char  size(2) Largest target is 2
		 -> humidity(COMRAM[2]), 

    sp__DHT11_GetTemp	PTR unsigned char  size(2) Largest target is 2
		 -> temperature(COMRAM[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 8
		 -> BLUETOOTH_BAUD_COMM(COMRAM[8]), 

    tickHook_func@timer_value	PTR unsigned long  size(2) Largest target is 4
		 -> global_timer_value(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_Serial_1_Config
    _Serial_1_Config->___lldiv
    _DisplayLCD_Init->_Display_SendByte

Critical Paths under _TC0INT in COMRAM

    _TC0INT->_Display_WriteString
    _tickHook_Execute->_tickHook_func
    _Display_WriteString->_Display_WriteByte

Critical Paths under _main in BANK0

    _main->_Serial_1_Config

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2698
                    _DisplayLCD_Init
             _Interrupt_GlobalEnable
                    _Serial_1_Config
                      _Timer0_Config
                 _Timer0_SetTickHook
                      _User_GetState
 ---------------------------------------------------------------------------------
 (1) _User_GetState                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_SetTickHook                                   2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer0_Config                                        3     1      2     164
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Serial_1_Config                                     13    11      2    1875
                                             34 COMRAM     6     4      2
                                              0 BANK0      7     7      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Interrupt_GlobalEnable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayLCD_Init                                      1     1      0     558
                                             25 COMRAM     1     1      0
                   _Display_SendByte
                         _sendNibble
 ---------------------------------------------------------------------------------
 (2) _sendNibble                                           3     3      0      15
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Display_SendByte                                     4     3      1     543
                                             21 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TC0INT                                              11    11      0    1656
                                             10 COMRAM    11    11      0
                _Display_WriteString
                      _User_SetState
                   _tickHook_Execute
                 i2_Display_SendByte
 ---------------------------------------------------------------------------------
 (4) i2_Display_SendByte                                   4     3      1     139
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) _tickHook_Execute                                     2     0      2     173
                                              2 COMRAM     2     0      2
                   Absolute function *
                      _tickHook_func *
 ---------------------------------------------------------------------------------
 (5) _tickHook_func                                        2     0      2      75
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (4) _User_SetState                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Display_WriteString                                  7     3      4    1322
                                              3 COMRAM     7     3      4
                  _Display_WriteByte
 ---------------------------------------------------------------------------------
 (5) _Display_WriteByte                                    3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayLCD_Init
     _Display_SendByte
     _sendNibble
   _Interrupt_GlobalEnable
   _Serial_1_Config
     ___lldiv
   _Timer0_Config
   _Timer0_SetTickHook
   _User_GetState

 _TC0INT (ROOT)
   _Display_WriteString
     _Display_WriteByte
   _User_SetState
   _tickHook_Execute
     Absolute function(Fake) *
     _tickHook_func *
   i2_Display_SendByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      7       7       5        5.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      64       1       79.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B      15        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 05 00:14:15 2021

               ??_Display_WriteByte 0001                                   _i 0057  
                                l81 0B6A                                  l88 0B80  
                                l97 0BBE                                 l212 0D90  
                               l132 0EDE                                 l221 0E86  
                               l231 0C16                                 l216 0E5C  
                               l233 0C26                                 l225 0BEE  
                               l227 0C02                                 l411 0ECA  
                               l405 0B3A                                 l238 0C48  
                               l370 08BA                                 l371 08C0  
                               l348 0ED2                                 l367 085A  
                               l465 0A9C                                 l369 08B6  
                               l458 0A8C                      ?_User_GetState 0001  
                               u420 0BDE                                 u500 0B12  
                               u421 0BDA                                 u501 0B0E  
                               u700 0A6A                                 u701 0A66  
                               u715 0678                                 u740 084E  
                               u741 084A                                 u725 06D0  
                               u750 086C                                 u807 0D86  
                               u751 0868                                 u735 0728  
                               u680 0A20                                 u760 08AE  
                               u817 0E6C                                 u681 0A1C  
                               u761 08AA                                 u690 0A42  
                               u770 0B94                                 u827 0E7E  
                               u691 0A3E                                 u771 0B90  
                               u780 0BB8                                 u837 0C0A  
                               u781 0BB4                                 u847 0C2E  
                               u857 0C40                                 u797 0D38  
             ??_Display_WriteString 0008                                 tosl 000FFD  
                               wreg 000FE8              i2Display_SendByte@comm 0001  
            i2Display_SendByte@byte 0003           __end_of_Display_WriteByte 0D32  
    __end_of_Interrupt_GlobalEnable 0ED4                                l1201 0E6A  
                              l2001 0A0A                                l2011 0A4C  
                              l2003 0A20                                l1205 0E72  
                              l2013 0A6A                                l2005 0A28  
                              l2021 064A                                l1207 0E78  
                              l2015 0A7A                                l2007 0A34  
                              l2031 0834                                l2023 0752  
                              l2017 0A7C                                l2009 0A42  
                              l2041 0856                                l2033 0836  
                              l2025 079C                                l2019 0A86  
                              l2051 0892                                l2043 086C  
                              l2035 0838                                l2027 07E6  
                              l2053 08AE                                l2045 0870  
                              l2037 083C                                l2029 0830  
                              l2061 0B58                                l2047 0874  
                              l2039 084E                                l2071 0B70  
                              l2063 0B64                                l2055 0B3C  
                              l1193 0E56                                l2049 0890  
                              l2081 0B94                                l2057 0B40  
                              l2075 0B76                                l2059 0B4C  
                              l1701 0C3A                                l1197 0E56  
                              l1277 0ECC                                l1349 0EDC  
                              l2077 0B7C                                l2095 0BB8  
                              l2087 0B9A                                l2079 0B80  
                              l2089 0BA4                                l1821 0D32  
                              l1671 0BDE                                l1831 0D58  
                              l1823 0D42                                l1681 0C08  
                              l1673 0BE8                                l1833 0D62  
                              l1825 0D46                                l1691 0C20  
                              l1667 0BCE                                l1835 0D6C  
                              l1827 0D4C                                l1771 0A9E  
                              l1685 0C10                                l1677 0BFC  
                              l1669 0BCE                                l1837 0D76  
                              l1829 0D52                                l1781 0B30  
                              l1773 0AA0                                l1695 0C2C  
                              l1687 0C1C                                l1839 0D80  
                              l1783 0B38                                l1775 0B12  
                              l1777 0B2C                                l1785 0EC2  
                              l1699 0C34                                l1779 0B2E  
                              l1999 09FA                                STR_1 0639  
                              STR_2 063B                                STR_3 063D  
                              STR_4 063F                                STR_5 0641  
                              STR_6 0643                                STR_7 0645  
                              STR_8 0647                                _LATB 000F8A  
                              _LATD 000F8C                                i2l59 0EC0  
                              i2l75 09CE                                _TMR0 000FD6  
                              _TRMT 007D61                      ?_User_SetState 0001  
                              _main 0B3C                                fsr0h 000FEA  
                              indf0 000FEF                                fsr2h 000FDA  
                              fsr0l 000FE9                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 0065                                prodh 000FF4  
                              prodl 000FF3                                start 000E  
                      ___param_bank 000000                               ?_main 0001  
                             STR_10 0612                               STR_11 0601  
                             STR_12 0630                               STR_13 0622  
                   __end_of___lldiv 0A9E                               i2l135 0EDA  
                             i2l231 0C94                               i2l233 0CA4  
                             i2l225 0C6C                               i2l250 0D0C  
                             i2l242 0CD0                               i2l227 0C80  
                             i2l244 0CE4                               i2l261 0DE2  
                             i2l238 0CC6                               i2l255 0D30  
                             i2l415 0E52                               i2l248 0CF8  
                             _RCREG 000FAE                               _SPBRG 000FAF  
                             _PORTB 000F81                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TXREG 000FAD  
                             _count 0058                               pclath 000FFA  
                             tablat 000FF5               __end_of_Timer0_Config 0B3C  
                             ttemp5 0066                               ttemp6 0069  
                             ttemp7 006D                               status 000FD8  
                             wtemp8 0066                     __initialization 0DE4  
                      __end_of_main 0BCC                     _Serial_1_Config 064A  
                   ??_User_GetState 0016               __end_of_tickHook_func 0EC2  
                   _DisplayLCD_Init 0D32                              ??_main 0029  
       Serial_1_Config@serialConfig 0023                       __activetblptr 000002  
        Serial_1_Config@error_8HIGH 0085          __size_of_Display_WriteByte 006A  
                   ??_User_SetState 0001                              _TC0INT 0008  
          __end_of_tickHook_Execute 0E54                              i2l1711 0CDE  
                            i2l1703 0CCA                              i2l1705 0CCA  
                            i2l1731 0D1A                              i2l1723 0D06  
                            i2l1715 0CEA                              i2l1733 0D20  
                            i2l1901 0974                              i2l1727 0D12  
                            i2l1719 0CF2                              i2l1911 09AA  
                            i2l1903 0988                              i2l1761 0D92  
                            i2l1665 0EAE                              i2l1841 0C4C  
                            i2l1921 09C8                              i2l1905 099A  
                            i2l1763 0D9E                              i2l1851 0C7A  
                            i2l1843 0C4C                              i2l1923 09CC  
                            i2l1765 0DCE                              i2l1757 0E1E  
                            i2l1861 0C9A                              i2l1845 0C5C  
                            i2l1917 09BC                              i2l1909 09A0  
                            i2l1767 0DD0                              i2l1759 0E30  
                            i2l1855 0C86                              i2l1847 0C66  
                            i2l1919 09C2                              i2l1769 0ED6  
                            i2l1873 0CB2                              i2l1865 0C9E  
                            i2l1881 0906                              i2l1875 0CB8  
                            i2l1859 0C8E                              i2l1891 0932  
                            i2l1883 090E                              i2l1869 0CAA  
                            i2l1893 0944                              i2l1885 0910  
                            i2l1877 08EC                              i2l1895 0954  
                            i2l1887 091E                              i2l1879 08FA  
                            i2l1897 095A                              i2l1889 0922  
                            i2l1899 0964         __size_ofi2_Display_SendByte 007E  
                         ??___lldiv 001E                              clear_0 0E0A  
           Serial_1_Config@brg8HIGH 0083                              isa$std 000001  
                            _vector 005E                        __pdataCOMRAM 0029  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                        __accesstop 0080             __end_of__initialization 0E10  
                     ___rparam_used 000001             __end_of_Serial_1_Config 08C2  
         __size_of_Display_SendByte 007E         __size_of_Timer0_SetTickHook 000A  
                    __pcstackCOMRAM 0001             __end_of_DisplayLCD_Init 0D92  
        Timer0_SetTickHook@tickFunc 0016          Display_WriteString@address 0007  
                           ?_TC0INT 0001         __end_of_Display_WriteString 0DE4  
                           i2u60_40 0944                             i2u60_41 0940  
                           i2u61_40 099A                             i2u61_41 0996  
                           i2u46_40 0E30                             i2u62_40 09BC  
                           i2u46_41 0E2C                             i2u62_41 09B8  
                           i2u48_40 0DCA                             i2u47_48 0E3E  
                           i2u47_49 0E52                             i2u48_47 0DC0  
                           i2u49_40 0DE2                             i2u57_40 0C5C  
                           i2u49_41 0DDE                             i2u57_41 0C58  
                           i2u58_40 08FA                             i2u58_41 08F6  
                           i2u90_47 0CEC                             i2u59_40 091E  
                           i2u59_41 091A                             i2u91_47 0D14  
                           i2u92_47 0D26                             i2u86_47 096A  
                           i2u87_47 0C88                             i2u88_47 0CAC  
                           i2u89_47 0CBE                     __size_of_TC0INT 09F2  
                           __Hparam 0000                    ?_Serial_1_Config 0023  
                           __Lparam 0000                    ?_DisplayLCD_Init 0001  
                           ___lldiv 09FA                        __psmallconst 0600  
                           __pcinit 0DE4                             __ramtop 0600  
                           __ptext0 0B3C                             __ptext1 0EDC  
                           __ptext2 0EC2                             __ptext3 0A9E  
                           __ptext4 064A                             __ptext5 09FA  
                           __ptext6 0ECC                             __ptext7 0D32  
                           __ptext8 0E54                             __ptext9 0BCC  
                         _T0CONbits 000FD5            Serial_1_Config@brg16HIGH 0084  
              Display_SendByte@comm 0016                Display_SendByte@byte 0018  
                    __pintcode_body 08C2                          _sendNibble 0E54  
              end_of_initialization 0E10                   ?_tickHook_Execute 0003  
                     __Lmediumconst 0000                             int_func 08C2  
                ??_tickHook_Execute 0005                     ___lldiv@divisor 001A  
                   ___lldiv@counter 0022                    _Display_SendByte 0BCC  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postinc0 000FEE                             postinc2 000FDE  
            __size_of_Timer0_Config 009E               __end_of_User_GetState 0EE0  
          ??_Interrupt_GlobalEnable 0016             Display_SendByte@auxByte 0019  
             Display_WriteByte@byte 0002            Serial_1_Config@error_min 0086  
             __end_of_User_SetState 0EDC                      __end_of_TC0INT 09FA  
        __end_ofi2_Display_SendByte 0CC8                           _TXSTAbits 000FAC  
            __size_of_tickHook_func 0014                    fp__tickHook_func 0000  
                     _TimeIsElapsed 0055                         _BAUDCONbits 000FB8  
                     __pidataCOMRAM 0E88                 start_initialization 0DE4  
                       ?_sendNibble 0001                            ??_TC0INT 000B  
          Timer0_Config@timerConfig 0016           Serial_1_Config@error_8LOW 0080  
                     _Timer0_Config 0A9E          __end_of_Timer0_SetTickHook 0ECC  
            Serial_1_Config@brg8LOW 0082                       _tickHook_func 0EAE  
   __size_of_Interrupt_GlobalEnable 0008                         __pbssCOMRAM 004F  
                     __pcstackBANK0 0080                      ?_Timer0_Config 0016  
         Display_WriteString@length 0006           Display_WriteString@string 0004  
                User_SetState@state 0001                           __pintcode 0008  
                          ?___lldiv 0016                 __size_of_sendNibble 0034  
                    ?_tickHook_func 0001                         __smallconst 0600  
      __size_of_Display_WriteString 0052            __end_of_Display_SendByte 0C4A  
            _Interrupt_GlobalEnable 0ECC                            _PIE1bits 000F9D  
tickHook_Execute@global_timer_value 0003                            _PIR1bits 000F9E  
                          _RCONbits 000FD0           __size_of_tickHook_Execute 0036  
          __size_of_Serial_1_Config 0278                 _BLUETOOTH_BAUD_COMM 003C  
          __size_of_DisplayLCD_Init 0060                     ??_Timer0_Config 0018  
                       _INTCON2bits 000FF1                           copy_data0 0DF8  
               _BLUETOOTH_NAME_COMM 0034                            __Hrparam 0000  
                          __Lrparam 0000                    sendNibble@nibble 0017  
                   ??_tickHook_func 0003                    __size_of___lldiv 00A4  
                i2_Display_SendByte 0C4A                 ?i2_Display_SendByte 0001  
                          __ptext11 0C4A                            __ptext12 0E1E  
                          __ptext13 0EAE                            __ptext14 0ED4  
                          __ptext15 0D92                            __ptext16 0CC8  
                          __ptext17 0000                        ??_sendNibble 0016  
                     __size_of_main 0090                        _serialConfig 0044  
         i2Display_SendByte@auxByte 0004                            _humidity 0061  
            __size_of_User_GetState 0004                ??i2_Display_SendByte 0002  
                          isa$xinst 000000                            int$flags 0065  
                __end_of_sendNibble 0E88                  _Timer0_SetTickHook 0EC2  
            __size_of_User_SetState 0008                          _INTCONbits 000FF2  
               ?_Timer0_SetTickHook 0016                   ??_Serial_1_Config 0025  
                 ??_DisplayLCD_Init 001A                            intlevel2 0000  
                _BLUETOOTH_PIN_COMM 0029         Serial_1_Config@error_16HIGH 0081  
            Timer0_WaitMS@timeStart 004F                    ___lldiv@dividend 0016  
               _Display_WriteString 0D92                ??_Timer0_SetTickHook 0018  
                     _UserConnected 0056                  _global_timer_value 004B  
                  _tickHook_Execute 0E1E        Display_WriteString@auxLength 000A  
                       _temperature 0063                         _timerConfig 0059  
                     _User_GetState 0EDC                    ___lldiv@quotient 001E  
              ?_Display_WriteString 0004                   _tickHook_func_prt 0053  
          Display_WriteByte@auxByte 0003                   ?_Display_SendByte 0016  
                ??_Display_SendByte 0017            tickHook_func@timer_value 0001  
                 _Display_WriteByte 0CC8             ?_Interrupt_GlobalEnable 0001  
                     _User_SetState 0ED4                  ?_Display_WriteByte 0001  
